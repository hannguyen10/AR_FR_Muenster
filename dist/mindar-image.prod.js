/*! For license information please see mindar-image.prod.js.LICENSE.txt */
(()=>{var t={2948:(t,e,n)=>{var r=n(2140),s=n(9980),i=n(1730),a=n(7405),o=n(4026),l=n(865),u=n(8721);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},2140:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},865:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},9980:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},4026:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},7405:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},1730:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},8721:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(s)]}}():t,3),r),p=new f(r),y=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(y,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(914)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},3129:(t,e,n)=>{var r=n(626),s=n(477),i=n(2868),a=n(8197),o=n(1954),l=n(2408),u=n(1662);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},626:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},2408:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},477:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},1954:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},8197:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},2868:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1662:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(s)]}}():t,3),r),p=new f(r),y=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(y,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(5778)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},8485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var r=n(8081),s=n.n(r),i=n(3645),a=n.n(i)()(s());a.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const o=a},3645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,s,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(a[l]=!0)}for(var u=0;u<t.length;u++){var c=[].concat(t[u]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),e.push(c))}},e}},8081:t=>{"use strict";t.exports=function(t){return t[1]}},3720:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=i[t])?r:(n=l(t,(0|t)<0?-1:0,!0),a&&(i[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=s[t])?r:(n=l(t,t<0?-1:0,!1),a&&(s[t]=n),n)}function o(t,e){if(isNaN(t))return e?b:g;if(e){if(t<0)return b;if(t>=p)return k}else{if(t<=-f)return I;if(t+1>=f)return v}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var s=o(u(n,8)),i=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),h=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=(i=i.mul(s)).add(o(h))}return i.unsigned=e,i}function h(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?c(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var b=a(0,!0);n.UZERO=b;var x=a(1);n.ONE=x;var y=a(1,!0);n.UONE=y;var w=a(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=o(u(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=(i.sub(l.mul(s)).toInt()>>>0).toString(t);if((i=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(t){return r(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(r(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(t){r(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&t.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=e+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(t){return r(t)||(t=h(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=h(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,u=t.high>>>16,c=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,b=0,x=0,y=0;return x+=(y+=a*p)>>>16,b+=(x+=i*p)>>>16,x&=65535,b+=(x+=a*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=i*d)>>>16,b&=65535,f+=(b+=a*c)>>>16,f+=n*p+s*d+i*c+a*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(r(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,s,i;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return b;if(t.gt(this.shru(1)))return y;i=b}else{if(this.eq(I))return t.eq(x)||t.eq(w)?I:t.eq(I)?x:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?x:w:(s=this.sub(t.mul(n)),i=n.add(s.div(t)));if(t.eq(I))return this.unsigned?b:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=g}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(t);d.isZero()&&(d=x),i=i.add(d),s=s.sub(p)}return i},S.div=S.divide,S.modulo=function(t){return r(t)||(t=h(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(t){return r(t)||(t=h(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return r(t)||(t=h(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return r(t)||(t=h(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},6377:(t,e,n)=>{var r=n(4832),s=n(8652),i=n(801),a=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},4832:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},1971:(t,e,n)=>{var r;!function(s,i){var a,o=(0,eval)("this"),l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(s)]}}():t,3),r),p=new f(r),y=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(y,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(5042)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},3379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],o=0;o<t.length;o++){var l=t[o],u=r.base?l[0]+r.base:l[0],c=i[u]||0,h="".concat(u," ").concat(c);i[u]=c+1;var d=n(h),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=s(p,r);r.byIndex=o,e.splice(o,0,{identifier:h,updater:f,references:1})}a.push(h)}return a}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var i=r(t=t||[],s=s||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var o=n(i[a]);e[o].references--}for(var l=r(t,s),u=0;u<i.length;u++){var c=n(i[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},3565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,s&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},4589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},6072:t=>{"use strict";t.exports=function(t,e,n,r){var s=self||window;try{try{var i;try{i=new s.Blob([t])}catch(e){(i=new(s.BlobBuilder||s.WebKitBlobBuilder||s.MozBlobBuilder||s.MSBlobBuilder)).append(t),i=i.getBlob()}var a=s.URL||s.webkitURL,o=a.createObjectURL(i),l=new s[e](o,n);return a.revokeObjectURL(o),l}catch(r){return new s[e]("data:application/javascript,".concat(encodeURIComponent(t)),n)}}catch(t){if(!r)throw Error("Inline worker is not supported");return new s[e](r,n)}}},914:()=>{},5410:()=>{},8628:()=>{},5778:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},e={};function n(r){var s=e[r];if(void 0!==s)return s.exports;var i=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.nc=void 0,(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>pi,computeFlatOffset:()=>Ni,computeOutShape:()=>mi,getNormalizedAxes:()=>yi,isSliceContinous:()=>Ci,maskToAxes:()=>fi,parseSliceParams:()=>$i,sliceInfo:()=>Ti,startForAxis:()=>Ii,startIndicesWithElidedDims:()=>wi,stopForAxis:()=>Si,stopIndicesWithElidedDims:()=>vi,stridesForAxis:()=>ki,stridesWithElidedDims:()=>gi});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>pc,computeOutShape:()=>dc,segOpComputeOptimalWindowSize:()=>hc});var r={};n.r(r),n.d(r,{ERF_A1:()=>Fu,ERF_A2:()=>Mu,ERF_A3:()=>Du,ERF_A4:()=>_u,ERF_A5:()=>Ou,ERF_P:()=>Au,PARALLELIZE_THRESHOLD:()=>bu,SELU_SCALE:()=>Ru,SELU_SCALEALPHA:()=>Eu,applyActivation:()=>ul,assertAndGetBroadcastShape:()=>di,assertAxesAreInnerMostDims:()=>oo,assertParamsConsistent:()=>mu,assignToTypedArray:()=>Wu,axesAreInnerMostDims:()=>ro,calculateShapes:()=>Tu,checkEinsumDimSizes:()=>Ku,checkPadOnDimRoundingMode:()=>oa,combineLocations:()=>so,complexWithEvenIndex:()=>Pu,complexWithOddIndex:()=>Bu,computeConv2DInfo:()=>Zi,computeConv3DInfo:()=>Ji,computeDefaultPad:()=>Qi,computeDilation2DInfo:()=>Ki,computeOptimalWindowSize:()=>xu,computeOutAndReduceShapes:()=>io,computeOutShape:()=>gu,computePool2DInfo:()=>Xi,computePool3DInfo:()=>Yi,convertConv2DDataFormat:()=>aa,decodeEinsumEquation:()=>qu,eitherStridesOrDilationsAreOne:()=>ia,expandShapeToKeepDim:()=>ao,exponent:()=>Gu,exponents:()=>Vu,fromStringArrayToUint8:()=>mc,fromUint8ToStringArray:()=>fc,getAxesPermutation:()=>lo,getBroadcastDims:()=>ci,getComplexWithIndex:()=>Uu,getEinsumComputePath:()=>Xu,getEinsumPermutation:()=>ju,getFusedBiasGradient:()=>ll,getFusedDyActivation:()=>ol,getImageCenter:()=>yu,getInnerMostAxes:()=>co,getPermuted:()=>vu,getReductionAxes:()=>hi,getReshaped:()=>wu,getReshapedPermuted:()=>ku,getSliceBeginCoords:()=>Iu,getSliceSize:()=>Su,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Qu,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>tc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ec,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>sc,getSparseReshapeInputOutputMismatchErrorMessage:()=>ac,getSparseReshapeInputOutputMultipleErrorMessage:()=>ic,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>nc,getSparseReshapeNegativeOutputDimErrorMessage:()=>rc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>cc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>oc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>lc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>uc,getUndoAxesPermutation:()=>uo,isIdentityPermutation:()=>Yu,log:()=>rr,mergeRealAndImagArrays:()=>Lu,prepareAndValidate:()=>Cu,prepareSplitSize:()=>Ju,segment_util:()=>e,shouldFuse:()=>cl,slice_util:()=>t,splitRealAndImagArrays:()=>zu,tupleValuesAreOne:()=>sa,upcastType:()=>Jr,validateInput:()=>$u,validateUpdateShape:()=>Nu,warn:()=>nr});var s={};n.r(s),n.d(s,{addImpl:()=>Ry,bincountImpl:()=>kw,bincountReduceImpl:()=>Iw,ceilImpl:()=>Nw,concatImpl:()=>Fw,equalImpl:()=>mv,expImpl:()=>Nv,expm1Impl:()=>Av,floorImpl:()=>Kv,gatherNdImpl:()=>nk,gatherV2Impl:()=>sk,greaterEqualImpl:()=>uk,greaterImpl:()=>ak,lessEqualImpl:()=>kk,lessImpl:()=>yk,linSpaceImpl:()=>Ck,logImpl:()=>$k,maxImpl:()=>Wk,maximumImpl:()=>Hk,minimumImpl:()=>eI,multiplyImpl:()=>ov,negImpl:()=>dI,notEqualImpl:()=>wI,prodImpl:()=>MI,rangeImpl:()=>_I,rsqrtImpl:()=>jI,scatterImpl:()=>YI,sigmoidImpl:()=>by,simpleAbsImpl:()=>Py,sliceImpl:()=>xw,sparseFillEmptyRowsImpl:()=>gS,sparseReshapeImpl:()=>xS,sparseSegmentReductionImpl:()=>wS,sqrtImpl:()=>CS,squaredDifferenceImpl:()=>ES,stridedSliceImpl:()=>DS,stringNGramsImpl:()=>LS,stringSplitImpl:()=>BS,stringToHashBucketFastImpl:()=>WS,subImpl:()=>Lv,tileImpl:()=>jS,topKImpl:()=>YS,transposeImpl:()=>qy,uniqueImpl:()=>nC});class i{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{refCount(t){return o("refCount")}incRef(t){return o("incRef")}timerAvailable(){return!0}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}readToGPU(t,e){return o("readToGPU")}numDataIds(){return o("numDataIds")}disposeData(t,e){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r,s){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,h(t,e,n)}function u(t,e,n){return Math.max(t,Math.min(e,n))}function c(t){return t%2==0?t:t+1}function h(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function d(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function p(t,e,n=""){d(b(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function f(t){d(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function m(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||T(t)&&!n)for(let r=0;r<t.length;++r)m(t[r],e,n);else e.push(t);return e}function g(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function b(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function x(t){return t%1==0}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function v(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function k(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function I(t,e){const n=e.length;return d((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),d(t.every((t=>x(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function S(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:I(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function C(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function $(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function T(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function R(t){return"string"==typeof t||t instanceof String}function A(t){return"number"==typeof t}function F(t){return Array.isArray(t)?F(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":A(t)?"float32":R(t)?"string":"boolean"==typeof t?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function D(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function _(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function O(t,e,n,r=!1){const s=new Array;if(1===e.length){const i=e[0]*(r?2:1);for(let e=0;e<i;e++)s[e]=n[t+e]}else{const i=e[0],a=e.slice(1),o=a.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<i;e++)s[e]=O(t+e*o,a,n,r)}return s}function L(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return O(0,t,e,n)}function z(t,e){const n=P(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function P(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function B(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return L(t,new Float32Array(n));if("int32"===e)return L(t,new Int32Array(n));if("bool"===e)return L(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function U(t){t.forEach((e=>{d(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function W(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function V(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function G(t){return t&&t.then&&"function"==typeof t.then}class H{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=q,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(G(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function q(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function j(){return X}let K,X=null;function Y(){if(null==K){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}K=t}return K}function Z(t,e){const n=function(){const t=Y();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const J="Abs",Q="Acos",tt="Acosh",et="Add",nt="AddN",rt="All",st="Any",it="ArgMax",at="ArgMin",ot="Asin",lt="Asinh",ut="Atan",ct="Atanh",ht="Atan2",dt="AvgPool",pt="AvgPoolGrad",ft="AvgPool3D",mt="AvgPool3DGrad",gt="BatchMatMul",bt="BatchToSpaceND",xt="Bincount",yt="BroadcastArgs",wt="Cast",vt="Ceil",kt="ClipByValue",It="Complex",St="ComplexAbs",Ct="Concat",Nt="Conv2D",$t="Conv2DBackpropFilter",Tt="Conv2DBackpropInput",Et="Conv3D",Rt="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",Ft="Cos",Mt="Cosh",Dt="Cumprod",_t="Cumsum",Ot="CropAndResize",Lt="DenseBincount",zt="DepthToSpace",Pt="DepthwiseConv2dNative",Bt="DepthwiseConv2dNativeBackpropFilter",Ut="DepthwiseConv2dNativeBackpropInput",Wt="Diag",Vt="Dilation2D",Gt="Dilation2DBackpropInput",Ht="Dilation2DBackpropFilter",qt="RealDiv",jt="Einsum",Kt="Elu",Xt="EluGrad",Yt="Erf",Zt="Equal",Jt="Exp",Qt="ExpandDims",te="Expm1",ee="FFT",ne="Fill",re="FlipLeftRight",se="Floor",ie="FloorDiv",ae="FusedBatchNorm",oe="GatherV2",le="GatherNd",ue="Greater",ce="GreaterEqual",he="Identity",de="IFFT",pe="Imag",fe="IsFinite",me="IsInf",ge="IsNan",be="LeakyRelu",xe="Less",ye="LessEqual",we="LinSpace",ve="Log",ke="Log1p",Ie="LogicalAnd",Se="LogicalNot",Ce="LogicalOr",Ne="LRN",$e="LRNGrad",Te="Max",Ee="Maximum",Re="MaxPool",Ae="MaxPoolGrad",Fe="MaxPool3D",Me="MaxPool3DGrad",De="MaxPoolWithArgmax",_e="Mean",Oe="Min",Le="Minimum",ze="MirrorPad",Pe="Mod",Be="Multinomial",Ue="Multiply",We="Neg",Ve="NotEqual",Ge="NonMaxSuppressionV3",He="NonMaxSuppressionV4",qe="NonMaxSuppressionV5",je="OnesLike",Ke="OneHot",Xe="Pack",Ye="PadV2",Ze="Pow",Je="Prelu",Qe="Prod",tn="Range",en="Real",nn="Reciprocal",rn="Relu",sn="Reshape",an="ResizeNearestNeighbor",on="ResizeNearestNeighborGrad",ln="ResizeBilinear",un="ResizeBilinearGrad",cn="Relu6",hn="Reverse",dn="Round",pn="Rsqrt",fn="ScatterNd",mn="SearchSorted",gn="Select",bn="Selu",xn="Slice",yn="Sin",wn="Sinh",vn="Sign",kn="Sigmoid",In="Softplus",Sn="Sqrt",Cn="Sum",Nn="SpaceToBatchND",$n="SplitV",Tn="Softmax",En="SparseFillEmptyRows",Rn="SparseReshape",An="SparseSegmentMean",Fn="SparseSegmentSum",Mn="SparseToDense",Dn="SquaredDifference",_n="Square",On="StridedSlice",Ln="StringNGrams",zn="StringSplit",Pn="StringToHashBucketFast",Bn="Sub",Un="Tan",Wn="Tanh",Vn="Tile",Gn="TopK",Hn="Transform",qn="Transpose",jn="Unique",Kn="Unpack",Xn="UnsortedSegmentSum",Yn="ZerosLike",Zn="Step",Jn="RotateWithOffset",Qn="_FusedMatMul",tr="FusedConv2D",er="FusedDepthwiseConv2D";function nr(...t){j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(...t)}function rr(...t){j().getBool("IS_TEST")||j().getBool("PROD")||console.log(...t)}const sr=Z("kernelRegistry",(()=>new Map)),ir=Z("gradRegistry",(()=>new Map));function ar(t,e){const n=hr(t,e);return sr.get(n)}function or(t){return ir.get(t)}function lr(t){const e=sr.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function ur(t){const{kernelName:e,backendName:n}=t,r=hr(e,n);sr.has(r)&&nr(`The kernel '${e}' for backend '${n}' is already registered`),sr.set(r,t)}function cr(t){const{kernelName:e}=t;ir.has(e)&&j().getBool("DEBUG")&&nr(`Overriding the gradient for '${e}'`),ir.set(e,t)}function hr(t,e){return`${e}_${t}`}var dr=n(3720);const pr=n.n(dr)()||dr;function fr(t){return pr.fromString(t,!0,16)}const mr=fr("c3a5c85c97cb3127"),gr=fr("b492b66fbe98f273"),br=fr("9ae16a3b2f90404f");function xr(t){return t.xor(t.shru(47))}function yr(t,e,n){const r=t.slice(e,e+n);return pr.fromBytes(Array.from(r),!0,!0)}function wr(t,e){return yr(t,e,8)}function vr(t,e){return yr(t,e,4)}function kr(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Ir(t,e,n=fr("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Sr(t,e,n,r){return function(t,e,n,r,s,i){s=s.add(t),i=kr(i.add(s).add(r),21);const a=s;return s=(s=s.add(e)).add(n),i=i.add(kr(s,44)),[s.add(r),i.add(a)]}(wr(t,e),wr(t,e+8),wr(t,e+16),wr(t,e+24),n,r)}function Cr(t,e=t.length){const n=pr.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=br.add(2*e),r=wr(t,0).add(br),s=wr(t,e-8);return Ir(kr(s,37).mul(n).add(r),kr(r,25).add(s).mul(n),n)}if(e>=4){const n=br.add(2*e);return Ir(vr(t,0).shl(3).add(e),vr(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return xr(br.mul(n).xor(mr.mul(r))).mul(br)}return br}(t,e):function(t,e=t.length){const n=br.add(2*e),r=wr(t,0).mul(gr),s=wr(t,8),i=wr(t,e-8).mul(n),a=wr(t,e-16).mul(br);return Ir(kr(r.add(s),43).add(kr(i,30)).add(a),r.add(kr(s.add(br),18)).add(i),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=br.add(2*e),r=wr(t,0).mul(br),s=wr(t,8),i=wr(t,e-8).mul(n),a=wr(t,e-16).mul(br),o=kr(r.add(s),43).add(kr(i,30)).add(a),l=Ir(o,r.add(kr(s.add(br),18)).add(i),n),u=wr(t,16).mul(n),c=wr(t,24),h=o.add(wr(t,e-32)).mul(n),d=l.add(wr(t,e-24)).mul(n);return Ir(kr(u.add(c),43).add(kr(h,30)).add(d),u.add(kr(c.add(r),18)).add(h),n)}(t,e);let r=n,s=n.mul(gr).add(113),i=xr(s.mul(br).add(113)).mul(br),a=[pr.UZERO,pr.UZERO],o=[pr.UZERO,pr.UZERO];r=r.mul(br).add(wr(t,0));let l=0;const u=64*(e-1>>6),c=u+(e-1&63)-63;do{r=kr(r.add(s).add(a[0]).add(wr(t,l+8)),37).mul(gr),s=kr(s.add(a[1]).add(wr(t,l+48)),42).mul(gr),r=r.xor(o[1]),s=s.add(a[0]).add(wr(t,l+40)),i=kr(i.add(o[0]),33).mul(gr),a=Sr(t,l,a[1].mul(gr),r.add(o[0])),o=Sr(t,l+32,i.add(o[1]),s.add(wr(t,l+16))),[i,r]=[r,i],l+=64}while(l!==u);const h=gr.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=kr(r.add(s).add(a[0]).add(wr(t,l+8)),37).mul(h),s=kr(s.add(a[1]).add(wr(t,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(wr(t,l+40))),i=kr(i.add(o[0]),33).mul(h),a=Sr(t,l,a[1].mul(h),r.add(o[0])),o=Sr(t,l+32,i.add(o[1]),s.add(wr(t,l+16))),[i,r]=[r,i],Ir(Ir(a[0],o[0],h).add(xr(s).mul(mr)).add(i),Ir(a[1],o[1],h).add(r),h)}function Nr(t,e){return"string"===e?Er(t):$r([t],e)}function $r(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=m(t)),j().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Tr(){return j().platform.now()}function Er(t,e="utf-8"){return e=e||"utf-8",j().platform.encode(t,e)}function Rr(t,e="utf-8"){return e=e||"utf-8",j().platform.decode(t,e)}class Ar{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Mr)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const a=Tr();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:Tr()-a})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{Fr(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Fr(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Mr{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?w(`${r}ms`,9):r.error,o=w(t,25),l=e.rank,u=e.size,c=w(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Dr(t,e,n,r){const s=_(e),i=function(t,e,n,r){const s=g(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?zr(t):t;if(o>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],_r(l[e+t],0,n).length)}return a}(t,e,n,s),a=e.length,o=Lr(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function _r(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:R(t)?`'${t}'`:"bool"===n?Or(t):parseFloat(t.toFixed(7)).toString(),w(r,e)}function Or(t){return 0===t?"false":"true"}function Lr(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[_r(zr(t)[0],0,n)]:"bool"===n?[Or(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=zr(r),i=zr(i)),["["+r.map(((t,e)=>_r(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>_r(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?zr(t):Array.from(t)).map(((t,e)=>_r(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,i=r+h;d.push(...Lr(t.slice(r,i),u,n,c,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h,i=r+h;d.push(...Lr(t.slice(r,i),u,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,i=r+h;d.push(...Lr(t.slice(r,i),u,n,c,s,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function zr(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Pr{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=g(t),null!=n){const t=n.length;d(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||N(e,this.size),this.strides=_(t)}set(t,...e){0===e.length&&(e=[0]),d(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Br().makeTensor(this.values,this.shape,this.dtype)}}let Br=null,Ur=null,Wr=null;class Vr{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=g(t),this.strides=_(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ur.buffer(this.shape,this.dtype,t)}bufferSync(){return Ur.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return L(this.shape,t,"complex64"===this.dtype)}arraySync(){return L(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Br().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Rr(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Br().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Br().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Rr(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Br().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Br().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ur.print(this,t)}clone(){return this.throwIfDisposed(),Ur.clone(this)}toString(t=!1){return Dr(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ur.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Br().makeVariable(this,t,e,n)}}function Gr(){return Z("Tensor",(()=>Vr))}Object.defineProperty(Vr,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Gr();class Hr extends Vr{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!b(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Br().disposeTensor(this),this.dataId=t.dataId,Br().incRef(this,null)}dispose(){Br().disposeVariable(this),this.isDisposedInternal=!0}}var qr,jr,Kr,Xr,Yr;Object.defineProperty(Hr,Symbol.hasInstance,{value:t=>t instanceof Vr&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(qr||(qr={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(jr||(jr={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Kr||(Kr={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Xr||(Xr={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Yr||(Yr={}));const Zr={float32:Xr,int32:jr,bool:Kr,complex64:Yr};function Jr(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Zr[t][e]}function Qr(t){return Jr(t,"int32")}function ts(t,e){if(t.dtype===e.dtype)return[t,e];const n=Jr(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function es(t,e){return e.some((e=>e.id===t.id))}function ns(t){const e=[];return rs(t,e,new Set),e}function rs(t,e,n){if(null==t)return;if(t instanceof Vr)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),rs(r,e,n))}}function ss(t){return null!=t.kernelName}class is{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class as{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new is}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(nr(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ar(this.backendInstance),!0}setupRegisteredKernels(){lr(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){lr(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof a||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,nr(`Initialization of backend ${t} failed`),nr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return nr(`Initialization of backend ${t} failed`),nr(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return as.nextTensorId++}nextVariableId(){return as.nextVariableId++}clone(t){const e=ls.runKernel(he,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return ls.runKernel(wt,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==ar(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ss(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ss(t)){const{kernelName:e,inputs:s,attrs:i}=t;null==this.backendName&&this.backend;const l=ar(e,this.backendName);d(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(r){const t=this.getTensorsForGradient(e,s,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=ss(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=a()})),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=or(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(d(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return i.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&R(t[0])&&(s=t.map((t=>Er(t))));const i=r.write(s,e,n),a=new Vr(e,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:s}=t,i=new Vr(r,s,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Hr(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*E(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Hr||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*E(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=or(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=P(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ns(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(d(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));d(s instanceof Vr,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=z(g(t),"float32");return ls.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[e];if(!b(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),us);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return d(M(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;d(e.every((t=>t instanceof Vr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),d(n.value instanceof Vr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d(M(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];d(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d(i.every((t=>t instanceof Vr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Tr(),n=await this.backend.time(t);return n.wallMs=Tr()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new is;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function os(){const t=Y();if(null==t._tfengine){const e=new H(t);t._tfengine=new as(e)}var e;return e=t._tfengine.ENV,X=e,Br=()=>t._tfengine,t._tfengine}as.nextTensorId=0,as.nextVariableId=0;const ls=os();function us(t,e){const n={a:t,b:e};return ls.runKernel(et,n)}function cs(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function hs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ds=j();function ps(t,e){let n=t;if(T(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||T(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fs(t,r,[]),r}function fs(t,e,n){if(n=n||[],!Array.isArray(t)&&!T(t))return void d(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));d(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),d(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)fs(t[e],r,n.concat(e))}function ms(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function gs(t,e,n,r="numeric"){if(t instanceof Vr)return ms(r,t.dtype,e,n),t;let s=F(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ms(r,s,e,n),null==t||!T(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=ps(t,s);T(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?$r(t,s):m(t,[],!0);return ls.makeTensor(a,i,s)}function bs(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>gs(t,`${e}[${s}]`,n,r)))}function xs(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{ls.startScope(n);try{const e=r(...t);return G(e)&&console.error("Cannot return a Promise inside of tidy."),ls.endScope(e),e}catch(t){throw ls.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}ds.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ds.registerFlag("IS_BROWSER",(()=>hs())),ds.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ds.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ds.registerFlag("PROD",(()=>!1)),ds.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ds.getBool("DEBUG"))),ds.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ds.registerFlag("IS_TEST",(()=>!1)),ds.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ds.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ds.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const ys=xs({complex_:function(t,e){const n=gs(t,"real","complex"),r=gs(e,"imag","complex");p(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ls.runKernel(It,s)}});function ws(t,e,n,r){if(null==r&&(r=F(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!T(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){U(e);const t=g(e),r=g(n);d(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==g(e.slice(t));d(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return T(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?$r(t,r):m(t,[],!0),ls.makeTensor(t,e,r)}function vs(t,e,n){return ws(t,e,ps(t,n),n)}async function ks(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Is(await Promise.all(r)),specs:n}}function Is(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Ss="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Cs(t){return Ss?Buffer.byteLength(t):new Blob([t]).size}function Ns(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function $s(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Ts(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Cs(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Cs(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Es{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Es.instance&&(Es.instance=new Es),Es.instance}static registerSaveRouter(t){Es.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Es.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Es.getHandlers(t,"save")}static getLoadHandlers(t,e){return Es.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Es.getInstance().loadRouters:Es.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const Rs="tensorflowjs",As="models_store",Fs="model_info_store";function Ms(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ds(t){const e=t.result;e.createObjectStore(As,{keyPath:"modelPath"}),e.createObjectStore(Fs,{keyPath:"modelPath"})}class _s{constructor(t){if(this.indexedDB=Ms(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(Rs,1);r.onupgradeneeded=()=>Ds(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(As,"readonly"),r=e.objectStore(As).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Ts(e),i=s.transaction(Fs,"readwrite");let a=i.objectStore(Fs);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(As,"readwrite");const o=l.objectStore(As).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(Fs);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}_s.URL_SCHEME="indexeddb://";const Os=t=>{return j().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_s.URL_SCHEME)?(e=t.slice(_s.URL_SCHEME.length),new _s(e)):null;var e};Es.registerSaveRouter(Os),Es.registerLoadRouter(Os);class Ls{constructor(){this.indexedDB=Ms()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Rs,1);n.onupgradeneeded=()=>Ds(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Fs,"readonly"),i=s.objectStore(Fs).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(_s.URL_SCHEME)?e.slice(_s.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(Rs,1);r.onupgradeneeded=()=>Ds(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Fs,"readwrite"),a=i.objectStore(Fs),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),i=()=>{l=s.transaction(As,"readwrite");const r=l.objectStore(As).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const zs="/",Ps="tensorflowjs_models",Bs="info",Us="model_topology",Ws="weight_specs",Vs="weight_data",Gs="model_metadata";function Hs(t){return{info:[Ps,t,Bs].join(zs),topology:[Ps,t,Us].join(zs),weightSpecs:[Ps,t,Ws].join(zs),weightData:[Ps,t,Vs].join(zs),modelMetadata:[Ps,t,Gs].join(zs)}}function qs(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function js(t){const e=t.split(zs);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(zs)}class Ks{constructor(t){if(!j().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Hs(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Ts(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Ss)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw qs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Ss){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Ks.URL_SCHEME="localstorage://";const Xs=t=>{return j().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ks.URL_SCHEME)?(e=t.slice(Ks.URL_SCHEME.length),new Ks(e)):null;var e};Es.registerSaveRouter(Xs),Es.registerLoadRouter(Xs);class Ys{constructor(){d(j().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),d("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ps+zs,n=zs+Bs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[js(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=Hs(t=(e=t).startsWith(Ks.URL_SCHEME)?e.slice(Ks.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return qs(n),r}}class Zs{constructor(){this.managers={}}static getInstance(){return null==Zs.instance&&(Zs.instance=new Zs),Zs.instance}static registerManager(t,e){d(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),d(t.length>0,(()=>"scheme must not be an empty string."));const n=Zs.getInstance();d(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Js{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new Js);try{Zs.registerManager(Ks.URL_SCHEME,new Ys)}catch(t){}try{Zs.registerManager(_s.URL_SCHEME,new Ls)}catch(t){}}let Qs;function ti(t,e="float32",n){return e=e||"float32",U(t),new Pr(t,e,n)}j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=j().global.fetch?j().global.fetch(t,e):(null==Qs&&(Qs=n(5410)),Qs(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const ei=xs({cast_:function(t,e){const n=gs(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return ls.runKernel(wt,r,s)}}),ni=xs({clone_:function(t){const e={x:gs(t,"x","clone","string_or_numeric")};return ls.runKernel(he,e)}});function ri(t){return new Promise((t=>setTimeout(t))).then(t)}os(),Ur={buffer:ti,cast:ei,clone:ni,print:function(t,e=!1){console.log(t.toString(e))}};class si{constructor(t){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(si.URL_SCHEME)&&(t=t.slice(si.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=$s(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await ri((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ri((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ts(t)}}}}function ii(t,e,n,r){!function(t){d(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){d(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),d(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),d(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++s/t.length*(r-n);return e(a),i})),i))))}async function ai(t,e){null==e&&(e={});const n=null==e.fetchFunc?j().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await ii(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await ii(s,e.onProgress,.5,1)}si.URL_SCHEME="downloads://",Es.registerSaveRouter((t=>j().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(si.URL_SCHEME)?function(t="model"){return new si(t)}(t.slice(si.URL_SCHEME.length)):null));class oi{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(d("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=j().platform.fetch,d(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&d(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=$s(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Ts(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),null!=t.weightsManifest){const[r,s]=await e(t.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),n}(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Ns(await ai(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function li(t){return null!=t.match(oi.URL_SCHEME_REGEX)}oi.URL_SCHEME_REGEX=/^https?:\/\//;const ui=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>li(t))):li(t),n)return function(t,e){return new oi(t,e)}(t,e)}return null};function ci(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function hi(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function di(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function pi(t,e,n){const r=t.shape.length;d(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),d(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)d(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function fi(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function mi(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function gi(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function bi(t,e,n){return n<=t?n:n-(e-1)}function xi(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function yi(t,e,n,r,s,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=wi(a,l,u,r,t),h=vi(o,l,u,s,t),d=gi(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=Ii(a,r,i,t,e,l),h[e]=Si(o,s,i,t,e,l),d[e]=ki(i,e,l);return{begin:c,end:h,strides:d}}function wi(t,e,n,r,s){const i=[...s],a=xi(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=bi(e,n,s);let o=r[a];t&1<<a&&(o=0),i[s]=o}return i}function vi(t,e,n,r,s){const i=[...s],a=xi(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=bi(e,n,s);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=u(0,i[t],s[t])}return i}function ki(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Ii(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=u(0,a,l-1),a}function Si(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?u(0,a,l):u(-1,a,l-1),a}function Ci(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Ni(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function $i(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{d(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(d(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,i]}function Ti(t,e,n,r,s,i,a,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<h.dims;t++)c&&0!=(1<<t&o)&&h.numAddAxisAfterEllipsis++,1<<t&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let e=0;e<t.length;++e){if(0===d.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<e),r=t[e];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<e,d.endMask&1<<e],i=[d.strides[e]>0?0:-1,d.strides[e]>0?r:r-1];if(n&&d.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[e];const a=!!(d.beginMask&1<<e&&d.endMask&1<<e);if(d.beginValid&&d.endValid){if(n){const t=d.begin[e]<0?r+d.begin[e]:d.begin[e];if(d.begin[e]=t,d.end[e]=d.begin[e]+1,t<0||t>=r)throw Error(`slice index ${d.begin[e]} of dimension ${e} out of bounds.`)}else d.begin[e]=Ei(d.begin[e],0,d.strides[e],r,s,i),d.end[e]=Ei(d.end[e],1,d.strides[e],r,s,i);const t=1===d.strides[e]&&0===d.begin[e]&&d.end[e]===r;p=p&&t,f=f&&(0===e&&1===d.strides[e]||t)}else p=p&&1===d.strides[e]&&a,f=f&&(0===e&&1===d.strides[e]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[e]-d.begin[e],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=d.strides[e]<0?-r:r,l=!0),l){let t;t=0===o||o<0!=d.strides[e]<0?0:Math.trunc(o/d.strides[e])+(o%d.strides[e]!=0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<d.finalShapeGatherIndices.length;++t){const e=d.finalShapeGatherIndices[t];e>=0?b.push(g[e]):-2===e&&b.push(1)}return{finalShapeSparse:b.filter(((t,e)=>-2!==d.finalShapeGatherIndices[e])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Ei(t,e,n,r,s,i){if(s[e])return n>0?i[e]:i[e+1&1];{const e=t<0?r+t:t;return e<i[0]?i[0]:e>i[1]?i[1]:e}}Es.registerSaveRouter(ui),Es.registerLoadRouter(ui);class Ri{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ai{constructor(){this.classNameMap={}}static getMap(){return null==Ai.instance&&(Ai.instance=new Ai),Ai.instance}static register(t){Ai.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Fi(t){d(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),d("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),d(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ai.register(t)}function Mi(){return ls}function Di(){return ls.memory()}function _i(t,e){return ls.tidy(t,e)}function Oi(t){ns(t).forEach((t=>t.dispose()))}function Li(t){return ls.keep(t)}function zi(t,e,n=1){return ls.registerBackend(t,e,n)}function Pi(){return ls.backend}function Bi(t){return ls.customGrad(t)}function Ui(t,e){if((T(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&T(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ws(t,[],[],e)}Wr=function(t){j().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Wi extends Ri{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Oi(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){d(M(t),(()=>"The f passed in variableGrads(f) must be a function")),d(null==e||Array.isArray(e)&&e.every((t=>t instanceof Hr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in ls.registeredVariables)e.push(ls.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;d((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=ls.gradients(t,e,null,!0);d(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),d(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Oi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ui(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Wi,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Vi=xs({abs_:function(t){const e=gs(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return ls.runKernel(St,t)}{const t={x:e};return ls.runKernel(J,t)}}}),Gi=xs({add_:function(t,e){let n=gs(t,"a","add"),r=gs(e,"b","add");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(et,s)}}),Hi=xs({all_:function(t,e=null,n=!1){const r={x:gs(t,"x","all","bool")},s={axis:e,keepDims:n};return ls.runKernel(rt,r,s)}}),qi=xs({any_:function(t,e=null,n=!1){const r={x:gs(t,"x","any","bool")},s={axis:e,keepDims:n};return ls.runKernel(st,r,s)}}),ji=xs({argMax_:function(t,e=0){const n={x:gs(t,"x","argMax")},r={axis:e};return ls.runKernel(it,n,r)}});function Ki(t,e,n,r,s="NHWC",i){return Zi(t,[...e,t[3]],n,i,r,null,null,aa(s))}function Xi(t,e,n,r,s,i,a="channelsLast"){const[o,l]=ta(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return Zi(t,u,n,r,s,i,!1,a)}function Yi(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=ea(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Ji(t,c,n,r,s,!1,h,i)}function Zi(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=ta(n),[b,x]=ta(r),y=na(d,b),w=na(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=Qi(t,e,n));const i=t[1];return[ra((t[0]-e+2*r)/n+1,s),ra((i-e+2*r)/n+1,s)]}([e,n],i,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=ra((e-i+d+p)/r+1,o),h=ra((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,y,w,i,o),S=a?f*h:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:t,outShape:C,filterShape:e}}function Ji(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[b,x,y]=ea(n),[w,v,k]=ea(r),I=na(p,w),S=na(f,v),C=na(m,k),{padInfo:N,outDepth:$,outHeight:T,outWidth:E}=function(t,e,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=Qi(t,e,r));const a=t[1],o=t[2];return[ra((t[0]-e+2*s)/r+1,i),ra((a-e+2*s)/r+1,i),ra((o-e+2*s)/r+1,i),1]}([e,n,r,1],o,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const t=(d-1)*s+o-e,c=(p-1)*i+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),b=t-g,x=Math.floor(c/2),y=c-x,w=Math.floor(m/2);h={top:x,bottom:y,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,x,y,I,S,C,o),R=i?g*d:g;let A;return"channelsFirst"===a?A=[l,R,$,T,E]:"channelsLast"===a&&(A=[l,$,T,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function Qi(t,e,n,r=1){const s=na(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function ta(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function ea(t){return"number"==typeof t?[t,t,t]:t}function na(t,e){return e<=1?t:t+(t-1)*(e-1)}function ra(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function sa(t){const[e,n,r]=ta(t);return 1===e&&1===n&&1===r}function ia(t,e){return sa(t)||sa(e)}function aa(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function oa(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)d(x(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{d(x(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const la=xs({reshape_:function(t,e){const n={x:gs(t,"x","reshape","string_or_numeric")},r={shape:e};return ls.runKernel(sn,n,r)}}),ua=xs({avgPool_:function(t,e,n,r,s){const i=gs(t,"x","avgPool","float32");d(ia(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=la(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),oa("avgPool",r,s);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=ls.runKernel(dt,l,u);return c=ei(c,i.dtype),o?la(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ca=xs({avgPool3d_:function(t,e,n,r,s,i="NDHWC"){const a=gs(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=la(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),oa("avgPool3d",r,s);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=ls.runKernel(ft,u,c);return h=ei(h,o.dtype),l?la(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ha=xs({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=gs(t,"x","batchNorm"),o=gs(e,"mean","batchNorm"),l=gs(n,"variance","batchNorm");let u,c;null!=s&&(u=gs(s,"scale","batchNorm")),null!=r&&(c=gs(r,"offset","batchNorm")),d(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?la(t,[1,1,1,t.size]):2===t.rank?la(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?la(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),p={x:h,scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:i},m=ls.runKernel(ae,p,f);return la(m,a.shape)}}),da=xs({batchNorm2d_:function(t,e,n,r,s,i){const a=gs(t,"x","batchNorm"),o=gs(e,"mean","batchNorm"),l=gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=gs(s,"scale","batchNorm")),null!=r&&(c=gs(r,"offset","batchNorm")),d(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),d(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ha(a,o,l,c,u,i)}}),pa=xs({batchNorm3d_:function(t,e,n,r,s,i){const a=gs(t,"x","batchNorm"),o=gs(e,"mean","batchNorm"),l=gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=gs(s,"scale","batchNorm")),null!=r&&(c=gs(r,"offset","batchNorm")),d(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),d(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ha(a,o,l,c,u,i)}}),fa=xs({batchNorm4d_:function(t,e,n,r,s,i){const a=gs(t,"x","batchNorm"),o=gs(e,"mean","batchNorm"),l=gs(n,"variance","batchNorm");let u,c;return null!=s&&(u=gs(s,"scale","batchNorm")),null!=r&&(c=gs(r,"offset","batchNorm")),d(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),d(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ha(a,o,l,c,u,i)}}),ma=xs({clipByValue_:function(t,e,n){const r=gs(t,"x","clipByValue");d(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return ls.runKernel(kt,s,i)}}),ga=xs({concat_:function(t,e=0){d(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=bs(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return ni(n[0]);const r=n,s={axis:e};return ls.runKernel(Ct,r,s)}}),ba=xs({concat1d_:function(t){return ga(t,0)}}),xa=xs({concat2d_:function(t,e){return ga(t,e)}}),ya=xs({concat3d_:function(t,e){return ga(t,e)}}),wa=xs({concat4d_:function(t,e){return ga(t,e)}}),va=xs({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=gs(t,"x","conv2d","float32"),l=gs(e,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=la(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),oa("conv2d",r,a);const h="NHWC"===s?u.shape[3]:u.shape[1];d(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),d(ia(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const p={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=ls.runKernel(Nt,p,f);return c?la(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ka=xs({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=gs(t,"x","conv1d"),l=gs(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=la(o,[1,o.shape[0],o.shape[1]])),d(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),d(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),oa("conv1d",r,a),d(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),d(ia(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),d("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=la(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=la(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=va(p,h,[1,n],r,"NHWC",[1,i],a);return la(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Ia=xs({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){d(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=la(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),d(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),d(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),d(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];d(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),d(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),oa("conv2dDerInput",s,a);const p={dy:l,filter:n},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},m=ls.runKernel(Tt,p,f);return u?la(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Sa=xs({conv2dTranspose_:function(t,e,n,r,s,i){const a=gs(t,"x","conv2dTranspose"),o=gs(e,"filter","conv2dTranspose");return Ia(n,a,o,r,s,"NHWC",i)}}),Ca=xs({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=gs(t,"x","conv3d"),o=gs(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=la(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),d(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d(ia(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),d("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},p=ls.runKernel(Et,c,h);return u?la(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Na=xs({conv3DBackpropInput_:function(t,e,n,r,s){d(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=la(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];d(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),d(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),d(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),d(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},p=ls.runKernel(At,c,h);return o?la(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),$a=xs({conv3dTranspose_:function(t,e,n,r,s){const i=gs(t,"x","conv3dTranspose"),a=gs(e,"filter","conv3dTranspose");return Na(n,i,a,r,s)}}),Ta=xs({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=gs(t,"x","depthwiseConv2d","float32"),l=gs(e,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=la(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),d(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),oa("depthwiseConv2d",r,a);const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ls.runKernel(Pt,h,p);return c?la(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ea=xs({floorDiv_:function(t,e){let n=gs(t,"a","floorDiv"),r=gs(e,"b","floorDiv");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(ie,s)}}),Ra=xs({div_:function(t,e){let n=gs(t,"a","div"),r=gs(e,"b","div");if([n,r]=ts(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ea(n,r);const s={a:n,b:r};return ls.runKernel(qt,s,{})}}),Aa=xs({elu_:function(t){const e={x:gs(t,"x","elu","float32")};return ls.runKernel(Kt,e)}}),Fa=xs({equal_:function(t,e){let n=gs(t,"a","equal","string_or_numeric"),r=gs(e,"b","equal","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Zt,s)}}),Ma=xs({exp_:function(t){const e={x:gs(t,"x","exp")};return ls.runKernel(Jt,e)}}),Da=xs({expandDims_:function(t,e=0){const n=gs(t,"x","expandDims","string_or_numeric");d(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return ls.runKernel(Qt,r,s)}}),_a=xs({tile_:function(t,e){const n=gs(t,"x","tile","string_or_numeric");d(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return ls.runKernel(Vn,r,s)}}),Oa=xs({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=ti([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const a=la(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return _a(Da(a,0),[n[0],1,1]);if(2===n.length)return _a(Da(Da(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return _a(Da(Da(Da(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function La(t,e,n){const r={shape:t,value:e,dtype:n};return ls.runKernel(ne,{},r)}const za=xs({floor_:function(t){const e={x:gs(t,"x","floor","float32")};return ls.runKernel(se,e)}}),Pa=xs({gather_:function(t,e,n=0,r=0){const s={x:gs(t,"x","gather"),indices:gs(e,"indices","gather","int32")},i={axis:n,batchDims:r};return ls.runKernel(oe,s,i)}}),Ba=xs({greater_:function(t,e){let n=gs(t,"a","greater","string_or_numeric"),r=gs(e,"b","greater","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(ue,s)}}),Ua=xs({greaterEqual_:function(t,e){let n=gs(t,"a","greaterEqual","string_or_numeric"),r=gs(e,"b","greaterEqual","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(ce,s)}}),Wa=xs({leakyRelu_:function(t,e=.2){const n={x:gs(t,"x","leakyRelu")},r={alpha:e};return ls.runKernel(be,n,r)}}),Va=xs({log_:function(t){const e={x:gs(t,"x","log","float32")};return ls.runKernel(ve,e)}}),Ga=xs({log1p_:function(t){const e={x:gs(t,"x","log1p")};return ls.runKernel(ke,e)}}),Ha=xs({max_:function(t,e=null,n=!1){const r={x:gs(t,"x","max")},s={reductionIndices:e,keepDims:n};return ls.runKernel(Te,r,s)}}),qa=xs({mul_:function(t,e){let n=gs(t,"a","mul"),r=gs(e,"b","mul");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(Ue,s)}}),ja=xs({sub_:function(t,e){let n=gs(t,"a","sub"),r=gs(e,"b","sub");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(Bn,s)}}),Ka=xs({sum_:function(t,e=null,n=!1){let r=gs(t,"x","sum");"bool"===r.dtype&&(r=ei(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return ls.runKernel(Cn,s,i)}}),Xa=xs({logSoftmax_:function(t,e=-1){const n=gs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=Bi(((t,n)=>{const r=Ha(t,e,!0),s=ja(t,r),i=ja(ei(s,"float32"),Va(Ka(Ma(s),e,!0)));return n([i]),{value:i,gradFunc:(t,n)=>{const[r]=n,s=Ma(r);return ja(t,qa(Ka(t,e,!0),s))}}}));return r(n)}}),Ya=xs({logicalAnd_:function(t,e){const n=gs(t,"a","logicalAnd","bool"),r=gs(e,"b","logicalAnd","bool");di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Ie,s)}}),Za=xs({matMul_:function(t,e,n=!1,r=!1){let s=gs(t,"a","matMul"),i=gs(e,"b","matMul");[s,i]=ts(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return ls.runKernel(gt,a,o)}}),Ja=xs({maxPool_:function(t,e,n,r,s){const i=gs(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=la(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),d(ia(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),oa("maxPool",r,s);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=ls.runKernel(Re,l,u);return o?la(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qa=xs({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC"){const a=gs(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=la(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),d(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),oa("maxPool3d",r,s);const u={x:o},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=ls.runKernel(Fe,u,c);return l?la(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),to=xs({maximum_:function(t,e){let n=gs(t,"a","maximum"),r=gs(e,"b","maximum");[n,r]=ts(n,r),"bool"===n.dtype&&(n=ei(n,"int32"),r=ei(r,"int32")),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Ee,s)}}),eo=xs({mean_:function(t,e=null,n=!1){const r={x:gs(t,"x","mean")},s={axis:e,keepDims:n};return ls.runKernel(_e,r,s)}}),no=xs({minimum_:function(t,e){let n=gs(t,"a","minimum"),r=gs(e,"b","minimum");[n,r]=ts(n,r),"bool"===n.dtype&&(n=ei(n,"int32"),r=ei(r,"int32")),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Le,s)}});function ro(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function so(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function io(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function ao(t,e){return so(t,e.map((t=>1)),e)}function oo(t,e,n){d(ro(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function lo(t,e){if(ro(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function uo(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function co(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const ho=xs({square_:function(t){const e=gs(t,"x","square");return ls.runKernel("Square",{x:e},{})}}),po=xs({moments_:function(t,e=null,n=!1){const r=I(e,(t=gs(t,"x","moments")).shape),s=eo(t,r,n);let i=s.shape;n||(i=ao(s.shape,r));const a=ho(ja(ei(t,"float32"),la(s,i)));return{mean:s,variance:eo(a,r,n)}}}),fo=xs({neg_:function(t){const e={x:gs(t,"x","neg")};return ls.runKernel(We,e)}}),mo=xs({notEqual_:function(t,e){let n=gs(t,"a","notEqual","string_or_numeric"),r=gs(e,"b","notEqual","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Ve,s)}}),go=xs({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:gs(t,"indices","oneHot","int32")},i={depth:e,onValue:n,offValue:r};return ls.runKernel(Ke,s,i)}});function bo(t,e="float32"){if("complex64"===e){const e=bo(t,"float32"),n=bo(t,"float32");return ys(e,n)}const n=P(g(t),e);return ls.makeTensor(n,t,e)}function xo(t,e="float32"){if("complex64"===e){const e=xo(t,"float32"),n=bo(t,"float32");return ys(e,n)}const n=z(g(t),e);return ls.makeTensor(n,t,e)}const yo=xs({onesLike_:function(t){const e={x:gs(t,"x","onesLike")};return ls.runKernel(je,e)}}),wo=xs({pad_:function(t,e,n=0){const r=gs(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return ls.runKernel(Ye,i,s)}}),vo=xs({prelu_:function(t,e){const n={x:gs(t,"x","prelu"),alpha:gs(e,"alpha","prelu")};return ls.runKernel(Je,n)}});var ko=n(3129);class Io{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=ko.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class So{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ko.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Co=xs({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Io(e,n,r,!1,s),a=ti(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),No=xs({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=ti(t,r),a=new So(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),$o=xs({relu_:function(t){const e={x:gs(t,"x","relu")};return ls.runKernel(rn,e)}}),To=xs({reverse_:function(t,e){const n={x:gs(t,"x","reverse")},r={dims:e};return ls.runKernel(hn,n,r)}}),Eo=xs({selu_:function(t){const e={x:gs(t,"x","selu")};return ls.runKernel(bn,e)}}),Ro=xs({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=gs(t,"x","separableConv2d"),l=gs(e,"depthwiseFilter","separableConv2d"),u=gs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=la(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),d(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),d(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),d(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],f=l.shape[3];d(u.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`));const m=Ta(c,l,r,s,a,i),g=va(m,u,1,"valid",a);return h?la(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ao=xs({sigmoid_:function(t){const e={x:gs(t,"x","sigmoid","float32")};return ls.runKernel(kn,e)}}),Fo=xs({slice_:function(t,e,n){const r=gs(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return ls.runKernel(xn,s,i)}}),Mo=xs({slice1d_:function(t,e,n){const r=gs(t,"x","slice1d");return d(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Fo(r,[e],[n])}}),Do=xs({slice2d_:function(t,e,n){const r=gs(t,"x","slice2d");return d(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Fo(r,e,n)}}),_o=xs({slice3d_:function(t,e,n){const r=gs(t,"x","slice3d");return d(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Fo(r,e,n)}}),Oo=xs({slice4d_:function(t,e,n){const r=gs(t,"x","slice4d");return d(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Fo(r,e,n)}}),Lo=xs({softmax_:function(t,e=-1){const n=gs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return ls.runKernel(Tn,r,s)}}),zo=xs({softplus_:function(t){const e={x:gs(t,"x","softplus")};return ls.runKernel(In,e)}}),Po=xs({split_:function(t,e,n=0){const r={x:gs(t,"x","split")},s={numOrSizeSplits:e,axis:n};return ls.runKernel($n,r,s)}}),Bo=xs({sqrt_:function(t){const e={x:gs(t,"x","sqrt","float32")};return ls.runKernel(Sn,e)}}),Uo=xs({squeeze_:function(t,e){const n=gs(t,"x","squeeze");return la(n,S(n.shape,e).newShape)}}),Wo=xs({stack_:function(t,e=0){const n=bs(t,"tensors","stack","string_or_numeric");d(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return ls.runKernel(Xe,r,s)}}),Vo=xs({tanh_:function(t){const e={x:gs(t,"x","tanh","float32")};return ls.runKernel(Wn,e)}});function Go(t,e){f(t);const n=ps(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ws(t,null,n,e)}const Ho=xs({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Io(e,n,r,!0,s),a=ti(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),qo=xs({unstack_:function(t,e=0){const n=gs(t,"x","unstack","string_or_numeric");d(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return ls.runKernel(Kn,r,s)}}),jo=xs({broadcastTo_:function(t,e){let n=gs(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=la(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return ni(n);const a={x:n},o={reps:i};return ls.runKernel(Vn,a,o)}}),Ko=xs({where_:function(t,e,n){const r=gs(e,"a","where"),s=gs(n,"b","where"),i=gs(t,"condition","where","bool"),a=di(di(i.shape,r.shape),s.shape),o={condition:jo(i,a),t:jo(r,a),e:jo(s,a)};return ls.runKernel(gn,o)}}),Xo=xs({zerosLike_:function(t){const e={x:gs(t,"x","zerosLike")};return ls.runKernel(Yn,e)}}),Yo=xs({imag_:function(t){const e={input:gs(t,"input","imag")};return ls.runKernel(pe,e)}}),Zo=xs({real_:function(t){const e={input:gs(t,"input","real")};return ls.runKernel(en,e)}}),Jo=xs({transpose_:function(t,e,n){const r=gs(t,"x","transpose");if(null==e&&(e=r.shape.map(((t,e)=>e)).reverse()),d(r.rank===e.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`)),e.forEach((t=>{d(t>=0&&t<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${e}`))})),r.rank<=1)return r.clone();const s={x:r},i={perm:e};return"complex64"===r.dtype?_i((()=>{let t=Zo(r),e=Yo(r);return t=ls.runKernel(qn,{x:t},i),e=ls.runKernel(qn,{x:e},i),n&&(e=fo(e)),ys(t,e)})):ls.runKernel(qn,s,i)}}),Qo=xs({dropout_:function(t,e,n,r){const s=gs(t,"x","dropout");if(d("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),d(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Vr?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(b(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,o=Ra(za(Gi(No(i,0,1,"float32",r),a)),a);return qa(s,o)}}),tl=xs({fft_:function(t){d("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ls.runKernel(ee,e)}}),el=xs({rfft_:function(t,e){d("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=Fo(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=ga([t,bo(r)],t.shape.length-1),n=e}else s=t;const i=Xo(s),a=la(ys(s,i),[r,n]),o=tl(a),l=Math.floor(n/2)+1,u=Zo(o),c=Yo(o),h=Po(u,[l,n-l],u.shape.length-1),p=Po(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,la(ys(h[0],p[0]),f)}}),nl=xs({ifft_:function(t){d("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ls.runKernel(de,e)}}),rl=xs({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=la(t,[n,e]);r=nl(s)}else{const s=[n,2*(e-1)],i=la(Zo(t),[n,e]),a=la(Yo(t),[n,e]),o=To(Fo(i,[0,1],[n,e-2]),1),l=qa(To(Fo(a,[0,1],[n,e-2]),1),Ui(-1)),u=ga([i,o],1),c=ga([a,l],1),h=la(ys(u,c),[s[0],s[1]]);r=nl(h)}if(r=Zo(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=la(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),sl=xs({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=la(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=la(e,[1,e.shape[0],e.shape[1],e.shape[2]])),d(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),d(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),d(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];d(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),d(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),oa("conv2dDerFilter",s,a);const h={x:o,dy:l},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return ls.runKernel($t,h,p)}}),il=xs({relu6_:function(t){const e={x:gs(t,"x","relu6")};return ls.runKernel(cn,e)}}),al=xs({step_:function(t,e=0){const n={x:gs(t,"x","step")},r={alpha:e};return ls.runKernel(Zn,n,r)}});function ol(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return qa(t,al(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ll(t,e){let n=e;const r=hi(t.shape,e.shape);return r.length>0&&(n=Ka(n,r)),la(n,t.shape)}function ul(t,e,n,r){if("linear"===e)return t;if("relu"===e)return $o(t);if("elu"===e)return Aa(t);if("relu6"===e)return il(t);if("prelu"===e)return vo(t,n);if("leakyrelu"===e)return Wa(t,r);if("sigmoid"===e)return Ao(t);throw new Error(`Unknown fused activation ${e}.`)}const cl=(t,e)=>!(t>0)||"linear"===e,hl=xs({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===cl(ls.state.gradientDepth,l)){d("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=va(t,e,n,r,s,i,a);return null!=o&&(h=Gi(h,o)),ul(h,l,u,c)}const h=gs(t,"x","conv2d","float32"),p=gs(e,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=la(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),oa("fused conv2d",r,a);const g="NHWC"===s?f.shape[3]:f.shape[1];d(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),d(ia(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const b=Zi(f.shape,p.shape,n,i,r,a);let x,y;if(null!=o&&(x=gs(o,"bias","fused conv2d"),[x]=ts(x,h),"NHWC"===s?di(b.outShape,x.shape):(d(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),d(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){const t=u.shape;if(d(t.length<=1||3===t.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`)),1===t.length)d(1===t[0]||t[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===t.length)try{di(t,b.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=gs(u,"prelu weights","fused conv2d")}const w=(t,e)=>{d("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,o,u,c]=e,h=ol(t,u,l);d(sa(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const p=[Ia(o.shape,h,a,n,r),sl(o,h,a.shape,n,r)];if(null!=c){const t=ll(c,h);p.push(t)}return p},v={x:f,filter:p,bias:x,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Bi(((t,e,n)=>{let r=ls.runKernel(tr,v,k);return n([e,t,r]),m&&(r=la(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return t(f,p)}{const t=Bi(((t,e,n,r)=>{let s=ls.runKernel(tr,v,k);return r([e,t,s,n]),m&&(s=la(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return t(f,p,x)}}}),dl=xs({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,i=[1,1],a){let o=t;3===t.rank&&(o=la(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=la(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return ls.runKernel(Bt,u,c)}}),pl=xs({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=la(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:t},h=ls.runKernel(Ut,u,c);return l?la(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});xs({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===cl(ls.state.gradientDepth,l)){let h=Ta(t,e,n,r,s,i,a);return null!=o&&(h=Gi(h,o)),ul(h,l,u,c)}const h=gs(t,"x","depthwiseConv2d","float32"),p=gs(e,"filter","depthwiseConv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=la(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),d(ia(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),oa("fused depthwiseConv2d",r,a);const g=Zi(f.shape,p.shape,n,i,r,a,!0);let b,x;null!=o&&(b=gs(o,"bias","fused conv2d"),[b]=ts(b,h),di(g.outShape,b.shape)),null!=u&&(x=gs(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{d(sa(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,u,c]=e,h=ol(t,u,l),p=pl(o.shape,h,s,n,r,i,a),f=dl(o,h,s.shape,n,r,i,a);return null!=c?[p,f,ll(b,h)]:[p,f]},w={x:f,filter:p,bias:b,preluActivationWeights:x},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const t=Bi(((t,e,n)=>{let r=ls.runKernel(er,w,v);return n([e,t,r]),m&&(r=la(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(f,p)}{const t=Bi(((t,e,n,r)=>{let s=ls.runKernel(er,w,v);return r([e,t,s,n]),m&&(s=la(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(f,p,b)}}});const fl=xs({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===cl(ls.state.gradientDepth,i)){let l=Za(t,e,n,r);return null!=s&&(l=Gi(l,s)),ul(l,i,a,o)}let l=gs(t,"a","fused matMul"),u=gs(e,"b","fused matMul");[l,u]=ts(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),x=g(m),y=g(b);d(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=di(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=la(l,n?[x,c,p]:[x,p,c]),k=la(u,r?[y,f,h]:[y,h,f]);let I,S;null!=s&&(I=gs(s,"bias","fused matMul"),[I]=ts(I,l),di(w,I.shape)),null!=a&&(S=gs(a,"prelu weights","fused matMul"));const C=(t,e)=>{const[a,o,l,u]=e,c=ol(la(t,l.shape),l,i);let h,d;return n||r?!n&&r?(h=Za(c,o,!1,!1),d=Za(c,a,!0,!1)):n&&!r?(h=Za(o,c,!1,!0),d=Za(a,c,!1,!1)):(h=Za(o,c,!0,!0),d=Za(c,a,!0,!0)):(h=Za(c,o,!1,!0),d=Za(a,c,!0,!1)),null!=s?[h,d,ll(u,c)]:[h,d]},N={a:v,b:k,bias:I,preluActivationWeights:S},$={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const t=Bi(((t,e,n)=>{const r=ls.runKernel(Qn,N,$);return n([t,e,r]),{value:la(r,w),gradFunc:C}}));return t(v,k)}{const t=Bi(((t,e,n,r)=>{const s=ls.runKernel(Qn,N,$);return r([t,e,s,n]),{value:la(s,w),gradFunc:C}}));return t(v,k,I)}}});function ml(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return Go(s,"float32")}xs({hammingWindow_:function(t){return ml(t,.54,.46)}});const gl=xs({hannWindow_:function(t){return ml(t,.5,.5)}});function bl(t,e,n){if(f(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ps(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ws(t,e,r,n)}const xl=xs({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Fo(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=ga([Fo(t,i,e-r),La([r],s)]);a.push(o),i+=n}return 0===a.length?bl([],[0,e]):la(ga(a),[a.length,e])}});xs({stft_:function(t,e,n,r,s=gl){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=xl(t,e,n),o=qa(a,s(e));return el(o,r)}});const yl=xs({cropAndResize_:function(t,e,n,r,s="bilinear",i=0){const a=gs(t,"image","cropAndResize"),o=gs(e,"boxes","cropAndResize","float32"),l=gs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];d(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),d(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),d(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),d(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return ls.runKernel(Ot,c,h)}}),wl=xs({flipLeftRight_:function(t){const e=gs(t,"image","flipLeftRight","float32");d(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return ls.runKernel(re,n,{})}}),vl=xs({grayscaleToRGB_:function(t){const e=gs(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];d(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),d(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,_a(e,s)}}),kl=xs({rotateWithOffset_:function(t,e,n=0,r=.5){const s=gs(t,"image","rotateWithOffset","float32");d(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:e,fillValue:n,center:r};return ls.runKernel(Jn,i,a)}});function Il(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),d(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),d(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),d(1===e.rank,(()=>"scores must be a 1D tensor")),d(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),d(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const Sl=xs({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=gs(t,"boxes","nonMaxSuppression","float32"),a=gs(e,"scores","nonMaxSuppression","float32"),o=Il(i,a,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ls.runKernel(Ge,{boxes:i,scores:a},l)}});function Cl(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||Nl)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function Nl(t,e){return t>e?1:t<e?-1:0}function $l(t,e,n,r,s){return Rl(t,e,n,r,s,0)}function Tl(t,e,n,r,s,i){return Rl(t,e,n,r,s,0,!1,i,!0)}function El(t,e,n,r,s,i){return Rl(t,e,n,r,s,i,!0)}function Rl(t,e,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Ml);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Al(t,i,h[n]);if(a>=r){o=!0;break}if(e.score=e.score*Fl(r,c,a),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&Cl(u,e,Ml))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Al(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function Fl(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Ml(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Dl=xs({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=gs(t,"boxes","nonMaxSuppression"),o=gs(e,"scores","nonMaxSuppression"),l=Il(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=ls.runKernel(qe,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),_l=xs({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=gs(t,"boxes","nonMaxSuppression"),o=gs(e,"scores","nonMaxSuppression"),l=Il(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=ls.runKernel(He,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Ol=xs({resizeBilinear_:function(t,e,n=!1,r=!1){const s=gs(t,"images","resizeBilinear");d(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),d(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=la(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=ls.runKernel(ln,o,l);return a?la(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ll=xs({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=gs(t,"images","resizeNearestNeighbor");d(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),d("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=la(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=ls.runKernel(an,o,l);return a?la(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),zl=xs({bincount_:function(t,e,n){const r=gs(t,"x","bincount"),s=gs(e,"weights","bincount");d("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return ls.runKernel(xt,i,a)}}),Pl=xs({lessEqual_:function(t,e){let n=gs(t,"a","lessEqual","string_or_numeric"),r=gs(e,"b","lessEqual","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(ye,s)}}),Bl=xs({round_:function(t){const e={x:gs(t,"x","round")};return ls.runKernel(dn,e)}});function Ul(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return ls.runKernel(tn,{},s)}const Wl=xs({threshold_:function(t,e="binary",n=!1,r=.5){const s=gs(t,"image","threshold"),i=s.shape[0]*s.shape[1];let a,o,l,u,c=qa(Go([r]),255);if(d(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),d(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),d("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),d("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===s.shape[2]){[a,o,l]=Po(s,[1,1,1],-1);const t=qa(a,.2989),e=qa(o,.587),n=qa(l,.114);u=Gi(Gi(t,e),n)}else u=t;"otsu"===e&&(c=function(t,e){let n,r,s,i,a,o,l=Go([-1]),u=Go([0]),c=Go([0]);for(let h=0;h<t.size-1;h++){n=Fo(t,0,h+1),r=Fo(t,h+1),a=Ra(Ka(n),e),o=Ra(Ka(r),e);const d=Ka(qa(n,Ul(0,n.size)));s=Ra(d,Ka(n));const p=La(r.shape,n.size),f=Gi(Ul(0,r.size),p),m=qa(r,f);i=Ra(Ka(m),Ka(r));const g=ja(s,i),b=ja(s,i),x=qa(a,o);c=qa(qa(x,g),b);const y=Ba(c,u);u=Ko(y,c,u),l=Ko(y,Go([h]),l)}return l}(zl(ei(Bl(u),"int32"),vs([]),256),i));const h=n?Pl(u,c):Ba(u,c);return ei(qa(h,255),"int32")}}),Vl=xs({transform_:function(t,e,n="nearest",r="constant",s=0,i){const a=gs(t,"image","transform","float32"),o=gs(e,"transforms","transform","float32");d(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),d(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return ls.runKernel(Hn,l,u)}}),Gl=xs({bandPart_:function(t,e,n){d(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),d(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=gs(t,"a","bandPart");d(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=la(Ul(0,i,1,"int32"),[-1,1]),l=Ul(0,a,1,"int32"),u=ja(o,l),c=Ya(Pl(u,Ui(+e,"int32")),Ua(u,Ui(-n,"int32"))),h=bo([i,a],r.dtype);return la(Wo(qo(la(r,[-1,i,a])).map((t=>Ko(c,t,h)))),s)}}),Hl=xs({min_:function(t,e=null,n=!1){const r={x:gs(t,"x","min")},s={axis:e,keepDims:n};return ls.runKernel(Oe,r,s)}}),ql=xs({pow_:function(t,e){let n=gs(t,"base","pow"),r=gs(e,"exp","pow");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(Ze,s)}});function jl(t,e,n=null){if(0===t.rank)return Vi(t);if(1!==t.rank&&null===n)return jl(la(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Ka(Vi(t),n);if(e===1/0)return Ha(Vi(t),n);if(e===-1/0)return Hl(Vi(t),n);if("euclidean"===e||2===e)return Bo(Ka(ql(Vi(t),Ui(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ha(Ka(Vi(t),n[0]),n[1]-1);if(e===1/0)return Ha(Ka(Vi(t),n[1]),n[0]);if(e===-1/0)return Hl(Ka(Vi(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Bo(Ka(ho(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Kl=xs({norm_:function(t,e="euclidean",n=null,r=!1){const s=jl(t=gs(t,"x","norm"),e,n);let i=s.shape;if(r){const e=I(n,t.shape);i=ao(s.shape,e)}return la(s,i)}}),Xl=xs({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,d(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)d(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Po(t,t.shape[0],0).map((t=>Uo(t,[0])));d(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(ls.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=qa(Ka(qa(n[r],t)),n[r]);t=ja(t,e)}return Ra(t,Kl(t,"euclidean"))})));return e?Wo(n,0):n}});function Yl(t,e=!1){return ls.tidy((()=>{d(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Oa(n),i=ni(t);const a=bl([[1]],[1,1]);let o=ni(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=ls.tidy((()=>{const e=Fo(i,[t,t],[n-t,1]),l=Kl(e),u=Fo(i,[t,t],[1,1]),c=Ko(Ba(u,0),bl([[-1]]),bl([[1]])),h=ja(u,qa(c,l)),d=Ra(e,h);o=1===d.shape[0]?ni(a):ga([a,Fo(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=fo(Ra(Za(c,h),l)),f=Fo(i,[t,0],[n-t,r]),m=qa(p,o),g=Jo(o);if(0===t)i=ja(f,Za(m,Za(g,f)));else{const e=ja(f,Za(m,Za(g,f)));i=ga([Fo(i,[0,0],[t,r]),e],0)}const b=Jo(m),x=Fo(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=ja(x,Za(Za(x,o),b));else{const e=ja(x,Za(Za(x,o),b));s=ga([Fo(s,[0,0],[n,t]),e],1)}return[o,i,s]})),Oi([e,l,u])}return!e&&n>r&&(s=Fo(s,[0,0],[n,r]),i=Fo(i,[0,0],[r,r])),[s,i]}))}const Zl=xs({qr_:function(t,e=!1){if(d(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Yl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=qo(la(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=Yl(t,e);s.push(n),i.push(r)})),[la(Wo(s,0),t.shape),la(Wo(i,0),t.shape)]}}});var Jl;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Jl||(Jl={}));const Ql=xs({computeWeightedLoss_:function(t,e,n=Jl.SUM_BY_NONZERO_WEIGHTS){const r=gs(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=gs(e,"weights","computeWeightedLoss"));const i=null==s?r:qa(r,s);if(n===Jl.NONE)return i;if(n===Jl.SUM)return Ka(i);if(n===Jl.MEAN){if(null==s)return eo(i);{const t=r.size/s.size,e=Ra(Ka(i),Ka(s));return t>1?Ra(e,Ui(t)):e}}if(n===Jl.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ra(Ka(i),Ui(r.size));{const t=qa(s,xo(r.shape)),e=ei(Ka(mo(t,Ui(0))),"float32");return Ra(Ka(i),e)}}throw Error(`Unknown reduction: ${n}`)}});xs({absoluteDifference_:function(t,e,n,r=Jl.SUM_BY_NONZERO_WEIGHTS){const s=gs(t,"labels","absoluteDifference"),i=gs(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=gs(n,"weights","absoluteDifference")),p(s.shape,i.shape,"Error in absoluteDifference: ");const o=Vi(ja(s,i));return Ql(o,a,r)}}),xs({cosineDistance_:function(t,e,n,r,s=Jl.SUM_BY_NONZERO_WEIGHTS){const i=gs(t,"labels","cosineDistance"),a=gs(e,"predictions","cosineDistance");let o=null;null!=r&&(o=gs(r,"weights","cosineDistance")),p(i.shape,a.shape,"Error in cosineDistance: ");const l=Ui(1),u=ja(l,Ka(qa(i,a),n,!0));return Ql(u,o,s)}}),xs({hingeLoss_:function(t,e,n,r=Jl.SUM_BY_NONZERO_WEIGHTS){let s=gs(t,"labels","hingeLoss");const i=gs(e,"predictions","hingeLoss");let a=null;null!=n&&(a=gs(n,"weights","hingeLoss")),p(s.shape,i.shape,"Error in hingeLoss: ");const o=Ui(1);s=ja(qa(Ui(2),s),o);const l=$o(ja(o,qa(s,i)));return Ql(l,a,r)}}),xs({huberLoss_:function(t,e,n,r=1,s=Jl.SUM_BY_NONZERO_WEIGHTS){const i=gs(t,"labels","huberLoss"),a=gs(e,"predictions","huberLoss");let o=null;null!=n&&(o=gs(n,"weights","huberLoss")),p(i.shape,a.shape,"Error in huberLoss: ");const l=Ui(r),u=Vi(ja(a,i)),c=no(u,l),h=ja(u,c),d=Gi(qa(Ui(.5),ho(c)),qa(l,h));return Ql(d,o,s)}}),xs({logLoss_:function(t,e,n,r=1e-7,s=Jl.SUM_BY_NONZERO_WEIGHTS){const i=gs(t,"labels","logLoss"),a=gs(e,"predictions","logLoss");let o=null;null!=n&&(o=gs(n,"weights","logLoss")),p(i.shape,a.shape,"Error in logLoss: ");const l=Ui(1),u=Ui(r),c=fo(qa(i,Va(Gi(a,u)))),h=qa(ja(l,i),Va(Gi(ja(l,a),u))),d=ja(c,h);return Ql(d,o,s)}});const tu=xs({squaredDifference_:function(t,e){let n=gs(t,"a","squaredDifference"),r=gs(e,"b","squaredDifference");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Dn,s,{})}});xs({meanSquaredError_:function(t,e,n,r=Jl.SUM_BY_NONZERO_WEIGHTS){const s=gs(t,"labels","meanSquaredError"),i=gs(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=gs(n,"weights","meanSquaredError")),p(s.shape,i.shape,"Error in meanSquaredError: ");const o=tu(s,i);return Ql(o,a,r)}}),xs({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Jl.SUM_BY_NONZERO_WEIGHTS){let i=gs(t,"multiClassLabels","sigmoidCrossEntropy");const a=gs(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=gs(n,"weights","sigmoidCrossEntropy")),p(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Ui(r),e=Ui(1),n=Ui(.5);i=Gi(qa(i,ja(e,t)),qa(n,t))}const l=function(t,e){const n=gs(t,"labels","sigmoidCrossEntropyWithLogits"),r=gs(e,"logits","sigmoidCrossEntropyWithLogits");p(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=$o(r),i=qa(r,n),a=Ga(Ma(fo(Vi(r))));return Gi(ja(s,i),a)}(i,a);return Ql(l,o,s)}});const eu=xs({logSumExp_:function(t,e=null,n=!1){const r=gs(t,"x","logSumExp"),s=I(e,r.shape),i=Ha(r,s,!0),a=ja(r,i),o=Ma(a),l=Ka(o,s),u=Va(l),c=Gi(la(i,u.shape),u);if(n){const t=ao(c.shape,s);return la(c,t)}return c}});xs({softmaxCrossEntropy_:function(t,e,n,r=0,s=Jl.SUM_BY_NONZERO_WEIGHTS){let i=gs(t,"onehotLabels","softmaxCrossEntropy");const a=gs(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=gs(n,"weights","softmaxCrossEntropy")),p(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Ui(r),e=Ui(1),n=Ui(i.shape[1]);i=Gi(qa(i,ja(e,t)),Ra(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const r=Bi(((t,e,r)=>{const s=eu(e,[n],!0),i=ja(ei(e,"float32"),s);r([t,i]);const a=fo(qa(i,t));return{value:Ka(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=ao(t.shape,[n]);return[qa(la(t,i),ja(ei(r,"float32"),Ma(s))),qa(la(t,i),ja(Ma(s),ei(r,"float32")))]}}}));return r(t,e)}(i,a);return Ql(l,o,s)}}),xs({sparseFillEmptyRows_:function(t,e,n,r){const s=gs(t,"indices","sparseFillEmptyRows","int32"),i=gs(e,"values","sparseFillEmptyRows"),a=gs(n,"denseShape","sparseFillEmptyRows","int32"),o=gs(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=ls.runKernel(En,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),xs({sparseReshape_:function(t,e,n){const r=gs(t,"inputIndices","sparseReshape","int32"),s=gs(e,"inputShape","sparseReshape","int32"),i=gs(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=ls.runKernel(Rn,a);return{outputIndices:o[0],outputShape:o[1]}}}),xs({sparseSegmentMean_:function(t,e,n){const r=gs(t,"data","sparseSegmentMean"),s=gs(e,"indices","sparseSegmentMean","int32"),i=gs(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return ls.runKernel(An,a)}}),xs({sparseSegmentSum_:function(t,e,n){const r=gs(t,"data","sparseSegmentSum"),s=gs(e,"indices","sparseSegmentSum","int32"),i=gs(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return ls.runKernel(Fn,a)}}),xs({stringNGrams_:function(t,e,n,r,s,i,a,o){const l=gs(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=gs(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=ls.runKernel(Ln,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),xs({stringSplit_:function(t,e,n=!0){const r=gs(t,"input","stringSplit","string"),s=gs(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},a={input:r,delimiter:s},o=ls.runKernel(zn,a,i);return{indices:o[0],values:o[1],shape:o[2]}}}),xs({stringToHashBucketFast_:function(t,e){const n=gs(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ls.runKernel(Pn,s,r)}});const nu={flipLeftRight:wl,grayscaleToRGB:vl,resizeNearestNeighbor:Ll,resizeBilinear:Ol,rotateWithOffset:kl,cropAndResize:yl,nonMaxSuppression:Sl,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=gs(t,"boxes","nonMaxSuppressionAsync"),a=gs(e,"scores","nonMaxSuppressionAsync"),o=Il(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=$l(u,c,n,r,s);return i!==t&&i.dispose(),a!==e&&a.dispose(),Go(h,"int32")},nonMaxSuppressionWithScore:Dl,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=gs(t,"boxes","nonMaxSuppressionAsync"),o=gs(e,"scores","nonMaxSuppressionAsync"),l=Il(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=El(c,h,n,r,s,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Go(d,"int32"),selectedScores:Go(p)}},nonMaxSuppressionPadded:_l,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=gs(t,"boxes","nonMaxSuppressionAsync"),o=gs(e,"scores","nonMaxSuppressionAsync"),l=Il(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Tl(d,p,u,c,h,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Go(f,"int32"),validOutputs:Ui(m,"int32")}},threshold:Wl,transform:Vl},ru={bandPart:Gl,gramSchmidt:Xl,qr:Zl};class su extends Wi{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ls.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ls.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:_i((()=>Xo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:_i((()=>Xo(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;_i((()=>{const t=Gi(qa(i,this.rho),qa(ho(s),1-this.rho)),e=qa(Ra(Bo(Gi(a,this.epsilon)),Bo(Gi(i,this.epsilon))),s),n=Gi(qa(a,this.rho),qa(ho(e),1-this.rho));i.assign(t),a.assign(n);const o=Gi(qa(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Oi(this.accumulatedGrads.map((t=>t.variable))),Oi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}su.className="Adadelta",Fi(su);class iu extends Wi{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ls.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:_i((()=>La(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;_i((()=>{const t=Gi(i,ho(s));i.assign(t);const e=Gi(qa(Ra(s,Bo(Gi(t,ls.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Oi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}iu.className="Adagrad",Fi(iu);class au extends Wi{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],_i((()=>{this.accBeta1=Ui(e).variable(),this.accBeta2=Ui(n).variable()})),null==r&&(this.epsilon=ls.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);_i((()=>{const n=ja(1,this.accBeta1),r=ja(1,this.accBeta2);e.forEach(((e,s)=>{const i=ls.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:_i((()=>Xo(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:_i((()=>Xo(i).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Gi(qa(o,this.beta1),qa(a,1-this.beta1)),c=Gi(qa(l,this.beta2),qa(ho(a),1-this.beta2)),h=Ra(u,n),d=Ra(c,r);o.assign(u),l.assign(c);const p=Gi(qa(Ra(h,Gi(Bo(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(qa(this.accBeta1,this.beta1)),this.accBeta2.assign(qa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Oi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Oi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),_i((()=>{this.accBeta1.assign(ql(this.beta1,this.iterations_+1)),this.accBeta2.assign(ql(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}au.className="Adam",Fi(au);class ou extends Wi{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],_i((()=>{this.iteration=Ui(0).variable(),this.accBeta1=Ui(e).variable()})),null==r&&(this.epsilon=ls.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);_i((()=>{const n=ja(1,this.accBeta1),r=Ra(-this.learningRate,Gi(qa(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=ls.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Xo(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Xo(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Gi(qa(o,this.beta1),qa(a,1-this.beta1)),c=qa(l,this.beta2),h=Vi(a),d=to(c,h);o.assign(u),l.assign(d);const p=Gi(qa(Ra(r,n),Ra(u,Gi(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Gi(this.iteration,1)),this.accBeta1.assign(qa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Oi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Oi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}ou.className="Adamax",Fi(ou);class lu extends Wi{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=ls.registeredVariables[e];_i((()=>{const t=Gi(qa(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Li(Ui(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}lu.className="SGD",Fi(lu);class uu extends lu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ui(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ls.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:_i((()=>Xo(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&_i((()=>{let t;const e=Gi(qa(this.m,s),i);t=this.useNesterov?Gi(qa(this.c,Gi(i,qa(e,this.m))),r):Gi(qa(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Oi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}uu.className="Momentum",Fi(uu);class cu extends Wi{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ls.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ls.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:_i((()=>Xo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:_i((()=>Xo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:_i((()=>Xo(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;_i((()=>{const t=Gi(qa(a,this.decay),qa(ho(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Gi(qa(e,this.decay),qa(i,1-this.decay)),l=Ra(qa(i,this.learningRate),Bo(ja(t,Gi(ho(s),this.epsilon)))),u=Gi(qa(o,this.momentum),l);a.assign(t),e.assign(s),o.assign(u);const c=ja(r,u);r.assign(c)}else{const t=Gi(qa(a,this.decay),qa(ho(i),1-this.decay)),e=Gi(qa(o,this.momentum),Ra(qa(i,this.learningRate),Bo(Gi(t,this.epsilon))));a.assign(t),o.assign(e);const n=ja(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Oi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Oi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Oi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}cu.className="RMSProp",Fi(cu);class hu{static sgd(t){return new lu(t)}static momentum(t,e,n=!1){return new uu(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new cu(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new au(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new su(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new ou(t,e,n,r,s)}static adagrad(t,e=.1){return new iu(t,e)}}const du={sgd:hu.sgd,momentum:hu.momentum,adadelta:hu.adadelta,adagrad:hu.adagrad,rmsprop:hu.rmsprop,adamax:hu.adamax,adam:hu.adam},pu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function fu(){return new Promise((t=>pu((()=>t()))))}function mu(t,e){const n=t[0].length;t.forEach(((t,e)=>{d(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),d(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)d(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function gu(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const bu=30;function xu(t){return t<=bu?t:D(t,Math.floor(Math.sqrt(t)))}function yu(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function wu(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function vu(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function ku(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Iu(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Su(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Cu(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===g(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let t=0;t<s.length-1;++t)a*=s[t];const o=t.shape,l=s.slice();l.pop();let u=1;for(let t=i;t<n;++t)u*=o[t],l.push(o[t]);const c=[..._(t.shape).map((t=>t/u)),1].slice(0,i);return[l,a,u,c]}function Nu(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function $u(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Nu(n,e,t)}function Tu(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let t=s;t<i;++t)a*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:g(e.shape)/o,sliceSize:a,strides:[..._(n.slice(0,s)),1],outputSize:g(n)}}const Eu=1.7580993408473768,Ru=1.0507009873554805,Au=.3275911,Fu=.254829592,Mu=-.284496736,Du=1.421413741,_u=-1.453152027,Ou=1.061405429;function Lu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function zu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Pu(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Bu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Uu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Wu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Vu(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Gu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const Hu=/->/g;function qu(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Hu,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=t.split("->");d(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=r.split(","),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<s.length;++t){const e=s[t];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(i.length);for(let t=0;t<a;++t){if(new Set(i[t].split("")).size!==i[t].length)throw new Error(`Found duplicate axes in input component ${i[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<i[t].length;++e)l[t].push(o.indexOf(i[t][e]))}const u=o.length,c=[];for(let t=s.length;t<u;++t)c.push(t);return{allDims:o,summedDims:c,idDims:l}}function ju(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function Ku(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const s=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=s[n]:d(r[e[t][n]]===s[n],(()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Xu(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let t=0;t<s;++t)r.push([]);const i=[];for(let t=0;t<n.length;++t){const s=Zu(e,n[t]);for(const e of s)-1===i.indexOf(e)&&(r[t].push(e),i.push(e))}return{path:n,steps:r}}function Yu(t){return t.every(((t,e)=>t===e))}function Zu(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function Ju(t,e,n=0){let r=[];if("number"==typeof e)d(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);d(s<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const r=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-r}d(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function Qu(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function tc(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function ec(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function nc(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function rc(t,e){return`size ${t} must be non-negative, not ${e}`}function sc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ic(t,e){return`Input to reshape is a SparseTensor with ${g(t)}\n  dense values, but the requested shape requires a multiple of ${g(e)}. inputShape=${t} outputShape= ${e}`}function ac(t,e){return`Input to reshape is a tensor with ${g(t)} dense values, but the requested shape has ${g(e)}. inputShape=${t} outputShape=${e}`}function oc(){return"segment ids must be >= 0"}function lc(){return"segment ids are not increasing"}function uc(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function cc(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function hc(t,e){let n,r=!1;for(t<=bu?(n=t,r=!0):n=D(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=D(t,n+1);return n}function dc(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function pc(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<s;t++)o.push(e.shape[t]);for(let e=n+1;e<i;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function fc(t){try{return t.map((t=>Rr(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function mc(t){return t.map((t=>Er(t)))}function gc(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=ti(t,"int32"),s=ti([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),a=e*t.length;s.values.set(i,a)}return s.toTensor()}const bc={kernelName:J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,al(ei(n,"float32"),-1))}}},xc={kernelName:Q,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=ho(ei(n,"float32")),r=Bo(ja(Ui(1),e));return fo(Ra(t,r))}}}},yc={kernelName:tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Bo(ja(ho(ei(n,"float32")),1));return Ra(t,e)}}}},wc={kernelName:et,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{let e=t;const r=hi(n.shape,s);return r.length>0&&(e=Ka(e,r)),la(e,n.shape)},b:()=>{let e=t;const n=hi(r.shape,s);return n.length>0&&(e=Ka(e,n)),la(e,r.shape)}}}},vc={kernelName:nt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},kc={kernelName:it,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xo(n)}}},Ic={kernelName:at,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xo(n)}}},Sc={kernelName:ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,Bo(ja(Ui(1),ho(ei(n,"float32")))))}}},Cc={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Bo(Gi(Ui(1),ho(ei(n,"float32"))));return Ra(t,e)}}}},Nc={kernelName:ht,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{const e=Gi(ho(n),ho(r));let i=qa(t,Ra(r,e));const a=hi(n.shape,s);return a.length>0&&(i=Ka(i,a)),la(i,n.shape)},b:()=>{const e=Gi(ho(n),ho(r));let i=fo(qa(t,Ra(n,e)));const a=hi(r.shape,s);return a.length>0&&(i=Ka(i,a)),la(i,r.shape)}}}},$c={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,Gi(ho(ei(n,"float32")),1))}}},Tc={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,ja(Ui(1),ho(ei(n,"float32"))))}}},Ec=xs({avgPool3dGrad_:function(t,e,n,r,s,i){const a=gs(t,"dy","avgPool3dGrad"),o=gs(e,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=la(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=la(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),d(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),oa("avgPool3dGrad",s,i);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:i},f=ls.runKernel(mt,h,p);return c?la(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Rc={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Ec(t,r,s,i,a,o)}}},Ac=xs({avgPoolGrad_:function(t,e,n,r,s){const i=gs(t,"dy","avgPoolGrad"),a=gs(e,"input","avgPoolGrad");d(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=la(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=la(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),d(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},p=ls.runKernel(pt,c,h);return u?la(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Fc={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>Ac(t,r,s,i,a)}}},Mc={kernelName:gt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Za(t,s,!1,!1),b:()=>Za(t,r,!0,!1)}:i&&!a?{a:()=>Za(s,t,!1,!0),b:()=>Za(r,t,!1,!1)}:{a:()=>Za(s,t,!0,!0),b:()=>Za(t,r,!0,!0)}:{a:()=>Za(t,s,!1,!0),b:()=>Za(r,t,!0,!1)}}},Dc=xs({spaceToBatchND_:function(t,e,n){const r=gs(t,"x","spaceToBatchND");d(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),d(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),d(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return ls.runKernel(Nn,s,i)}}),_c={kernelName:bt,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Dc(t,r,s)}}},Oc={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])a[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>Ka(t,o,!0)}}},Lc={kernelName:wt,gradFunc:t=>({x:()=>t.clone()})},zc={kernelName:vt,gradFunc:t=>({x:()=>Xo(t)})},Pc={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>Ko(Ya(Ua(r,s),Pl(r,i)),t,Xo(t))}}},Bc={kernelName:St,inputsToSave:["x"],gradFunc:bc.gradFunc},Uc={kernelName:Ct,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=I(s,e[0].shape)[0],a=r.map((t=>t[i]));return Po(t,a,i).map((t=>()=>t))}},Wc={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return d(sa(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Ia(r.shape,t,s,a,o,l),filter:()=>sl(r,t,s.shape,a,o,l)}}},Vc={kernelName:Tt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>va(t,s,i,a,o,1,l),filter:()=>sl(t,r,s.shape,i,a,o,l)}}},Gc=xs({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=la(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=la(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),d(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),d(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),d(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),d(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),d(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return ls.runKernel(Rt,o,l)}}),Hc={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;d(sa(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>Na(a.shape,t,o,s,i),filter:()=>Gc(a,t,o.shape,s,i)}}},qc=xs({sin_:function(t){const e={x:gs(t,"x","sin","float32")};return ls.runKernel(yn,e)}}),jc={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(fo(qc(ei(n,"float32"))),t)}}},Kc=xs({sinh_:function(t){const e={x:gs(t,"x","sinh")};return ls.runKernel(wn,e)}}),Xc={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(Kc(ei(n,"float32")),t)}}},Yc=xs({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:gs(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return ls.runKernel(_t,s,i)}}),Zc={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=lo([s],r.rank);let n=Yc(t,s,i,!a);return null!=e&&(n=Jo(n,e)),n}}}},Jc={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;d(sa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return d(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),d(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),d(ia(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),oa("depthwiseConv2d",i,a),{x:()=>pl(l.shape,t,u,s,i,o,a),filter:()=>dl(l,t,u.shape,s,i,o,a)}}},Qc={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>ls.runKernel(Gt,i,n),filter:()=>ls.runKernel(Ht,a,n)}}},th={kernelName:Kt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>ls.runKernel(Xt,r)}}},eh={kernelName:Yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=qa(Ma(fo(ho(n))),2/Math.sqrt(Math.PI));return{x:()=>qa(t,r)}}},nh={kernelName:Jt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,n)}}},rh={kernelName:Qt,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>la(t,n.shape)}}},sh={kernelName:te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,Ma(n))}}},ih={kernelName:se,gradFunc:t=>({x:()=>Xo(t)})},ah={kernelName:ie,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{const e=Ra(t,ei(r,"float32")),i=hi(n.shape,s);return i.length>0?la(Ka(e,i),n.shape):e},b:()=>{let e=qa(t,ei(n,"float32"));const i=hi(r.shape,s);i.length>0&&(e=la(Ka(e,i),r.shape));const a=ho(r);return fo(Ra(e,ei(a,"float32")))}}}},oh=xs({rsqrt_:function(t){const e={x:gs(t,"x","rsqrt","float32")};return ls.runKernel(pn,e)}}),lh={kernelName:ae,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?Ui(1):o,u=hi(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=ja(s,i),d=qa(t,l),p=oh(Gi(a,Ui(r))),f=qa(qa(qa(p,p),p),Ui(-.5));return{x:()=>1===i.rank?la(qa(qa(t,_a(la(p,[1,1,1,i.shape[0]]),c)),l),s.shape):la(qa(qa(t,p),l),s.shape),mean:()=>{let t=qa(qa(p,Ui(-1)),d);return 1===i.rank&&(t=Ka(t,u)),la(t,i.shape)},variance:()=>{let t=qa(qa(f,h),d);return 1===i.rank&&(t=Ka(t,u)),la(t,i.shape)},scale:()=>{const e=qa(h,p);let n=qa(t,e);return 1===i.rank&&(n=Ka(n,u)),la(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Ka(e,u)),la(e,i.shape)}}}},uh=xs({unsortedSegmentSum_:function(t,e,n){const r=gs(t,"x","unsortedSegmentSum"),s=gs(e,"segmentIds","unsortedSegmentSum","int32");d(x(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return ls.runKernel(Xn,i,a)}}),ch={kernelName:oe,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,a=I(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=hh(0,l),d=hh(l+1,l+1+c),p=dh([o,[n],u]),f=la(t,p),m=la(s,[n]),g=dh([[l],h,d]),b=Jo(f,g);let x=uh(b,m,r.shape[a]);const y=uo(g);return x=Jo(x,y),x},indices:()=>s}}};function hh(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function dh(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const ph={kernelName:ce,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Xo(n),b:()=>Xo(r)}}},fh={kernelName:he,gradFunc:t=>({x:()=>ei(t,"float32")})},mh={kernelName:fe,gradFunc:t=>({x:()=>Xo(t)})},gh={kernelName:me,gradFunc:t=>({x:()=>Xo(t)})},bh={kernelName:ge,gradFunc:t=>({x:()=>Xo(t)})},xh={kernelName:be,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,i=Ba(r,0);return{x:()=>Ko(i,t,qa(t,s))}}},yh={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,Gi(n,1))}}},wh={kernelName:ve,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,ei(n,"float32"))}}},vh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Ma(r);return ja(t,qa(Ka(t,s,!0),e))}}}},kh=xs({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return ls.runKernel($e,o,l)}}),Ih={kernelName:Ne,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>kh(r,s,t,i,a,o,l)}}};function Sh(t,e,n,r){return e.rank<n.rank&&(e=la(e,ao(e.shape,r))),t.rank<n.rank&&(t=la(t,ao(t.shape,r))),{x:()=>qa(t,ei(Fa(n,e),t.dtype))}}const Ch={kernelName:Te,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,i=e[0],a=Sh(t,e[1],i,I(s,i.shape));return{x:()=>a.x()}}},Nh=xs({less_:function(t,e){let n=gs(t,"a","less","string_or_numeric"),r=gs(e,"b","less","string_or_numeric");[n,r]=ts(n,r),di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(xe,s)}}),$h={kernelName:Ee,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>qa(t,ei(Ua(n,r),"float32")),b:()=>qa(t,ei(Nh(n,r),"float32"))}}},Th=xs({maxPool3dGrad_:function(t,e,n,r,s,i,a){const o=gs(t,"dy","maxPool3dGrad"),l=gs(e,"input","maxPool3dGrad"),u=gs(n,"output","maxPool3dGrad");let c=o,h=l,p=u,f=!1;4===l.rank&&(f=!0,c=la(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=la(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=la(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),d(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),d(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),oa("maxPool3dGrad",i,a);const m={dy:c,input:h,output:p},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},b=ls.runKernel(Me,m,g);return f?la(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Eh={kernelName:Fe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Th(t,r,s,i,a,o,l)}}},Rh=xs({maxPoolGrad_:function(t,e,n,r,s,i,a){const o=gs(t,"dy","maxPoolGrad"),l=gs(e,"input","maxPoolGrad"),u=gs(n,"output","maxPoolGrad");d(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),d(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),d(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),oa("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return ls.runKernel(Ae,c,h)}}),Ah={kernelName:Re,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Rh(t,r,s,i,a,o)}}},Fh={kernelName:_e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,i=I(s,r.shape),a=g(io(r.shape,i)[1]);return{x:()=>{const e=r.shape.slice();i.forEach((t=>{e[t]=1}));const n=la(t,e);return Ra(qa(n,xo(r.shape,"float32")),a)}}}},Mh={kernelName:Oe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,a]=e,o=Sh(t,a,i,I(s,i.shape));return{x:()=>o.x()}}},Dh={kernelName:Le,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>qa(t,ei(Pl(n,r),"float32")),b:()=>qa(t,ei(Ba(n,r),"float32"))}}},_h={kernelName:ze,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Fo(t,i,r.shape)}}},Oh={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{const e=hi(n.shape,s);return e.length>0?la(Ka(t,e),n.shape):t},b:()=>{const e=qa(t,fo(za(Ra(n,r)))),i=hi(r.shape,s);return i.length>0?la(Ka(e,i),r.shape):e}}}},Lh={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{const e=qa(t,ei(r,"float32")),i=hi(n.shape,s);return i.length>0?la(Ka(e,i),n.shape):e},b:()=>{const e=qa(t,ei(n,"float32")),i=hi(r.shape,s);return i.length>0?la(Ka(e,i),r.shape):e}}}},zh={kernelName:We,gradFunc:t=>({x:()=>fo(t)})},Ph={kernelName:Ke,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>bo(n.shape,"float32")}}},Bh={kernelName:je,gradFunc:t=>({x:()=>Xo(t)})},Uh={kernelName:Xe,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return qo(t,r).map((t=>()=>t))}},Wh={kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>Fo(t,i,r.shape)}}},Vh={kernelName:Ze,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=di(i.shape,a.shape);return{a:()=>{const e=ei(a,"float32");let n=qa(t,qa(e,ql(i,ja(e,Ui(1)))));const r=hi(i.shape,o);return r.length>0&&(n=Ka(n,r)),la(n,i.shape)},b:()=>{const e=Ba(i,0),n=Ko(e,Va(i),Xo(i));let r=qa(t,qa(s,n));const l=hi(a.shape,o);return l.length>0&&(r=Ka(r,l)),la(r,a.shape)}}}},Gh={kernelName:Je,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Ba(n,0);return{x:()=>Ko(s,t,qa(t,r)),alpha:()=>{let e=Ko(s,Xo(t),qa(t,n));const i=hi(r.shape,t.shape);return i.length>0&&(e=Ka(e,i)),la(e,r.shape)}}}},Hh=xs({cumprod_:function(t,e=0,n=!1,r=!1){const s={x:gs(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:r};return ls.runKernel(Dt,s,i)}});const qh={kernelName:Qe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;let i=[];return i=null==s?r.shape.map(((t,e)=>e)):"number"==typeof s?[s]:s,{x:()=>function(t,e,n){const r=t.shape.length,s=r-n.length,i=lo(n,r);let a=t;null!=i&&(a=Jo(t,i));const o=a.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((t,e)=>t*e),1);o.push(l);let u=function(t,e,n){const r=t.shape.slice();r[n]=1;const s=la(e,r),i=Hh(t,n,!0,!1),a=Hh(t,n,!0,!0),o=qa(i,a);return qa(s,o)}(a.reshape(o),e,s);if(u=u.reshape(a.shape),null!=i){const t=uo(i);u=Jo(u,t)}return u}(r,t,i)}}},jh={kernelName:qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{const e=Ra(t,ei(r,"float32")),i=hi(n.shape,s);return i.length>0?la(Ka(e,i),n.shape):e},b:()=>{let e=qa(t,ei(n,"float32"));const i=hi(r.shape,s);i.length>0&&(e=la(Ka(e,i),r.shape));const a=ho(r);return fo(Ra(e,ei(a,"float32")))}}}},Kh={kernelName:nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,fo(ho(n)))}}},Xh={kernelName:cn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=qa(Pl(n,6),al(n));return{x:()=>qa(t,ei(r,"float32"))}}},Yh={kernelName:rn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,ei(al(n),"float32"))}}},Zh={kernelName:sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>la(t,n.shape)}}},Jh={kernelName:ln,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ls.runKernel(un,s,n)}}},Qh={kernelName:an,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ls.runKernel(on,s,n)}}},td={kernelName:hn,gradFunc:(t,e,n)=>{const{dims:r}=n,s=I(r,t.shape);return{x:()=>To(t,s)}}},ed={kernelName:dn,gradFunc:t=>({x:()=>Xo(t)})},nd={kernelName:pn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fo(Ra(t,qa(ql(n,1.5),2)))}}},rd=xs({logicalNot_:function(t){const e={x:gs(t,"x","logicalNot","bool")};return ls.runKernel(Se,e)}}),sd={kernelName:gn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>ei(Xo(n),"float32"),t:()=>qa(t,ei(n,t.dtype)),e:()=>qa(t,ei(rd(n),t.dtype))}}},id={kernelName:bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ba(n,Ui(0)),r=Ui(Eu),s=Ui(Ru),i=qa(t,s),a=qa(qa(t,r),Ma(ei(n,"float32")));return Ko(e,i,a)}}}},ad={kernelName:kn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,qa(n,ja(Ui(1),n)))}}},od={kernelName:vn,gradFunc:t=>({x:()=>Xo(t)})},ld=xs({cos_:function(t){const e={x:gs(t,"x","cos","float32")};return ls.runKernel(Ft,e)}}),ud={kernelName:yn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(ld(ei(n,"float32")),t)}}},cd=xs({cosh_:function(t){const e={x:gs(t,"x","cosh","float32")};return ls.runKernel(Mt,e)}}),hd={kernelName:wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(cd(ei(n,"float32")),t)}}},dd={kernelName:xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,a=r.shape,[o,l]=$i(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>wo(t,u)}}},pd={kernelName:Tn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=qa(t,r);return{logits:()=>ja(i,qa(Ka(i,[s],!0),r))}}},fd={kernelName:In,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,Ao(n))}}},md=xs({batchToSpaceND_:function(t,e,n){const r=gs(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));d(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),d(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),d(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},a={blockShape:e,crops:n};return ls.runKernel(bt,i,a)}}),gd={kernelName:Nn,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>md(t,r,s)}}},bd={kernelName:$n,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>ga(t,r)}}},xd=[bc,xc,yc,wc,vc,kc,Ic,Sc,Cc,Nc,$c,Tc,Rc,Fc,Mc,_c,Oc,Lc,zc,Pc,Bc,Uc,Vc,Wc,Hc,jc,Xc,Zc,Jc,Qc,jh,th,eh,nh,rh,sh,ah,ih,lh,ch,ph,fh,mh,gh,bh,xh,yh,wh,vh,Ih,Ch,Ch,$h,Eh,Ah,Fh,Mh,Dh,_h,Oh,Lh,zh,Ph,Bh,Uh,Wh,Wh,Vh,Gh,qh,Kh,Xh,Yh,Zh,Jh,Qh,td,ed,nd,sd,id,ad,od,ud,hd,dd,pd,fd,gd,gd,bd,bd,{kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,qa(Bo(ei(n,"float32")),2))}}},{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ui(2);return{a:()=>qa(t,qa(s,ja(n,r))),b:()=>qa(t,qa(s,ja(r,n)))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(t,qa(ei(n,"float32"),2))}}},{kernelName:Zn,gradFunc:t=>({x:()=>Xo(t)})},{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=di(n.shape,r.shape);return{a:()=>{let e=t;const r=hi(n.shape,s);return r.length>0&&(e=Ka(e,r)),la(e,n.shape)},b:()=>{let e=t;const n=hi(r.shape,s);return n.length>0&&(e=Ka(e,n)),la(fo(e),r.shape)}}}},{kernelName:Cn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;I(i,r.shape).forEach((t=>{s[t]=1}));const a=la(t,s),o=qa(a,xo(r.shape,"float32"));return{x:()=>o}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ra(t,ho(ld(n)))}}},{kernelName:Wn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qa(ja(Ui(1),ho(n)),t)}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Xo(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Gi(e,Fo(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Gi(e,Fo(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=Gi(e,Fo(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=Gi(e,Fo(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:qn,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=uo(s);return{x:()=>Jo(t,i)}}},{kernelName:Kn,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Wo(t,s)}}},{kernelName:Xn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=to(e,Xo(e)),r=Pa(t,n);let s=Ua(e,Ui(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=Da(s,t+1);s=Ya(s,xo(r.shape,"bool"));const a=Xo(r);return Ko(s,r,a)}(t,n)}}},{kernelName:Yn,gradFunc:t=>({x:()=>Xo(t)})}];for(const t of xd)cr(t);Gr().prototype.abs=function(){return this.throwIfDisposed(),Vi(this)};const yd=xs({acos_:function(t){const e={x:gs(t,"x","acos")};return ls.runKernel(Q,e)}});Gr().prototype.acos=function(){return this.throwIfDisposed(),yd(this)};const wd=xs({acosh_:function(t){const e={x:gs(t,"x","acosh")};return ls.runKernel(tt,e)}});Gr().prototype.acosh=function(){return this.throwIfDisposed(),wd(this)},Gr().prototype.add=function(t){return this.throwIfDisposed(),Gi(this,t)},Gr().prototype.all=function(t,e){return this.throwIfDisposed(),Hi(this,t,e)},Gr().prototype.any=function(t,e){return this.throwIfDisposed(),qi(this,t,e)},Gr().prototype.argMax=function(t){return this.throwIfDisposed(),ji(this,t)};const vd=xs({argMin_:function(t,e=0){const n={x:gs(t,"x","argMin")},r={axis:e};return ls.runKernel(at,n,r)}});Gr().prototype.argMin=function(t){return this.throwIfDisposed(),vd(this,t)},Gr().prototype.asScalar=function(){return this.throwIfDisposed(),d(1===this.size,(()=>"The array must have only 1 element.")),la(this,[])},Gr().prototype.asType=function(t){return this.throwIfDisposed(),ei(this,t)},Gr().prototype.as1D=function(){return this.throwIfDisposed(),la(this,[this.size])},Gr().prototype.as2D=function(t,e){return this.throwIfDisposed(),la(this,[t,e])},Gr().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),la(this,[t,e,n])},Gr().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),la(this,[t,e,n,r])},Gr().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),la(this,[t,e,n,r,s])};const kd=xs({asin_:function(t){const e={x:gs(t,"x","asin")};return ls.runKernel(ot,e)}});Gr().prototype.asin=function(){return this.throwIfDisposed(),kd(this)};const Id=xs({asinh_:function(t){const e={x:gs(t,"x","asinh")};return ls.runKernel(lt,e)}});Gr().prototype.asinh=function(){return this.throwIfDisposed(),Id(this)};const Sd=xs({atan_:function(t){const e={x:gs(t,"x","atan")};return ls.runKernel(ut,e)}});Gr().prototype.atan=function(){return this.throwIfDisposed(),Sd(this)};const Cd=xs({atan2_:function(t,e){let n=gs(t,"a","atan2"),r=gs(e,"b","atan2");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(ht,s)}});Gr().prototype.atan2=function(t){return this.throwIfDisposed(),Cd(this,t)};const Nd=xs({atanh_:function(t){const e={x:gs(t,"x","atanh")};return ls.runKernel(ct,e)}});Gr().prototype.atanh=function(){return this.throwIfDisposed(),Nd(this)},Gr().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ua(this,t,e,n,r)},Gr().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),md(this,t,e)},Gr().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),ha(this,t,e,n,r,s)},Gr().prototype.broadcastTo=function(t){return this.throwIfDisposed(),jo(this,t)},Gr().prototype.cast=function(t){return this.throwIfDisposed(),ei(this,t)};const $d=xs({ceil_:function(t){const e={x:gs(t,"x","ceil","float32")};return ls.runKernel(vt,e)}});Gr().prototype.ceil=function(){return this.throwIfDisposed(),$d(this)},Gr().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ma(this,t,e)},Gr().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Vr&&(t=[t]),ga([this,...t],e)},Gr().prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),ka(this,t,e,n,r,s,i)},Gr().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Sa(this,t,e,n,r,s)},Gr().prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),va(this,t,e,n,r,s,i)},Gr().prototype.cos=function(){return this.throwIfDisposed(),ld(this)},Gr().prototype.cosh=function(){return this.throwIfDisposed(),cd(this)},Gr().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Hh(this,t,e,n)},Gr().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Yc(this,t,e,n)};const Td=xs({depthToSpace_:function(t,e,n="NHWC"){const r=gs(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];d(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),d(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),d(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),d(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return ls.runKernel(zt,o,l)}});Gr().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Td(this,t,e)},Gr().prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ta(this,t,e,n,r,s,i)};const Ed=xs({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const a=gs(t,"x","dilation2d"),o=gs(e,"filter","dilation2d");d(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),d(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),d("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=la(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},p=ls.runKernel(Vt,c,h);return u?la(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Gr().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Ed(this,t,e,n,r,s)};const Rd=xs({divNoNan_:function(t,e){let n=gs(t,"a","div"),r=gs(e,"b","div");[n,r]=ts(n,r);const s=Ra(n,r),i=Xo(s),a=Fa(r,i);return Ko(a,i,s)}});Gr().prototype.divNoNan=function(t){return this.throwIfDisposed(),Rd(this,t)},Gr().prototype.div=function(t){return this.throwIfDisposed(),Ra(this,t)};const Ad=xs({dot_:function(t,e){const n=gs(t,"t1","dot"),r=gs(e,"t2","dot");d(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(d(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=la(n,[1,-1]),e=la(r,[-1,1]),s=Za(t,e);return la(s,[])}if(1===n.rank&&2===r.rank){const t=la(n,[1,-1]),e=la(r,[r.shape[0],r.shape[1]]),s=Za(t,e);return la(s,[s.size])}if(2===n.rank&&1===r.rank){const t=la(r,[-1,1]),e=Za(n,t);return la(e,[e.size])}{const t=la(r,[r.shape[0],r.shape[1]]);return Za(n,t)}}});Gr().prototype.dot=function(t){return this.throwIfDisposed(),Ad(this,t)},Gr().prototype.elu=function(){return this.throwIfDisposed(),Aa(this)},Gr().prototype.equal=function(t){return this.throwIfDisposed(),Fa(this,t)};const Fd=xs({erf_:function(t){let e=gs(t,"x","erf");d("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=ei(e,"float32"));const n={x:e};return ls.runKernel(Yt,n)}});Gr().prototype.erf=function(){return this.throwIfDisposed(),Fd(this)};const Md=xs({euclideanNorm_:function(t,e=null,n=!1){return Kl(t,"euclidean",e,n)}});Gr().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Md(this,t,e)},Gr().prototype.exp=function(){return this.throwIfDisposed(),Ma(this)},Gr().prototype.expandDims=function(t){return this.throwIfDisposed(),Da(this,t)};const Dd=xs({expm1_:function(t){const e={x:gs(t,"x","expm1")};return ls.runKernel(te,e)}});Gr().prototype.expm1=function(){return this.throwIfDisposed(),Dd(this)},Gr().prototype.fft=function(){return this.throwIfDisposed(),tl(this)},Gr().prototype.flatten=function(){return this.throwIfDisposed(),la(this,[this.size])},Gr().prototype.floor=function(){return this.throwIfDisposed(),za(this)},Gr().prototype.floorDiv=function(t){return this.throwIfDisposed(),Ea(this,t)},Gr().prototype.gather=function(t,e){return this.throwIfDisposed(),Pa(this,t,e)},Gr().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ua(this,t)},Gr().prototype.greater=function(t){return this.throwIfDisposed(),Ba(this,t)},Gr().prototype.ifft=function(){return this.throwIfDisposed(),nl(this)},Gr().prototype.irfft=function(){return this.throwIfDisposed(),rl(this)};const _d=xs({isFinite_:function(t){const e={x:gs(t,"x","isFinite")};return ls.runKernel(fe,e)}});Gr().prototype.isFinite=function(){return this.throwIfDisposed(),_d(this)};const Od=xs({isInf_:function(t){const e={x:gs(t,"x","isInf")};return ls.runKernel(me,e)}});Gr().prototype.isInf=function(){return this.throwIfDisposed(),Od(this)};const Ld=xs({isNaN_:function(t){const e={x:gs(t,"x","isNaN")};return ls.runKernel(ge,e)}});Gr().prototype.isNaN=function(){return this.throwIfDisposed(),Ld(this)},Gr().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Wa(this,t)},Gr().prototype.lessEqual=function(t){return this.throwIfDisposed(),Pl(this,t)},Gr().prototype.less=function(t){return this.throwIfDisposed(),Nh(this,t)};const zd=xs({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=gs(t,"x","localResponseNormalization");d(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),d(x(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=la(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:s},c=ls.runKernel(Ne,l,u);return o?la(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Gr().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),zd(this,t,e,n,r)};const Pd=xs({logSigmoid_:function(t){const e=gs(t,"x","logSigmoid"),n=Bi((t=>({value:fo(zo(fo(t))),gradFunc:e=>qa(e,Ao(fo(t)))})));return n(e)}});Gr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Pd(this)},Gr().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Xa(this,t)},Gr().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),eu(this,t,e)},Gr().prototype.log=function(){return this.throwIfDisposed(),Va(this)},Gr().prototype.log1p=function(){return this.throwIfDisposed(),Ga(this)},Gr().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ya(this,t)},Gr().prototype.logicalNot=function(){return this.throwIfDisposed(),rd(this)};const Bd=xs({logicalOr_:function(t,e){const n=gs(t,"a","logicalOr","bool"),r=gs(e,"b","logicalOr","bool");di(n.shape,r.shape);const s={a:n,b:r};return ls.runKernel(Ce,s)}});Gr().prototype.logicalOr=function(t){return this.throwIfDisposed(),Bd(this,t)};const Ud=xs({logicalXor_:function(t,e){const n=gs(t,"a","logicalXor","bool"),r=gs(e,"b","logicalXor","bool");return di(n.shape,r.shape),Ya(Bd(t,e),rd(Ya(t,e)))}});Gr().prototype.logicalXor=function(t){return this.throwIfDisposed(),Ud(this,t)},Gr().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Za(this,t,e,n)},Gr().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Ja(this,t,e,n,r)},Gr().prototype.max=function(t,e){return this.throwIfDisposed(),Ha(this,t,e)},Gr().prototype.maximum=function(t){return this.throwIfDisposed(),to(this,t)},Gr().prototype.mean=function(t,e){return this.throwIfDisposed(),eo(this,t,e)},Gr().prototype.min=function(t,e){return this.throwIfDisposed(),Hl(this,t,e)},Gr().prototype.minimum=function(t){return this.throwIfDisposed(),no(this,t)};const Wd=xs({mirrorPad_:function(t,e,n){d("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=gs(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)d(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:e,mode:n},a={x:r};return ls.runKernel(ze,a,i)}});Gr().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Wd(this,t,e)};const Vd=xs({mod_:function(t,e){let n=gs(t,"a","mod"),r=gs(e,"b","mod");[n,r]=ts(n,r);const s={a:n,b:r};return ls.runKernel(Pe,s)}});Gr().prototype.mod=function(t){return this.throwIfDisposed(),Vd(this,t)},Gr().prototype.mul=function(t){return this.throwIfDisposed(),qa(this,t)},Gr().prototype.neg=function(){return this.throwIfDisposed(),fo(this)},Gr().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Kl(this,t,e,n)},Gr().prototype.notEqual=function(t){return this.throwIfDisposed(),mo(this,t)},Gr().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),go(this,t,e,n)},Gr().prototype.onesLike=function(){return this.throwIfDisposed(),yo(this)},Gr().prototype.pad=function(t,e){return this.throwIfDisposed(),wo(this,t,e)};const Gd=xs({pool_:function(t,e,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=gs(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=la(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(ia(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=Xi(l.shape,e,i,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const f=1===h[0]&&1===h[1],[m,g]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([c.inHeight,c.inWidth],h,p),b=f?r:"valid",x=f?l:Dc(l,h,m),y=("avg"===n?()=>ua(x,e,i,b,a):()=>Ja(x,e,i,b,a))(),w=f?y:md(y,h,g);return u?la(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});Gr().prototype.pool=function(t,e,n,r,s,i){return this.throwIfDisposed(),Gd(this,t,e,n,r,s,i)},Gr().prototype.pow=function(t){return this.throwIfDisposed(),ql(this,t)},Gr().prototype.prelu=function(t){return this.throwIfDisposed(),vo(this,t)};const Hd=xs({prod_:function(t,e=null,n=!1){let r=gs(t,"x","prod");"bool"===r.dtype&&(r=ei(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return ls.runKernel(Qe,s,i)}});Gr().prototype.prod=function(t,e){return this.throwIfDisposed(),Hd(this,t,e)};const qd=xs({reciprocal_:function(t){const e={x:gs(t,"x","reciprocal")};return ls.runKernel(nn,e)}});Gr().prototype.reciprocal=function(){return this.throwIfDisposed(),qd(this)},Gr().prototype.relu=function(){return this.throwIfDisposed(),$o(this)},Gr().prototype.relu6=function(){return this.throwIfDisposed(),il(this)},Gr().prototype.reshapeAs=function(t){return this.throwIfDisposed(),la(this,t.shape)},Gr().prototype.reshape=function(t){return this.throwIfDisposed(),la(this,t)},Gr().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Ol(this,t,e,n)},Gr().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Ll(this,t,e,n)},Gr().prototype.reverse=function(t){return this.throwIfDisposed(),To(this,t)},Gr().prototype.rfft=function(){return this.throwIfDisposed(),el(this)},Gr().prototype.round=function(){return this.throwIfDisposed(),Bl(this)},Gr().prototype.rsqrt=function(){return this.throwIfDisposed(),oh(this)},Gr().prototype.selu=function(){return this.throwIfDisposed(),Eo(this)},Gr().prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ro(this,t,e,n,r,s,i)},Gr().prototype.sigmoid=function(){return this.throwIfDisposed(),Ao(this)};const jd=xs({sign_:function(t){const e={x:gs(t,"x","sign")};return ls.runKernel(vn,e)}});Gr().prototype.sign=function(){return this.throwIfDisposed(),jd(this)},Gr().prototype.sin=function(){return this.throwIfDisposed(),qc(this)},Gr().prototype.sinh=function(){return this.throwIfDisposed(),Kc(this)},Gr().prototype.slice=function(t,e){return this.throwIfDisposed(),Fo(this,t,e)},Gr().prototype.softmax=function(t){return this.throwIfDisposed(),Lo(this,t)},Gr().prototype.softplus=function(){return this.throwIfDisposed(),zo(this)},Gr().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Dc(this,t,e)},Gr().prototype.split=function(t,e){return this.throwIfDisposed(),Po(this,t,e)},Gr().prototype.sqrt=function(){return this.throwIfDisposed(),Bo(this)},Gr().prototype.square=function(){return this.throwIfDisposed(),ho(this)},Gr().prototype.squaredDifference=function(t){return this.throwIfDisposed(),tu(this,t)},Gr().prototype.squeeze=function(t){return this.throwIfDisposed(),Uo(this,t)},Gr().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Vr?[this,t]:[this,...t];return Wo(n,e)},Gr().prototype.step=function(t){return this.throwIfDisposed(),al(this,t)};const Kd=xs({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){const u={x:gs(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return ls.runKernel(On,u,c)}});Gr().prototype.stridedSlice=function(t,e,n,r,s,i,a,o){return this.throwIfDisposed(),Kd(this,t,e,n,r,s,i,a,o)},Gr().prototype.sub=function(t){return this.throwIfDisposed(),ja(this,t)},Gr().prototype.sum=function(t,e){return this.throwIfDisposed(),Ka(this,t,e)};const Xd=xs({tan_:function(t){const e={x:gs(t,"x","tan","float32")};return ls.runKernel(Un,e)}});Gr().prototype.tan=function(){return this.throwIfDisposed(),Xd(this)},Gr().prototype.tanh=function(){return this.throwIfDisposed(),Vo(this)},Gr().prototype.tile=function(t){return this.throwIfDisposed(),_a(this,t)},Gr().prototype.toBool=function(){return this.throwIfDisposed(),ei(this,"bool")},Gr().prototype.toFloat=function(){return this.throwIfDisposed(),ei(this,"float32")},Gr().prototype.toInt=function(){return this.throwIfDisposed(),ei(this,"int32")};const Yd=xs({topk_:function(t,e=1,n=!0){const r=gs(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:n},[o,l]=ls.runKernel(Gn,i,a);return{values:o,indices:l}}});Gr().prototype.topk=function(t,e){return this.throwIfDisposed(),Yd(this,t,e)},Gr().prototype.transpose=function(t){return this.throwIfDisposed(),Jo(this,t)};const Zd=xs({unique_:function(t,e=0){const n=gs(t,"x","unique","string_or_numeric");d(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[i,a]=ls.runKernel(jn,r,s);return{values:i,indices:a}}});Gr().prototype.unique=function(t){return this.throwIfDisposed(),Zd(this,t)},Gr().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),uh(this,t,e)},Gr().prototype.unstack=function(t){return this.throwIfDisposed(),qo(this,t)},Gr().prototype.where=function(t,e){return this.throwIfDisposed(),Ko(t,this,e)},Gr().prototype.zerosLike=function(){return this.throwIfDisposed(),Xo(this)};class Jd extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jd.prototype)}}class Qd extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qd.prototype)}}class tp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tp.prototype)}}class ep extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ep.prototype)}}class np extends Error{constructor(t){super(t),Object.setPrototypeOf(this,np.prototype)}}Error;class rp{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function sp(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function ip(t,e){if(!t)throw new np(e)}function ap(t,e){let n=0;for(const r of t)r===e&&n++;return n}function op(t){return 1===t.length?t[0]:t}function lp(t){return Array.isArray(t)?t:[t]}function up(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function cp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let hp={};function dp(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function pp(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>pp(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?pp(e):t[n]=e.value)}}}function fp(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in hp)i=hp[s];else if(i=e[s],null==i)throw new tp(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new tp(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in hp?[o,l]=hp.className:a in e&&([o,l]=e[a]),null==o)throw new tp(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(hp))t[e]=hp[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},hp);for(const t of Object.keys(n))hp[t]=n[t];pp(i.config);const r=l(o,i.config,n,s);return hp=Object.assign({},e),r}{const t=Object.assign({},hp);for(const t of Object.keys(n))hp[t]=n[t];const e=new o(i.config);return hp=Object.assign({},t),e}}}function mp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function gp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function bp(t){if(null==t)throw new tp(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function xp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new tp(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function yp(t,e,n=0,r=1/0){return ip(n>=0),ip(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function wp(t,e){Array.isArray(t)?(d(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>wp(t,`element ${n+1} of ${e}`)))):d(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${vp(t)}.`))}function vp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>vp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function kp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Ip=0;function Sp(){return Ip++}const Cp={};function Np(t=""){return t in Cp||(Cp[t]=0),Cp[t]+=1,t+Cp[t].toString()}const $p=["channelsFirst","channelsLast"],Tp=["nearest","bilinear"],Ep=["valid","same","causal"],Rp=["max","avg"],Ap=["sum","mul","concat","ave"],Fp=new Map;function Mp(t){xp($p,"DataFormat",t)}function Dp(t){xp(Ep,"PaddingMode",t)}function _p(t){xp(Rp,"PoolMode",t)}const Op=[];function Lp(t,e){Op.push(t);try{const t=e();return Op.pop(),t}catch(t){throw Op.pop(),t}}function zp(t){if(!Up(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Op.length?"":Op.join("/")+"/")+t}function Pp(t){if(!Up(t))throw new Error("Not a valid tensor name: '"+t+"'");Fp.has(t)||Fp.set(t,0);const e=Fp.get(t);if(Fp.set(t,Fp.get(t)+1),e>0){const n=`${t}_${e}`;return Fp.set(n,1),n}return t}const Bp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Up(t){return!!t.match(Bp)}function Wp(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Vp(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function Gp(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function Hp(t,e){if(e<t)throw new tp(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}let qp;function jp(){return null==qp&&(qp=Pi().epsilon()),qp}function Kp(t,e){return ei(t,e)}function Xp(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),la(t,n)}function Yp(t,e,n){return _i((()=>{switch(t.rank){case 1:return Mo(t,e,n);case 2:return Do(t,[e,0],[n,t.shape[1]]);case 3:return _o(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Oo(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Fo(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Fo(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new tp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Zp(t,e,n){return _i((()=>{switch(t.rank){case 1:return Mo(t,e,n);case 2:return Do(t,[0,e],[t.shape[0],n]);case 3:return _o(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Oo(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new tp(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Jp(t,e,n,r){return _i((()=>{switch(t.rank){case 1:return Mo(t,e,n);case 2:switch(r){case 1:return Yp(t,e,n);case 2:return Zp(t,e,n);default:throw new tp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Yp(t,e,n);case 2:return _o(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Zp(t,e,n);default:throw new tp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Yp(t,e,n);case 2:return Oo(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Oo(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Zp(t,e,n);default:throw new tp(`The axis is not within the rank of the tensor ${r}`)}default:throw new tp(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Qp(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),ga(t,e)}function tf(t,e){switch(t.rank){case 1:return ba([t,e]);case 2:return xa([t,e],0);case 3:return ya([t,e],0);case 4:return wa([t,e],0);default:throw new tp(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function ef(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new tp(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return _a(t,e)}function nf(t,e=0,n=1,r,s){return Co(t,e,n,r,s)}function rf(t,e,n,r){if(t.rank<2||e.rank<2)throw new ep(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new ep(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return fl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?of(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=la(t,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=la(Jo(e,c),[l,-1]);const h=[...s,...u];return la(fl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?of(t.rank,r,"channelsLast"):null,activation:n}),h)}}function sf(t,e,n){return _i((()=>(e=Array.isArray(e)?Go(e,"int32"):ei(e,"int32"),Pa(t,e,n))))}function af(t){return qa(t,t)}function of(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new tp(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?la(e,[1,r[0],1,1,1]):la(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?la(e,[1,1,1,1,r[0]]):la(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?la(e,[1,r[0],1,1]):la(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?la(e,[1,1,1,r[0]]):la(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?la(e,[1,r[0],1]):la(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?la(e,[1,1,r[0]]):la(e,[1].concat(r))}else if(t<3)return e;throw new tp(`Unsupported input rank by biasAdd: ${e.rank}`)}function lf(t,e,n){return _i((()=>(null==n&&(n="channelsLast"),Mp(n),Gi(t,of(t.rank,e,n)))))}function uf(t,e,n,r){return _i((()=>Qo(t,e,n,r)))}function cf(t,e,n=!1){return n?t():e()}const hf=["fanIn","fanOut","fanAvg"],df=["normal","uniform","truncatedNormal"];class pf extends Ri{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ff extends pf{apply(t,e){return bo(t,e)}}ff.className="Zeros",Fi(ff);class mf extends pf{apply(t,e){return xo(t,e)}}mf.className="Ones",Fi(mf);class gf extends pf{constructor(t){if(super(),"object"!=typeof t)throw new tp(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new tp(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return _i((()=>qa(Ui(this.value),xo(t,e))))}getConfig(){return{value:this.value}}}gf.className="Constant",Fi(gf);class bf extends pf{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return No(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}bf.className="RandomUniform",Fi(bf);class xf extends pf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ep(`randomNormal does not support dType ${e}.`);return nf(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xf.className="RandomNormal",Fi(xf);class yf extends pf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ep(`truncatedNormal does not support dType ${e}.`);return Ho(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}yf.className="TruncatedNormal",Fi(yf);class wf extends pf{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return _i((()=>{if(2!==t.length||t[0]!==t[1])throw new tp("Identity matrix initializer can only be used for 2D square matrices.");return qa(this.gain,Oa(t[0]))}))}getConfig(){return{gain:this.gain}}}wf.className="Identity",Fi(wf);class vf extends pf{constructor(t){if(super(),t.scale<0)throw new tp(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,xp(hf,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){xp(df,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Mp(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Wp(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Wp(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Wp(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new ep(`${this.getClassName()} does not support dType ${e}.`);return Ho(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return No(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}vf.className="VarianceScaling",Fi(vf);class kf extends vf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vf.className}}kf.className="GlorotUniform",Fi(kf);class If extends vf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vf.className}}If.className="GlorotNormal",Fi(If);class Sf extends vf{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vf.className}}Sf.className="HeNormal",Fi(Sf);class Cf extends vf{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vf.className}}Cf.className="HeUniform",Fi(Cf);class Nf extends vf{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return vf.className}}Nf.className="LeCunNormal",Fi(Nf);class $f extends vf{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return vf.className}}$f.className="LeCunNormal",Fi($f);class Tf extends pf{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new ep("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return _i((()=>{if(t.length<2)throw new ep("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=nf(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=ru.gramSchmidt(e);return t[0]>t[1]&&(n=Jo(n)),qa(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Tf.className="Orthogonal",Fi(Tf);const Ef={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Rf(t,e={}){return fp(t,Ai.getMap().classNameMap,e,"initializer")}function Af(t){return dp(t)}function Ff(t){if("string"==typeof t){const e=t in Ef?Ef[t]:t;if("GlorotNormal"===e)return new If;if("GlorotUniform"===e)return new kf;if("HeNormal"===e)return new Sf;if("HeUniform"===e)return new Cf;if("LeCunNormal"===e)return new Nf;if("LeCunUniform"===e)return new $f;{const t={};return t.className=e,t.config={},Rf(t)}}return t instanceof pf?t:Rf(t)}function Mf(t){return Array.isArray(t)&&Array.isArray(t[0])}function Df(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function _f(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new tp(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Of(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new tp(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Lf(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class zf{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Sp(),n=null==n?"Variable":n,this.originalName=zp(n),this.name=Pp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return ls.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Pf(t){return t.map((t=>t.read()))}function Bf(t){t.forEach((t=>{t[0].write(t[1])}))}class Uf{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Wf{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Sp(),null!=i&&(this.originalName=zp(i),this.name=Pp(this.originalName)),this.rank=e.length}}let Vf=0;class Gf{constructor(t,e){this.callArgs=e,this.id=Vf++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Hf=0;class qf extends Ri{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Hf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=up(t)+"_"+Np(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Qd(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new tp(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return op(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return op(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Jd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Jd(`Layer ${this.name} is not connected, no input to return.`);return op(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Jd(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Jd(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return op(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=lp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=lp(this.inputSpec);if(t.length!==e.length)throw new tp(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new tp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new tp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new tp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new tp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new tp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new tp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=lp(t);let r=!0;for(const t of n)if(!(t instanceof Wf)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Wf){s=!1;break}if(r===s)throw new tp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Lp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of lp(t))e.push(n.shape);this.build(op(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=lp(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=op(i),null!=this.activityRegularizer)throw new ep("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=lp(t);const e=[];for(const n of t)e.push(n.shape);return op(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Wf(i,n,this,lp(t),e,this.name,r))):new Wf(i,r,this,lp(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new ep("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Jd(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Jd(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Lf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Pf(t?this.trainableWeights:this.weights)}setWeights(t){_i((()=>{const e=this.weights;if(e.length!==t.length)throw new tp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Pf(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!b(i.shape,o.shape))throw new tp(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Bf(n)}))}addWeight(t,e,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new tp(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Ff("zeros"));const l=r.apply(e,n),u=new zf(l,n,t,i,a);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=lp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=lp(t);e=lp(e),n=lp(n),r=lp(r),s=Df(s),i=Df(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new Gf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function jf(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=jf(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Kf extends qf{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Np("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new tp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new tp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new tp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Wf(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new tp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Kf.className="InputLayer",Fi(Kf);class Xf{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Xf)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new tp(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return ei(e,t.dtype)}catch(n){throw new tp(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Wf){if(null==this.id2Value[t.id])throw new tp(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new tp(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Wf){if(null==this.id2Value[t.id])throw new tp(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new tp(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Oi(this.id2Mask)}}const Yf=new rp,Zf=new rp;function Jf(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().sort().join(",");let h,p=Yf.get(c);if(null==p){const t=function(t,e){d(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=tm(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=tm(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Qf(r)}}(a,e);p=t.sorted,h=t.recipientCounts,Yf.put(c,p),Zf.put(c,h)}h={},s||Object.assign(h,Zf.get(c));const f=new Xf(e);for(let t=0;t<p.length;++t){if(null!=r){const t=Di().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=p[t],a=i.sourceLayer;if(a instanceof Kf)continue;const u=[],c=[],d=[];let m=!1;for(const t of i.inputs){const n=f.getValue(t),r=f.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(h[t.name]--,0!==h[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||d.push(n))}m&&((n=n||{}).mask=c[0]);const g=lp(a.apply(u,n));let b=null;a.supportsMasking&&(b=a.computeMask(u,c));const x=em(i),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){f.hasKey(y[t])||f.add(y[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=g[t])}s||Oi(d)}return f.disposeMasks(),i?l:l[0]}function Qf(t){const e={};for(const n in t)e[n]=t[n].size;return e}function tm(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function em(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function nm(t,e){return _i((()=>Bo(Ka(qa(t,t),e,!0))))}j().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=Yf&&Yf.setMaxEntries(t),null!=Zf&&Zf.setMaxEntries(t)}));class rm extends Ri{getConfig(){return{}}}class sm extends rm{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return _i((()=>{const e=nm(t,this.axis),n=ma(e,0,this.maxValue);return qa(t,Ra(n,Gi(jp(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}sm.className="MaxNorm",Fi(sm);class im extends rm{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return _i((()=>Ra(t,Gi(jp(),nm(t,this.axis)))))}getConfig(){return{axis:this.axis}}}im.className="UnitNorm",Fi(im);class am extends rm{apply(t){return $o(t)}}am.className="NonNeg",Fi(am);class om extends rm{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return _i((()=>{const e=nm(t,this.axis),n=Gi(qa(this.rate,ma(e,this.minValue,this.maxValue)),qa(1-this.rate,e));return qa(t,Ra(n,Gi(jp(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}om.className="MinMaxNorm",Fi(om);const lm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function um(t){return dp(t)}function cm(t,e={}){return fp(t,Ai.getMap().classNameMap,e,"constraint")}function hm(t){return null==t?null:"string"==typeof t?cm({className:t in lm?lm[t]:t,config:{}}):t instanceof rm?t:cm(t)}async function dm(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Oi(r)}}function pm(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var fm;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(fm||(fm={}));class mm{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class gm{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class bm extends mm{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=_i((()=>Gi(this.totals[t],qa(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:_i((()=>{const n=qa(Ra(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Li(e[t])})))}}class xm extends mm{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];t.push(a.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class ym extends mm{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||fu,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,s=null!=n?n():Tr();return(...i)=>{const a=null!=n?n():Tr();return a-s<e||(s=a,r=t(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await dm(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await dm(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await dm(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await dm(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await dm(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):A(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await dm(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await dm(t),await this.trainEnd(t))}}function wm(t,e){return null==t&&(t={}),t instanceof mm?[t]:Array.isArray(t)&&t[0]instanceof mm?t:lp(t).map((t=>new ym(t,e)))}class vm{constructor(){}static registerCallbackConstructor(t,e){d(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),vm.checkForDuplicate(e),null==vm.constructors[t]&&(vm.constructors[t]=[]),vm.constructors[t].push(e)}static checkForDuplicate(t){for(const e in vm.constructors)vm.constructors[+e].forEach((e=>{if(e===t)throw new tp("Duplicate callback constructor.")}))}static clear(){vm.constructors={}}static createCallbacks(t){const e=[];for(const n in vm.constructors){const r=+n;t>=r&&e.push(...vm.constructors[r])}return e.map((t=>new t))}}function km(t,e,n,r,s,i,a,o,l){const u=new xm,c=[new bm,...vm.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new gm(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Im(t,e={},n=!1){return fp(t,Ai.getMap().classNameMap,e,"layer",n)}function Sm(t,e){return _i((()=>{"float32"!==t.dtype&&(t=ei(t,"float32"));const n=Ka(af(t),e,!0),r=La(n.shape,jp()),s=Bo(to(n,r));return Ra(t,s)}))}function Cm(t,e){return _i((()=>eo(af(ja(e,t)),-1)))}function Nm(t,e){return _i((()=>eo(Vi(ja(e,t)),-1)))}function $m(t,e){return _i((()=>{const n=ja(t,e),r=ma(Vi(t),jp(),Number.MAX_VALUE),s=Vi(Ra(n,r));return qa(100,eo(s,-1))}))}function Tm(t,e,n=!1){return _i((()=>{if(n)e=Lo(e);else{const t=Ka(e,e.shape.length-1,!0);e=Ra(e,t)}return e=ma(e,jp(),1-jp()),fo(Ka(qa(ei(t,"float32"),Va(e)),e.shape.length-1))}))}function Em(t,e,n=!1){return _i((()=>{const r=ei(za(function(t){const e=[Wp(t.shape)];return la(t,e)}(t)),"int32"),s=(e=ma(e,jp(),1-jp())).shape;return Tm(la(go(r,s[s.length-1]),s),e,n)}))}function Rm(t,e){return _i((()=>{let n;return n=ma(e,jp(),1-jp()),n=Va(Ra(n,ja(1,n))),eo(function(t,e){if(!b(t.shape,e.shape))throw new tp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return _i((()=>{const n=$o(e),r=fo(Vi(e));return Gi(ja(n,qa(e,t)),Ga(Ma(r)))}))}(t,n),-1)}))}function Am(t,e){return _i((()=>{const n=Sm(t,-1),r=Sm(e,-1),s=qa(n,r);return fo(Ka(s,-1))}))}vm.constructors={};const Fm={meanSquaredError:Cm,meanAbsoluteError:Nm,meanAbsolutePercentageError:$m,meanSquaredLogarithmicError:function(t,e){return _i((()=>{const n=ma(e,jp(),Number.MAX_VALUE),r=Va(Gi(1,n)),s=ma(t,jp(),Number.MAX_VALUE),i=Va(Gi(1,s));return eo(af(ja(r,i)),-1)}))},squaredHinge:function(t,e){return _i((()=>{const n=to(0,ja(1,qa(t,e)));return eo(af(n),-1)}))},hinge:function(t,e){return _i((()=>{const n=to(0,ja(1,qa(t,e)));return eo(n,-1)}))},categoricalHinge:function(t,e){return _i((()=>{const n=Ka(qa(t,e),-1),r=Ha(qa(ja(1,t),e),-1);return to(0,Gi(1,ja(r,n)))}))},logcosh:function(t,e){return _i((()=>{const n=Math.log(2),r=ja(e,t),s=ja(Gi(r,zo(qa(-2,r))),n);return eo(s,-1)}))},categoricalCrossentropy:Tm,sparseCategoricalCrossentropy:Em,binaryCrossentropy:Rm,kullbackLeiblerDivergence:function(t,e){return _i((()=>{const n=ma(t,jp(),1),r=ma(e,jp(),1);return Ka(qa(t,Va(Ra(n,r))),-1)}))},poisson:function(t,e){return _i((()=>{const n=Va(Gi(jp(),e));return eo(ja(e,qa(t,n)),-1)}))},cosineProximity:Am};function Mm(t){if("string"==typeof t){if(t in Fm)return Fm[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new tp(e)}return t}function Dm(t,e){return _i((()=>{const n=qa(.5,yo(e)),r=Kp(Ba(e,n),t.dtype);return eo(Fa(t,r),-1)}))}function _m(t,e){return _i((()=>Kp(Fa(ji(t,-1),ji(e,-1)),"float32")))}function Om(t,e){return Rm(t,e)}function Lm(t,e){return t.rank===e.rank&&(t=Uo(t,[t.rank-1])),(e=ji(e,-1)).dtype!==t.dtype&&(e=ei(e,t.dtype)),ei(Fa(t,e),"float32")}const zm=Tm,Pm=Em,Bm={binaryAccuracy:Dm,categoricalAccuracy:_m,precision:function(t,e){return _i((()=>{const n=function(t,e){return _i((()=>ei(Ka(Ya(Fa(t,1),Fa(e,1))),"float32")))}(t,e),r=function(t,e){return _i((()=>ei(Ka(Ya(Fa(t,0),Fa(e,1))),"float32")))}(t,e),s=Gi(n,r);return ei(Ko(Ba(s,0),Ra(n,s),0),"float32")}))},categoricalCrossentropy:zm,sparseCategoricalCrossentropy:Pm,mse:Cm,MSE:Cm,mae:Nm,MAE:Nm,mape:$m,MAPE:$m,cosine:Am};function Um(t){if("string"==typeof t&&t in Bm)return Bm[t];if("string"!=typeof t&&null!=t)return t;throw new tp(`Unknown metric ${t}`)}function Wm(t){if(ip(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Fm))if(Fm[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Bm))if(Bm[n]===t){e=n;break}return void 0!==e?e:t.name}}function Vm(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Gm(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Gm(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Gm(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Gm(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Hm(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function qm(t,e,n){let r,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){s="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Hm([`${t.name} (${t.getClassName()})`,s,r,t.countParams().toString()],e,n)}function jm(t,e,n,r){let s,i;try{i=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){i="multiple"}try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const o=t.name,l=t.getClassName(),u=0===a.length?"":a[0];Hm([`${o} (${l})`,i,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)Hm(["","","","",a[t]],e,r)}function Km(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Xm(t,e){if(null===t)return null;if("string"==typeof t)return cp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Km(e,s,r)?n.push(r):n.push(Xm(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=cp(n);e[t]=Xm(r,t)}}return e}}function Ym(t,e){if(null==t)return null;if("string"==typeof t)return up(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Km(e,s,r)?n.push(r):n.push(Ym(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[up(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ym(r,n):r}return e}}class Zm extends qf{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Np(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],gp(this.inputs).length!==this.inputs.length)throw new tp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);gp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;ip(0===n,"input layer has >1 nodes"),ip(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Kf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Qd(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Zm.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,s,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,a),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],o=s.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(mp);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Zm&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(mp);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Qd(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new Qd(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new tp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new tp(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new tp(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new tp(`${t.length} of ${r} weights are not set: ${t}`)}Bf(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.18.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Ym(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return _i((()=>{t=lp(t);const n=new Xf;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Jf(this.outputs,n,e)}))}computeMask(t,e){return _i((()=>{let n;return t=lp(t),n=null==e?sp(null,t.length):lp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Df(t);if(e.length!==this.inputLayers.length)throw new tp(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(mp);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=Df(e.computeOutputShape(op(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];ip(e in n),s.push(n[e])}return op(s)}runInternalGraph(t,e){null==e&&(e=sp(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],a=e[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(mp);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=lp(e.call(t,u)),l=lp(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=lp(e.call(r,u)),l=lp(e.computeMask(r,a));if(e.activityRegularizer)throw new ep("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],a=[];for(const t of this.outputs){ip(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),s.push(e),i.push(r)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Zm?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Zm.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new tp(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new tp("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new tp(`No such layer: ${t}`)}calculateLosses(){return _i((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Zm.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Zm.nodeKey(t,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[Zm.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=Zm.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=Zm.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,a,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(op(n),r)}function l(t){const n=t.name,i=Im(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new tp(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!bp(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];ip(e in s);const i=s[e].inboundNodes[n].outputTensors;h.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];ip(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new tp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){_i((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Jm(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Qm(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=_i((()=>{if(1===t.shape.length)return ni(t);if(2===t.shape.length){if(t.shape[1]>1)return ji(t,1);if(1===t.shape[1])return la(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Oi(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Go(s,"float32")}return null}function tg(t,e){return qa(t,e)}function eg(t,e){let n,r;const s=e;n=s.xs,r=s.ys,d(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=ng("input",t.inputNames,n),a=ng("output",t.outputNames,r),o=i[0].shape[0];d(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),d(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)d(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)d(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function ng(t,e,n){if(n instanceof Vr)return[n];if(Array.isArray(n))return d(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new tp(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function rg(t){return"function"==typeof t.iterator}function sg(t){d(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function ig(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Yp(t,e,n-e))):Yp(t,e,n-e)}function ag(t,e){return _i((()=>null==t?null:Array.isArray(t)?t.map((t=>ag(t,e))):sf(t,"int32"===e.dtype?e:ei(e,"int32"))))}function og(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function lg(t){const e=[];t instanceof Vr&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Xp(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function ug(t,e){if(null==t)return;const n=[];if(e instanceof Vr)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Vr)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function cg(t){return Array.isArray(t)}function hg(t){return!function(t){return t instanceof Vr}(t)&&!cg(t)}function dg(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(cg(t)&&t.length>0)e=!0;else if(hg(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new tp(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(hg(t)){i=[];for(const n of e){if(null==t[n])throw new tp(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(cg(t)){if(t.length!==e.length)throw new tp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new tp(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=lg(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new tp(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!r)continue;const i=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&i!==o)throw new tp(`${s} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${s} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function pg(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new tp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new tp(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new tp(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new tp(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class fg extends Zm{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new tp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Hm(i,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?qm(o[t],n,r):jm(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Lf(t.collectedTrainableWeights):Lf(t.trainableWeights),e}(t),u=Lf(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>du.adagrad(.01),Adadelta:()=>du.adadelta(1,.95,jp()),Adam:()=>du.adam(.001,.9,.999,jp()),Adamax:()=>du.adamax(.002,.9,.999,jp(),0),RMSProp:()=>du.rmsprop(.001,.9,0,jp()),SGD:()=>du.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new tp(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Wi))throw new tp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new tp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Mm(t)))}else{const n=Mm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new tp(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Mm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Lp("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Lp("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Rm?-1!==["accuracy","acc"].indexOf(a)?r=Dm:-1!==["crossentropy","ce"].indexOf(a)&&(r=Om):this.lossFunctions[t]===Em?-1!==["accuracy","acc"].indexOf(a)?r=Lm:-1!==["crossentropy","ce"].indexOf(a)&&(r=Pm):-1!==["accuracy","acc"].indexOf(a)?r=_m:-1!==["crossentropy","ce"].indexOf(a)&&(r=zm),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const t=Um(a);i=t,n=""+Wm(a)}let e;Lp(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;sg(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return op(this.testLoop(a,i,r,n.verbose,n.steps))}finally{ug(s[0],t),ug(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new ep("Verbose mode is not implemented yet.");d(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(i=_i((()=>{if(e.value){const{xs:n,ys:r}=eg(t,e.value),a=n.concat(r),u=_i((()=>s(a)));if(Oi(a),0===l)for(let t=0;t<u.length;++t)i.push(Ui(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=_i((()=>Gi(i[t],qa(c,e)))),l>0&&Oi(n)}Oi(u),o+=c,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=Ra(i[t],o),Oi(e)}return op(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new tp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new tp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new tp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new Xf;if(t instanceof Vr&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new tp(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new tp(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=Jf(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=sp(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new tp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return _i((()=>{const r=this.checkNumSamples(t);if(n)throw new ep("Verbose predictLoop() is not implemented yet.");const s=og(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)_i((()=>{const n=s[e][0],r=s[e][1],i=ig(t,n,r),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new Xf(a);return Jf(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return op(i.map((t=>ga(t,0))))}))}predict(t,e={}){const n=lg(t);pg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return sg(r),this.predictLoop(n,r)}finally{ug(n,t)}}predictOnBatch(t){pg(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Qd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Em?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=gp(t.map((t=>t.shape[0])));r.sort();const s=gp(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new tp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new tp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!b(r,s))throw new tp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=dg(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=dg(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Cm,Rm,Tm];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===Tm&&1===i.shape[i.shape.length-1])throw new tp(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new tp(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new tp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=Jm(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Qm(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,s){return _i((()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new ep("Verbose mode is not implemented yet.");if(null!=s)throw new ep("steps mode in testLoop() is not implemented yet");{const r=og(i,n),s=Go(Hp(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=Yp(s,i,o-i),u=ag(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Ui(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Gi(a[t],qa(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=Ra(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;ap(t,r)>1&&(s+=`_${ap(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new Xf(t),o=Jf(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=tg(n,s[t]));const i=eo(n);e.push(i),l=0===t?n:Gi(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=eo(e(r[s],o[s]))}Li(n),i.push(n)}return l=eo(l),this.calculateLosses().forEach((t=>{l=Gi(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>_i((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new Xf(i),o=Jf(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=eo(r(s[t],o[t]));n=0===t?i:Gi(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=eo(n(s[r],o[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,u,c,h,d,p;t.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;sg(f);const m=!1,g=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,m,f);s=g[0],i=g[1],p=g[2];let b,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ep("validationData including sample weights is not supported yet."):new tp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const e=!0,n=await t.standardizeUserData(u,c,null,null,e,f);h=n[0],d=n[1],b=h.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];h=ig(s,t,e),a=s,s=ig(s,0,t),d=ig(i,t,e),o=i,i=ig(i,0,t),b=h.concat(d)}else null!=r.validationSteps&&(x=!0);const y=s.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let k,I;x?(t.makeTestFunction(),k=t.testFunction,I=v.slice().concat(v.map((t=>"val_"+t)))):(k=null,b=[],I=v.slice());const S=wm(r.callbacks,r.yieldEvery),C=await async function(t,e,n,r,s,i,a,o,u,c,h,d,p,f,m){null==s&&(s=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=c&&(g=!0);const b=t.checkNumSamples(n,s,f,"steps_per_epoch");let x;null!=b&&(x=Hp(0,b)),null==a&&(a=1);const{callbackList:y,history:w}=km(o,a,i,p,b,f,s,g,d);y.setModel(t),t.history=w,await y.onTrainBegin(),t.stopTraining_=!1;for(let a=p;a<i;++a){await y.onEpochBegin(a);const i={};{if("batch"===h)throw new ep("batch shuffling is not implemneted yet");h&&l(x);const a=Go(x),o=og(b,s);for(let l=0;l<o.length;++l){const h={};if(await y.onBatchBegin(l,h),_i((()=>{const d=o[l][0],p=o[l][1],f=Yp(a,d,p-d);h.batch=l,h.size=p-d;const m=ag(n,f),b=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];h[e]=n,Li(n)}if(l===o.length-1&&g){const e=t.testLoop(u,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Li(s),i["val_"+n]=s}}})),await y.onBatchEnd(l,h),pm(h),t.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,i),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,w,y,v,f,r.epochs,r.verbose,S,k,b,r.shuffle,I,r.initialEpoch,null);return C}finally{t.isTraining=!1,ug(s,e),ug(i,n),ug(a,e),ug(o,n),ug(h,u),ug(d,c),null!=p&&Oi(p)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(d(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),d(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),d(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),d(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),d(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(rg(n.validationData))d(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new ep("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=wm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=km(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=eg(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=Jm(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await Qm(s[t],null,e[t]))}const u=r.concat(s).concat(a),d=o(u);Oi(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];i[e]=n,Li(n)}await p.onBatchEnd(h,i),pm(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=rg(n.validationData)?lp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):lp(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Oi(i),ug(n[0],t),ug(n[1],e),op(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Di().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Di().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=up(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>up(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=up(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[up(Wm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>up(Wm(t))));{const t={};for(const e in this.metrics)t[e]=up(Wm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Im(Xm(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=cp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>cp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=cp(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>cp(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=cp(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Es.getSaveHandlers(n));if(0===e.length)throw new tp(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new tp(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new tp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await ks(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.18.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await ks(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=Ns([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Vm(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){Vm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}fg.className="Model",Fi(fg);class mg extends fg{}mg.className="Functional",Fi(mg);class gg extends fg{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Np("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new tp(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof gg||t instanceof fg;let n;if(e){if(n=t,1!==n.outputs.length)throw new tp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new tp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new tp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new tp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Kf({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new tp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new tp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=jf(this.outputs[0])}this.inboundNodes=[],new Gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:sp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Of(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Qd("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Qd("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Qd("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Qd("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new tp("Legacy serialization format not supported yet.");s=e}else d(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof gg))throw new ep(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of s){const e=Im(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new tp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new tp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}gg.className="Sequential",Fi(gg);class bg extends Ri{getConfig(){return{}}}class xg extends bg{apply(t,e=1){return function(t,e=1){if(1!==e)throw new ep(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Aa(t)}(t,e)}}xg.className="elu",Fi(xg);class yg extends bg{apply(t){return Eo(t)}}yg.className="selu",Fi(yg);class wg extends bg{apply(t){return $o(t)}}wg.className="relu",Fi(wg);class vg extends bg{apply(t){return _i((()=>no(6,$o(t))))}}vg.className="relu6",Fi(vg);class kg extends bg{apply(t){return t}}kg.className="linear",Fi(kg);class Ig extends bg{apply(t){return Ao(t)}}Ig.className="sigmoid",Fi(Ig);class Sg extends bg{apply(t){return function(t){return _i((()=>{const e=Gi(.5,qa(.2,t));return ma(e,0,1)}))}(t)}}Sg.className="hardSigmoid",Fi(Sg);class Cg extends bg{apply(t){return zo(t)}}Cg.className="softplus",Fi(Cg);class Ng extends bg{apply(t){return function(t){return _i((()=>Ra(t,Gi(Vi(t),1))))}(t)}}Ng.className="softsign",Fi(Ng);class $g extends bg{apply(t){return Vo(t)}}$g.className="tanh",Fi($g);class Tg extends bg{apply(t,e=-1){return Lo(t,e)}}Tg.className="softmax",Fi(Tg);class Eg extends bg{apply(t,e=-1){return Xa(t,e)}}Eg.className="logSoftmax",Fi(Eg);class Rg extends bg{apply(t,e=1){return _i((()=>qa(Ao(qa(t,e)),t)))}}Rg.className="swish",Fi(Rg);class Ag extends bg{apply(t){return _i((()=>qa(t,Vo(zo(t)))))}}function Fg(t){return t.getClassName()}function Mg(t,e={}){return fp(t,Ai.getMap().classNameMap,e,"activation")}function Dg(t){if(null==t){return Mg({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Mg(e)}return t instanceof bg?t:Mg(t)}Ag.className="mish",Fi(Ag);class _g extends Ri{}class Og extends _g{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return _i((()=>{let e=bo([1]);return this.hasL1&&(e=Gi(e,Ka(qa(this.l1,Vi(t))))),this.hasL2&&(e=Gi(e,Ka(qa(this.l2,af(t))))),la(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Og.className="L1L2",Fi(Og);const Lg={l1l2:"L1L2"};function zg(t){return dp(t)}function Pg(t,e={}){return fp(t,Ai.getMap().classNameMap,e,"regularizer")}function Bg(t){return null==t?null:"string"==typeof t?Pg({className:t in Lg?Lg[t]:t,config:{}}):t instanceof _g?t:Pg(t)}class Ug extends qf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=_f(t);let n=$o(t);return null!=this.maxValue&&(n=ma(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Ug.className="ReLU",Fi(Ug);class Wg extends qf{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=_f(t);return Wa(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Wg.className="LeakyReLU",Fi(Wg);class Vg extends qf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ff(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Bg(t.alphaRegularizer),this.alphaConstraint=hm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new tp(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Of(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Uf({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=_f(t),vo(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Af(this.alphaInitializer),alphaRegularizer:zg(this.alphaRegularizer),alphaConstraint:um(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Vg.className="PReLU",Fi(Vg);class Gg extends qf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new ep(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=_f(t);return Aa(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Gg.className="ELU",Fi(Gg);class Hg extends qf{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=_f(t);return qa(n,ei(Ba(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Hg.className="ThresholdedReLU",Fi(Hg);class qg extends qf{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Tg).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=_f(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function jg(t,e,n){if("number"==typeof t)return sp(t,e);if(t.length!==e)throw new tp(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new tp(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var r}function Kg(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Xg(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Gp([n-e,0]);else{if("same"!==r)throw new tp(`Unsupport padding mode: ${r}.`);t*=e}return t}function Yg(t,e){return _i((()=>(Mp(e),"channelsFirst"===e?Jo(t,[0,2,3,1]):t)))}function Zg(t,e){return _i((()=>(Mp(e),"channelsFirst"===e?Jo(t,[0,2,3,4,1]):t)))}function Jg(t,e,n,r=[1,1],s="valid",i,a,o=null){return _i((()=>{if(null==i&&(i="channelsLast"),Mp(i),3!==t.rank&&4!==t.rank)throw new tp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new tp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Yg(t,i);if("causal"===s)throw new ep("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=hl({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Jo(l,[0,3,1,2])),l}))}qg.className="Softmax",Fi(qg);class Qg extends qf{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Qg.verifyArgs(e),this.rank=t,wp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ep(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=jg(e.kernelSize,t,"kernelSize"),this.strides=jg(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Dp(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Mp(this.dataFormat),this.activation=Dg(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Ff(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=hm(e.biasConstraint),this.biasRegularizer=Bg(e.biasRegularizer),this.activityRegularizer=Bg(e.activityRegularizer),this.dilationRate=jg(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new tp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new tp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new tp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(ip("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!yp(t.kernelSize,"number",1,3))throw new tp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fg(this.activation),useBias:this.useBias,biasInitializer:Af(this.biasInitializer),biasRegularizer:zg(this.biasRegularizer),activityRegularizer:zg(this.activityRegularizer),biasConstraint:um(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class tb extends Qg{constructor(t,e){super(t,e),this.kernel=null,tb.verifyArgs(e),this.filters=e.filters,wp(this.filters,"filters"),this.kernelInitializer=Ff(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=hm(e.kernelConstraint),this.kernelRegularizer=Bg(e.kernelRegularizer)}build(t){t=Of(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new tp(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return _i((()=>{let e;t=_f(t);const n=null==this.bias?null:this.bias.read(),r=kp(this.activation.getClassName());if(null!=r&&2===this.rank)e=Jg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return _i((()=>{if(null==i&&(i="channelsLast"),Mp(i),3!==t.shape.length)throw new tp(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new tp(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new tp(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Jo(t,[0,2,1])),"causal"===s)throw new ep("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ka(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=lf(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Jg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ep("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return _i((()=>{if(null==i&&(i="channelsLast"),Mp(i),4!==t.rank&&5!==t.rank)throw new tp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new tp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Zg(t,i);if("causal"===s)throw new ep("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ca(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=lf(o,n)),"channelsFirst"===i&&(o=Jo(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Of(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Kg(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Af(this.kernelInitializer),kernelRegularizer:zg(this.kernelRegularizer),kernelConstraint:um(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new tp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class eb extends tb{constructor(t){super(2,t),eb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!yp(t.kernelSize,"number",1,2))throw new tp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}eb.className="Conv2D",Fi(eb);class nb extends tb{constructor(t){super(3,t),nb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new tp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}nb.className="Conv3D",Fi(nb);class rb extends eb{constructor(t){if(super(t),this.inputSpec=[new Uf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new tp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Of(t)).length)throw new tp("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new tp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Uf({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return _i((()=>{let e=_f(t);if(4!==e.shape.length)throw new tp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Xg(a,c,l,this.padding),Xg(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Jo(e,[0,2,3,1]));let p=Sa(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Jo(p,[0,3,1,2])),null!=this.bias&&(p=lf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Of(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=Xg(e[r],o,i,this.padding),e[s]=Xg(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}rb.className="Conv2DTranspose",Fi(rb);class sb extends nb{constructor(t){if(super(t),this.inputSpec=[new Uf({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new tp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Of(t)).length)throw new tp("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new tp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Uf({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return _i((()=>{let e=_f(t);if(5!==e.shape.length)throw new tp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],l=n[s],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Xg(o,p,c,this.padding),Xg(l,f,h,this.padding),Xg(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Jo(e,[0,2,3,4,1]));let b=$a(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Jo(b,[0,4,1,2,3])),null!==this.bias&&(b=lf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(t){const e=(t=Of(t)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=Xg(e[r],u,a,this.padding),e[s]=Xg(e[s],c,o,this.padding),e[i]=Xg(e[i],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}sb.className="Conv3DTranspose",Fi(sb);class ib extends tb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new tp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new tp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new tp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ff(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Bg(e.depthwiseRegularizer),this.depthwiseConstraint=hm(e.depthwiseConstraint),this.pointwiseInitializer=Ff(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Bg(e.pointwiseRegularizer),this.pointwiseConstraint=hm(e.pointwiseConstraint)}build(t){if((t=Of(t)).length<this.rank+2)throw new tp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new tp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Uf({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return _i((()=>{let e;if(t=_f(t),1===this.rank)throw new ep("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Jo(t,[0,2,3,1])),e=Ro(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=lf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Jo(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Af(this.depthwiseInitializer),t.pointwiseInitializer=Af(this.pointwiseInitializer),t.depthwiseRegularizer=zg(this.depthwiseRegularizer),t.pointwiseRegularizer=zg(this.pointwiseRegularizer),t.depthwiseConstraint=um(this.depthwiseConstraint),t.pointwiseConstraint=um(this.pointwiseConstraint),t}}ib.className="SeparableConv";class ab extends ib{constructor(t){super(2,t)}}ab.className="SeparableConv2D",Fi(ab);class ob extends tb{constructor(t){super(1,t),ob.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!yp(t.kernelSize,"number",1,1))throw new tp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ob.className="Conv1D",Fi(ob);class lb extends qf{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return _i((()=>{if(t=_f(t),"channelsLast"===this.dataFormat){const e=Jp(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jp(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Jp(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jp(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}lb.className="Cropping2D",Fi(lb);class ub extends qf{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Mp(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,xp(Tp,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return _i((()=>{let e=_f(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Jo(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?nu.resizeNearestNeighbor(e,[t,r]):nu.resizeBilinear(e,[t,r]);return Jo(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?nu.resizeNearestNeighbor(e,[t,r]):nu.resizeBilinear(e,[t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}ub.className="UpSampling2D",Fi(ub);class cb extends Qg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ff(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=hm(t.depthwiseConstraint),this.depthwiseRegularizer=Bg(t.depthwiseRegularizer)}build(t){if((t=Of(t)).length<4)throw new tp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new tp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _i((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return _i((()=>{null==s&&(s="channelsLast"),Mp(s);let a=Yg(t,s);if(4!==t.rank)throw new tp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new tp(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ta(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Jo(a,[0,3,1,2])),a}))}(t=_f(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=lf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Of(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Kg(e,this.kernelSize[0],this.padding,this.strides[0]),i=Kg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Af(this.depthwiseInitializer),t.depthwiseRegularizer=zg(this.depthwiseRegularizer),t.depthwiseConstraint=um(this.depthwiseRegularizer),t}}function hb(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new tp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function db(t,e,n,r=!1,s,i,a=!1,o=!1){return _i((()=>{const l=e.shape.length;if(l<3)throw new tp(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Hp(2,l));if(e=Jo(e,u),null!=i)throw new ep("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=ei(ei(s,"bool"),"float32")).rank===l-1&&(s=Da(s,-1)),s=Jo(s,u)),r&&(e=To(e,0),null!=s&&(s=To(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=qo(e);let m,g;null!=s&&(m=qo(s));for(let e=0;e<p;++e){const n=f[e],r=_i((()=>t(n,d)));if(null==s)h=r[0],d=r[1];else{const t=_i((()=>{const t=m[e],n=ja(yo(t),t);return{output:Gi(qa(r[0],t),qa(d[0],n)),newStates:d.map(((e,s)=>Gi(qa(r[1][s],t),qa(e,n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(g=Wo(c,1)),[h,g,d]}))}cb.className="DepthwiseConv2D",Fi(cb);class pb extends qf{constructor(t){let e;if(super(t),null==t.cell)throw new tp("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new vb({cells:t.cell}):t.cell,null==e.stateSize)throw new tp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Uf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Hp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Mf(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return _i((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new ep("Constants support is not implemented in RNN yet.");Mf(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Uf({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!b(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new tp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new Uf({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){_i((()=>{if(!this.stateful)throw new Jd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new tp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>bo([n,t]))):this.states_=[bo([n,this.cell.stateSize])];else if(null==t)Oi(this.states_),null!=this.keptStates&&(Oi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>bo([n,t]))):this.states_[0]=bo([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new tp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Oi(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!b(r.shape,i))throw new tp(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Li(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hb(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Uf({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Wf){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return _i((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=_f(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new tp(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=db(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return _i((()=>{let e=bo(t.shape);return e=Ka(e,[1,2]),e=Xp(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?ef(e,[1,t]):e)):this.cell.stateSize>1?[ef(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===pb.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Im(e.cell,n);return new t(Object.assign(e,{cell:r}))}}pb.className="RNN",Fi(pb);class fb extends qf{}class mb extends fb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,wp(this.units,"units"),this.activation=Dg(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ff(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ff(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ff(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bg(t.kernelRegularizer),this.recurrentRegularizer=Bg(t.recurrentRegularizer),this.biasRegularizer=Bg(t.biasRegularizer),this.kernelConstraint=hm(t.kernelConstraint),this.recurrentConstraint=hm(t.recurrentConstraint),this.biasConstraint=hm(t.biasConstraint),this.dropout=Vp([1,Gp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Vp([1,Gp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Of(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _i((()=>{if(2!==t.length)throw new tp(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kb({ones:()=>yo(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kb({ones:()=>yo(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=rf(null!=i?qa(t,i):t,this.kernel.read()),null!=this.bias&&(s=lf(s,this.bias.read())),null!=a&&(n=qa(n,a));let o=Gi(s,rf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fg(this.activation),useBias:this.useBias,kernelInitializer:Af(this.kernelInitializer),recurrentInitializer:Af(this.recurrentInitializer),biasInitializer:Af(this.biasInitializer),kernelRegularizer:zg(this.kernelRegularizer),recurrentRegularizer:zg(this.recurrentRegularizer),biasRegularizer:zg(this.biasRegularizer),activityRegularizer:zg(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}mb.className="SimpleRNNCell",Fi(mb);class gb extends pb{constructor(t){t.cell=new mb(t),super(t)}call(t,e){return _i((()=>{null!=this.cell.dropoutMask&&(Oi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}gb.className="SimpleRNN",Fi(gb);class bb extends fb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new tp("GRUCell does not support reset_after parameter set to true.");this.units=t.units,wp(this.units,"units"),this.activation=Dg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Dg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ff(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ff(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ff(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bg(t.kernelRegularizer),this.recurrentRegularizer=Bg(t.recurrentRegularizer),this.biasRegularizer=Bg(t.biasRegularizer),this.kernelConstraint=hm(t.kernelConstraint),this.recurrentConstraint=hm(t.recurrentConstraint),this.biasConstraint=hm(t.biasConstraint),this.dropout=Vp([1,Gp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Vp([1,Gp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Of(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _i((()=>{if(2!==t.length)throw new tp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kb({ones:()=>yo(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kb({ones:()=>yo(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=qa(t,s[0]));let u=rf(t,this.kernel.read());this.useBias&&(u=lf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=qa(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Po(c,[2*this.units,this.units],c.rank-1),p=rf(r,h),[f,m,g]=Po(u,3,u.rank-1),[b,x]=Po(p,2,p.rank-1);a=this.recurrentActivation.apply(Gi(f,b)),o=this.recurrentActivation.apply(Gi(m,x));const y=rf(qa(o,r),d);l=this.activation.apply(Gi(g,y));const w=Gi(qa(a,r),qa(Gi(1,fo(a)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fg(this.activation),recurrentActivation:Fg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Af(this.kernelInitializer),recurrentInitializer:Af(this.recurrentInitializer),biasInitializer:Af(this.biasInitializer),kernelRegularizer:zg(this.kernelRegularizer),recurrentRegularizer:zg(this.recurrentRegularizer),biasRegularizer:zg(this.biasRegularizer),activityRegularizer:zg(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}bb.className="GRUCell",Fi(bb);class xb extends pb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new bb(t),super(t)}call(t,e){return _i((()=>{null!=this.cell.dropoutMask&&(Oi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}xb.className="GRU",Fi(xb);class yb extends fb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,wp(this.units,"units"),this.activation=Dg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Dg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Ff(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ff(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ff(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Bg(t.kernelRegularizer),this.recurrentRegularizer=Bg(t.recurrentRegularizer),this.biasRegularizer=Bg(t.biasRegularizer),this.kernelConstraint=hm(t.kernelConstraint),this.recurrentConstraint=hm(t.recurrentConstraint),this.biasConstraint=hm(t.biasConstraint),this.dropout=Vp([1,Gp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Vp([1,Gp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Of(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends pf{apply(e,r){const s=t.apply([n]),i=(new mf).apply([n]),a=t.apply([2*n]);return tf(tf(s,i),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return _i((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new tp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kb({ones:()=>yo(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kb({ones:()=>yo(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=qa(t,i[0]));let h=rf(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=qa(r,a[0])),h=Gi(h,rf(r,this.recurrentKernel.read())),this.useBias&&(h=lf(h,this.bias.read()));const[d,p,f,m]=Po(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=Gi(qa(l,s),qa(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=qa(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fg(this.activation),recurrentActivation:Fg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Af(this.kernelInitializer),recurrentInitializer:Af(this.recurrentInitializer),biasInitializer:Af(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:zg(this.kernelRegularizer),recurrentRegularizer:zg(this.recurrentRegularizer),biasRegularizer:zg(this.biasRegularizer),activityRegularizer:zg(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),recurrentConstraint:um(this.recurrentConstraint),biasConstraint:um(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}yb.className="LSTMCell",Fi(yb);class wb extends pb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new yb(t),super(t)}call(t,e){return _i((()=>{null!=this.cell.dropoutMask&&(Oi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}wb.className="LSTM",Fi(wb);class vb extends fb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return _i((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Mf(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{Lp(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Im(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Pf(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Bf(e)}}function kb(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=t,a=()=>null!=i?i(e(),n):uf(e(),n),o=()=>cf(a,e,r);return!s||s<=1?Li(o().clone()):Array(s).fill(void 0).map(o).map((t=>Li(t.clone())))}vb.className="StackedRNNCells",Fi(vb);var Ib,Sb;class Cb extends pb{constructor(t){if(t.unroll)throw new ep("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new ep("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Uf({ndim:5})]}call(t,e){return _i((()=>{if(null!=this.cell.dropoutMask&&(Oi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Oi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new tp("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return _i((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=bo([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){_i((()=>{if(!this.stateful)throw new Jd("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new tp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>bo(s))):this.states_=[bo(s)];else if(null==t)Oi(this.states_),null!=this.keptStates&&(Oi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>bo(s))):this.states_[0]=bo(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new tp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Oi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!b(n.shape,r))throw new tp(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Li(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=Kg(l,r[0],s,i[0],a[0]),h=Kg(u,r[1],s,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Cb.className="ConvRNN2D";class Nb extends yb{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,wp(this.filters,"filters"),this.kernelSize=jg(n,2,"kernelSize"),this.kernelSize.forEach((t=>wp(t,"kernelSize"))),this.strides=jg(r||1,2,"strides"),this.strides.forEach((t=>wp(t,"strides"))),this.padding=s||"valid",Dp(this.padding),this.dataFormat=i||"channelsLast",Mp(this.dataFormat),this.dilationRate=jg(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>wp(t,"dilationRate")))}build(t){var e;t=Of(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new tp(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends pf{apply(t,e){return Qp([n.apply([r]),xo([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return _i((()=>{if(3!==t.length)throw new tp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kb({ones:()=>yo(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?qa(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kb({ones:()=>yo(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,x,y,w]=Po(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Po(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[C,N,$,T]=Po(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,$),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(Gi(l,p)),R=this.recurrentActivation.apply(Gi(u,f)),A=Gi(qa(R,i),qa(E,this.activation.apply(Gi(c,m)))),F=qa(this.recurrentActivation.apply(Gi(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=va(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?lf(s,n,this.dataFormat):s}recurrentConv(t,e){return va(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Nb.className="ConvLSTM2DCell",Fi(Nb);class $b extends Cb{constructor(t){const e=new Nb(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}$b.className="ConvLSTM2D",Fi($b);class Tb extends qf{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return cf((()=>uf(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Tb.className="Dropout",Fi(Tb);class Eb extends Tb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Eb.className="SpatialDropout1D",Fi(Eb);class Rb extends qf{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,wp(this.units,"units"),this.activation=Dg(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Ff(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ff(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=hm(t.kernelConstraint),this.biasConstraint=hm(t.biasConstraint),this.kernelRegularizer=Bg(t.kernelRegularizer),this.biasRegularizer=Bg(t.biasRegularizer),this.activityRegularizer=Bg(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Of(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Of(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t),r=kp(this.activation.getClassName());let s;return null!=r?s=rf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=rf(n,this.kernel.read()),null!=this.bias&&(s=lf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Fg(this.activation),useBias:this.useBias,kernelInitializer:Af(this.kernelInitializer),biasInitializer:Af(this.biasInitializer),kernelRegularizer:zg(this.kernelRegularizer),biasRegularizer:zg(this.biasRegularizer),activityRegularizer:zg(this.activityRegularizer),kernelConstraint:um(this.kernelConstraint),biasConstraint:um(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Rb.className="Dense",Fi(Rb);class Ab extends qf{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Of(t);for(const e of t.slice(1))if(null==e)throw new tp(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Wp(t,1)]}call(t,e){return _i((()=>{this.invokeCallHook(t,e);let n=_f(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Jo(n,t)}return function(t){if(t.rank<=1)throw new tp(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Wp(t.shape,1)];return la(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Ab.className="Flatten",Fi(Ab);class Fb extends qf{constructor(t){super(t),this.supportsMasking=!0,this.activation=Dg(t.activation)}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Fg(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Fb.className="Activation",Fi(Fb);class Mb extends qf{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return _i((()=>{return t=_f(t),e=t,n=this.n,_i((()=>{if(2!==e.shape.length)throw new tp(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return ef(Xp(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Mb.className="RepeatVector",Fi(Mb);class Db extends qf{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new tp("Can only specifiy one unknown dimension.");i=t}else s*=e}const a=Wp(t);if(null!==i){if(0===s||a%s!=0)throw new tp(n);r[i]=a/s}else if(a!==s)throw new tp(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return la(n,s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Db.className="Reshape",Fi(Db);class _b extends qf{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Hp(1,t.dims.length+1);if(!b(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Uf({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Of(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Jo(_f(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}_b.className="Permute",Fi(_b);class Ob extends qf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=_f(t);return qi(mo(n,this.maskValue),-1)}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t),r=qi(mo(n,this.maskValue),-1,!0);return qa(n,ei(r,n.dtype))}))}}Ob.className="Masking",Fi(Ob);class Lb extends qf{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(lp(t.inputLength))}this.inputDim=t.inputDim,wp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,wp(this.outputDim,"outputDim"),this.embeddingsInitializer=Ff(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Bg(t.embeddingsRegularizer),this.activityRegularizer=Bg(t.activityRegularizer),this.embeddingsConstraint=hm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return _i((()=>this.maskZero?(t=_f(t),mo(t,Xo(t))):null))}computeOutputShape(t){if(t=Of(t),null==this.inputLength)return[...t,this.outputDim];const e=lp(this.inputLength);if(e.length!==t.length-1)throw new tp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new tp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return _i((()=>{this.invokeCallHook(t,e);let n=_f(t);"int32"!==n.dtype&&(n=Kp(n,"int32"));const r=sf(this.embeddings.read(),la(n,[n.size]));return la(r,Of(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Af(this.embeddingsInitializer),embeddingsRegularizer:zg(this.embeddingsRegularizer),activityRegularizer:zg(this.activityRegularizer),embeddingsConstraint:um(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Lb.className="Embedding",Fi(Lb);class zb extends qf{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new ep}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new tp("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Of(t)]),t.length<2)throw new tp(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=gp(e),e.length>1)throw new tp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===gp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return _i((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Gp(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Xp(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let a=la(r,[s].concat(Wp(t.slice(1))));a=Jo(a,[1,0]),a=la(a,i),e.push(a),n=!0}else if(t>1){const s=Hp(1,t).concat([0]);e.push(Jo(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=la(Jo(la(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(Hp(0,s-1));r=Jo(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=gp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return _i((()=>{if(null==e)return null;if(!Array.isArray(e))throw new tp("`mask` should be an Array");if(!Array.isArray(t))throw new tp("`inputs` should be an Array");if(e.length!==t.length)throw new tp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Da(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Ya(n,e[t]);return n}))}}class Pb extends zb{constructor(t){super(t)}mergeFunction(t){return _i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Gi(e,t[n]);return e}))}}Pb.className="Add",Fi(Pb);class Bb extends zb{constructor(t){super(t)}mergeFunction(t){return _i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=qa(e,t[n]);return e}))}}Bb.className="Multiply",Fi(Bb);class Ub extends zb{constructor(t){super(t)}mergeFunction(t){return _i((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Gi(e,t[n]);return qa(1/t.length,e)}))}}Ub.className="Average",Fi(Ub);class Wb extends zb{constructor(t){super(t)}mergeFunction(t){return _i((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=to(e,t[n]);return e}))}}Wb.className="Maximum",Fi(Wb);class Vb extends zb{constructor(t){super(t)}mergeFunction(t){return _i((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=no(e,t[n]);return e}))}}Vb.className="Minimum",Fi(Vb);class Gb extends zb{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new tp("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(b(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new tp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return _i((()=>Qp(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new tp("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new tp("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new tp("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new tp(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return _i((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(ei(yo(t[n]),"bool")):e[n].rank<t[n].rank?r.push(Da(e[n],-1)):r.push(e[n]);const s=ga(r,this.axis);return Hi(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Hb(t,e){for(;t<0;)t+=e;return t}Gb.className="Concatenate",Fi(Gb);class qb extends zb{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){d(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new ep("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new tp(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new tp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Hb(e,t[n].shape.length))):[Hb(this.axes,n.shape.length),Hb(this.axes,r.shape.length)],this.normalize&&(n=Sm(n,e[0]),r=Sm(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new ep("batchDot is not implemented for tensors of 4D or higher rank yet");if(d(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),d(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new ep("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return _i((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=la(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=la(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?Ka(qa(t,e),i[0]):Ka(qa(Jo(t,[1,0]),e),i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=Za(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=Uo(a,e)}return 1===a.shape.length&&(a=Da(a,1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Hb(this.axes,t.length),Hb(this.axes,e.length)],n}computeOutputShape(t){d(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new ep("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}qb.className="Dot",Fi(qb);class jb extends qf{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t);return cf((()=>Gi(nf(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}jb.className="GaussianNoise",Fi(jb);class Kb extends qf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return _i((()=>{this.invokeCallHook(t,e);const n=_f(t);return this.rate>0&&this.rate<1?cf((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return qa(n,nf(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Kb.className="GaussianDropout",Fi(Kb);class Xb extends qf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||_f(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return _i((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return cf((()=>{const e=_f(t),r=-1.7580993408473766;let s=Ua(No(n),this.rate);s=Kp(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate,o=Gi(qa(e,s),qa(Gi(s,-1),r));return Gi(qa(o,i),a)}),(()=>_f(t)),e.training||!1)}return t}))}}function Yb(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=da(t,e,n,r,s,i);else if(3===t.rank)a=pa(t,e,n,r,s,i);else{if(4!==t.rank)throw new ep(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=fa(t,e,n,r,s,i)}return a}Xb.className="AlphaDropout",Fi(Xb);class Zb extends qf{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Ff(t.betaInitializer||"zeros"),this.gammaInitializer=Ff(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ff(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ff(t.movingVarianceInitializer||"ones"),this.betaConstraint=hm(t.betaConstraint),this.gammaConstraint=hm(t.gammaConstraint),this.betaRegularizer=Bg(t.betaRegularizer),this.gammaRegularizer=Bg(t.gammaRegularizer)}build(t){t=Of(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new tp(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Uf({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return _i((()=>{const n=null!=e.training&&e.training,r=_f(t),s=r.shape,i=s.length,a=Hp(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=sp(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!b(u,Hp(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=la(this.movingMean.read(),l),e=la(this.movingVariance.read(),l),n=this.center?la(this.beta.read(),l):null,s=this.scale?la(this.gamma.read(),l):null;return Yb(r,t,e,n,s,this.epsilon)}return Yb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return b(r.slice().sort(),Hp(0,t.rank-1))?function(t,e,n,r,s=.001){return _i((()=>{const i=po(t,r),a=i.mean,o=i.variance;return[Yb(t,a,o,n,e,s),a,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return _i((()=>{const i=po(t,r),a=i.mean,o=i.variance,l=[];for(const e of Hp(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=la(a,l),c=la(o,l),h=null==e?null:la(e,l),d=null==n?null:la(n,l);return[Yb(t,u,c,d,h,s),a,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{_i((()=>{const r=1-n,s=t.read(),i=qa(ja(s,e),r);t.write(ja(s,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Af(this.betaInitializer),gammaInitializer:Af(this.gammaInitializer),movingMeanInitializer:Af(this.movingMeanInitializer),movingVarianceInitializer:Af(this.movingVarianceInitializer),betaRegularizer:zg(this.betaRegularizer),gammaRegularizer:zg(this.gammaRegularizer),betaConstraint:um(this.betaConstraint),gammaConstraint:um(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Zb.className="BatchNormalization",Fi(Zb);class Jb extends qf{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Ff(t.betaInitializer||"zeros"),this.gammaInitializer=Ff(t.gammaInitializer||"ones"),this.betaRegularizer=Bg(t.betaRegularizer),this.gammaRegularizer=Bg(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Of(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==gp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=_f(t),r=n.shape,s=r.length;return _i((()=>{let{mean:t,variance:e}=po(n,this.axis,!0);const i=sp(1,s);for(const t of this.axis)i[t]=r[t];const a=t=>null!=t&&t.shape.length!==s?la(t,i):t;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=_a(t,u),e=_a(e,u),null!=o&&(o=_a(o,c)),null!=l&&(l=_a(l,c)),Yb(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Af(this.betaInitializer),gammaInitializer:Af(this.gammaInitializer),betaRegularizer:zg(this.betaRegularizer),gammaRegularizer:zg(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Jb.className="LayerNormalization",Fi(Jb);class Qb extends qf{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new tp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new tp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new tp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Uf({ndim:4})]}computeOutputShape(t){let e,n;return t=Of(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return _i((()=>{return e=_f(t),n=this.padding,r=this.dataFormat,_i((()=>{if(4!==e.rank)throw new tp(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new tp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new tp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],wo(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function tx(t,e,n,r,s,i){return _i((()=>{let a;Mp(s),_p(i),Dp(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Yg(t,s);const o="same"===r?"same":"valid";return a="max"===i?Ja(t,e,n,o):ua(t,e,n,o),"channelsFirst"===s&&(a=Jo(a,[0,3,1,2])),a}))}function ex(t,e,n,r,s,i){return _i((()=>{let a;Mp(s),_p(i),Dp(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Zg(t,s);const o="same"===r?"same":"valid";return a="max"===i?Qa(t,e,n,o):ca(t,e,n,o),"channelsFirst"===s&&(a=Jo(a,[0,4,1,2,3])),a}))}Qb.className="ZeroPadding2D",Fi(Qb);class nx extends qf{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new tp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(wp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new tp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}wp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Dp(this.padding),this.inputSpec=[new Uf({ndim:3})]}computeOutputShape(t){const e=Kg((t=Of(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return _i((()=>{this.invokeCallHook(t,e),t=Xp(_f(t),2);const n=this.poolingFunction(_f(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Uo(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class rx extends nx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),tx(t,e,n,r,s,"max")}}rx.className="MaxPooling1D",Fi(rx);class sx extends nx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),tx(t,e,n,r,s,"avg")}}sx.className="AveragePooling1D",Fi(sx);class ix extends qf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new tp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];wp(this.poolSize,"poolSize"),wp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Mp(this.dataFormat),Dp(this.padding),this.inputSpec=[new Uf({ndim:4})]}computeOutputShape(t){t=Of(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Kg(e,this.poolSize[0],this.padding,this.strides[0]),n=Kg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return _i((()=>(this.invokeCallHook(t,e),this.poolingFunction(_f(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ax extends ix{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),tx(t,e,n,r,s,"max")}}ax.className="MaxPooling2D",Fi(ax);class ox extends ix{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),tx(t,e,n,r,s,"avg")}}ox.className="AveragePooling2D",Fi(ox);class lx extends qf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new tp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];wp(this.poolSize,"poolSize"),wp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Mp(this.dataFormat),Dp(this.padding),this.inputSpec=[new Uf({ndim:5})]}computeOutputShape(t){t=Of(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Kg(e,this.poolSize[0],this.padding,this.strides[0]),n=Kg(n,this.poolSize[1],this.padding,this.strides[1]),r=Kg(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return _i((()=>(this.invokeCallHook(t,e),this.poolingFunction(_f(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ux extends lx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),ex(t,e,n,r,s,"max")}}ux.className="MaxPooling3D",Fi(ux);class cx extends lx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Mp(s),Dp(r),ex(t,e,n,r,s,"avg")}}cx.className="AveragePooling3D",Fi(cx);class hx extends qf{constructor(t){super(t),this.inputSpec=[new Uf({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new ep}}class dx extends hx{constructor(t){super(t||{})}call(t,e){return _i((()=>{const e=_f(t);return eo(e,1)}))}}dx.className="GlobalAveragePooling1D",Fi(dx);class px extends hx{constructor(t){super(t||{})}call(t,e){return _i((()=>{const e=_f(t);return Ha(e,1)}))}}px.className="GlobalMaxPooling1D",Fi(px);class fx extends qf{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Mp(this.dataFormat),this.inputSpec=[new Uf({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new ep}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class mx extends fx{call(t,e){return _i((()=>{const e=_f(t);return"channelsLast"===this.dataFormat?eo(e,[1,2]):eo(e,[2,3])}))}}mx.className="GlobalAveragePooling2D",Fi(mx);class gx extends fx{call(t,e){return _i((()=>{const e=_f(t);return"channelsLast"===this.dataFormat?Ha(e,[1,2]):Ha(e,[2,3])}))}}gx.className="GlobalMaxPooling2D",Fi(gx);class bx extends qf{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Im(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class xx extends bx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Of(t)).length<3)throw new tp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Of(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return _i((()=>db(((t,n)=>[_f(this.layer.call(t,e)),[]]),t=_f(t),[],!1,null,null,!1,!0)[1]))}}xx.className="TimeDistributed",Fi(xx);class yx extends bx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Im(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Im(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,xp(Ap,"BidirectionalMergeMode",s),t.weights)throw new ep("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):op(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hb(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new tp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new Uf({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new ep("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Wf;for(const t of i)if(t instanceof Wf!==o)throw new tp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return _i((()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=To(s,1)),"concat"===this.mergeMode?a=Qp([r,s]):"sum"===this.mergeMode?a=Gi(r,s):"ave"===this.mergeMode?a=qa(.5,Gi(r,s)):"mul"===this.mergeMode?a=qa(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Lp(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Lp(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Im(e.layer);if(delete e.layer,null!=e.numConstants)throw new ep("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}yx.className="Bidirectional",Fi(yx),j().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(Ib||(Ib={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Sb||(Sb={}));var wx,vx,kx=n(6377);function Ix(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if($x(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const a=Ix(t[i],e,n,r);s[i]=a}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Sx(t,e=Nx){return Cx(t,e)}function Cx(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if($x(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Cx(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Nx(t){return null===t?null:$x(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function $x(t){let e=!1;if(j().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:r}=n(4977);e=t instanceof r}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Vr)&&!(t instanceof Promise)&&!e)}function Tx(t){return Ix(t,Ex)}function Ex(t){return t instanceof Vr?{value:t.clone(),recurse:!1}:$x(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Rx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Ax extends Rx{constructor(){super(Ax.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Ax.INITIAL_CAPACITY=32;class Fx{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Ux(this,t)}filter(t){return new Px(this,t)}map(t){return new Bx(this,t)}mapAsync(t){return new Wx(this,t)}serialMapAsync(t){return new Wx(this,t).serial()}flatmap(t){return new Gx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new zx(this,t,e)}columnMajorBatch(t,e=!0,n=Nx){return this.rowMajorBatch(t,e).map((t=>Sx(t,n)))}concatenate(t,e){return new Hx(new Mx([this,t]),e)}take(t){return t<0||null==t?this:new Lx(this,t)}skip(t){return t<0||null==t?this:new Ox(this,t)}prefetch(t){return new qx(this,t)}shuffle(t,e){return new jx(this,t,e)}serial(){return new _x(this)}}class Mx extends Fx{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Tx(t),done:!1}}}class Dx extends Fx{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class _x extends Fx{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ox extends Fx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Oi(t.value)}return this.upstream.next()}}class Lx extends Fx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class zx extends Fx{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Px extends Fx{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Oi(t.value)}}}class Bx extends Fx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ns(t.value),n=this.transform(t.value),r=ns(n);for(const t of e)es(t,r)||t.dispose();return{value:n,done:!1}}}class Ux extends Fx{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Wx extends Fx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ns(t.value),n=await this.transform(t.value),r=ns(n);for(const t of e)es(t,r)||t.dispose();return{value:n,done:!1}}}class Vx extends Fx{constructor(){super(),this.outputQueue=new Ax,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Gx extends Vx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=ns(t.value),n=this.transform(t.value),r=ns(n);this.outputQueue.pushAll(n);for(const t of e)es(t,r)||t.dispose();return!0}}class Hx extends Fx{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(vx=wx||(wx={}))[vx.FAIL=0]="FAIL",vx[vx.SHORTEST=1]="SHORTEST",vx[vx.LONGEST=2]="LONGEST";class qx extends Fx{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Rx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class jx extends qx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=kx.alea(n||Tr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Kx{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return d(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Xx((async()=>(await n.iterator()).columnMajorBatch(t,e,Yx)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Xx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Xx((async()=>(await e.iterator()).filter((e=>_i((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Xx((async()=>(await e.iterator()).map((e=>_i((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Xx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Xx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Xx((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new Dx(s)).take(t),new Hx(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Xx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=kx.alea(e||Tr().toString());return Xx((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Xx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Xx(t,e=null){return new class extends Kx{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Yx(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Vr||T(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Vr?Wo(t):vs(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Zx(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&d("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}Kx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Jx=gc;class Qx extends a{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,Mi())}nextDataId(){return Qx.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&nr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&R(n[0])){const s=n.map((t=>Er(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Lu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Rr(t)));return ti(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ti(t.shape,t.dtype,e)}makeOutput(t,e,n){return Mi().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Tr();return t(),{kernelMs:Tr()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Zx([t],"where");const e=this.readSync(t.dataId);return Jx(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function ty(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(Zx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=g(a.shape),c=n||a.dtype,h=N(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],s);return o.makeTensorInfo(a.shape,c,h)}}function ey(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(Zx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,s);return o.makeTensorInfo(a.shape,u,c)}}Qx.nextDataId=0,zi("cpu",(()=>new Qx),1);const ny=ty(Kt,(t=>t>=0?t:Math.exp(t)-1)),ry={kernelName:Kt,backendName:"cpu",kernelFunc:ny};function sy(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const iy={kernelName:he,backendName:"cpu",kernelFunc:sy};function ay(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;Zx([s],"leakyRelu");const a=g(s.shape),o=n.data.get(s.dataId).values,l=C("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?i*o[t]:o[t];return n.makeTensorInfo(s.shape,"float32",l)}const oy={kernelName:be,backendName:"cpu",kernelFunc:ay};function ly(t){return(e,n,r,s,i)=>{const a=di(e,n),o=a.length,l=_(a),u=C(i,g(a)),c=e.length,h=n.length,d=_(e),p=_(n),f=ci(e,a),m=ci(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=V(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=W(i,c,d),g=n.slice(-h);m.forEach((t=>g[t]=0));const b=W(g,h,p);u[e]=t(r[a],s[b])}return[u,a]}}const uy=ly(((t,e)=>t<0?e*t:t));function cy(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;Zx([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=uy(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const hy={kernelName:Je,backendName:"cpu",kernelFunc:cy},dy=ty(rn,(t=>Math.max(0,t))),py={kernelName:rn,backendName:"cpu",kernelFunc:dy},fy=ty(cn,(t=>Math.min(Math.max(0,t),6))),my={kernelName:cn,backendName:"cpu",kernelFunc:fy};function gy(t){return(e,n,r)=>{const s=C(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const by=gy((t=>1/(1+Math.exp(-t)))),xy=ty(kn,(t=>1/(1+Math.exp(-t)))),yy={kernelName:kn,backendName:"cpu",kernelFunc:xy};function wy(t,e,n,r,s){if("linear"===n)return sy({inputs:{x:e},backend:t});if("relu"===n)return dy({inputs:{x:e},backend:t});if("elu"===n)return ny({inputs:{x:e},backend:t});if("relu6"===n)return fy({inputs:{x:e},backend:t});if("prelu"===n)return cy({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return ay({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return xy({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function vy(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const ky={kernelName:It,backendName:"cpu",kernelFunc:vy};function Iy(t,e,n="float32"){if("complex64"===n)return vy({inputs:{real:Iy(t,e,"float32"),imag:Iy(t,e,"float32")},backend:t});const r=P(g(e),n);return t.makeTensorInfo(e,n,r)}function Sy(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Cy={kernelName:en,backendName:"cpu",kernelFunc:Sy};function Ny(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return sy({inputs:{x:s},backend:n});const t=Iy(n,s.shape,s.dtype),e=Ny({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=vy({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=Sy({inputs:{input:s},backend:n}),e=Ny({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!$(s.dtype,i)){const t=sy({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===i){const t=n.data.get(s.dataId).values,e=$r([0],s.dtype),[r,i]=ly(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const $y={kernelName:wt,backendName:"cpu",kernelFunc:Ny};function Ty(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;Zx([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?fc(l):l,h="string"===i.dtype?fc(u):u,d=r||i.dtype,[p,f]=e(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:s})=>{const{a:i,b:a}=t,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const t=Ny({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=Ny({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(i.shape,a.shape,l,u,f,m),y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",b),v=vy({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=e(i.shape,a.shape,t,n,s);return o.makeTensorInfo(u,s,l)}}}function Ey(t){return(e,n,r,s,i,a)=>{const o=di(e,n),l=g(o),u=o.length,c=_(o),h=C("float32",l),d=C("float32",l),p=ci(e,o),f=ci(n,o),m=Lu(r,s),b=Lu(i,a),x=e.length,y=_(e),w=n.length,v=_(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%b.length,s=t(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);h[e]=s.real,d[e]=s.imag}else for(let e=0;e<h.length;e++){const n=V(e,u,c),r=n.slice(-x);p.forEach((t=>r[t]=0));const s=W(r,x,y),i=n.slice(-w);f.forEach((t=>i[t]=0));const a=W(i,w,v),o=t(m[2*s],m[2*s+1],b[2*a],b[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const Ry=ly(((t,e)=>t+e)),Ay=Ey(((t,e,n,r)=>({real:t+n,imag:e+r}))),Fy=Ty(et,Ry,Ay),My={kernelName:et,backendName:"cpu",kernelFunc:Fy};function Dy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=g(s.shape),o=k(i,a),l=g(o);d(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const _y={kernelName:sn,backendName:"cpu",kernelFunc:Dy};function Oy(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;Zx([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],p=a?s.shape[l-1]:s.shape[l-2],f=o?i.shape[u-2]:i.shape[u-1],m=s.shape.slice(0,-2),b=i.shape.slice(0,-2),x=g(m),y=g(b),w=di(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([p,f]);d(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,f,h]:[y,h,f],k=Dy({inputs:{x:s},backend:n,attrs:{shape:a?[x,c,p]:[x,p,c]}}),I=Dy({inputs:{x:i},backend:n,attrs:{shape:v}}),S=a?k.shape[1]:k.shape[2],C=a?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],$=Math.max(x,y),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=_(k.shape),A=_(I.shape),[F,M,D]=a?[R[0],1,R[1]]:[R[0],R[1],1],[O,L,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=C*N,B=ti([$,C,N],k.dtype),U=B.values,W=n.blockSize;for(let t=0;t<$;t++)for(let e=0;e<C;e+=W)for(let n=0;n<N;n+=W)for(let r=0;r<S;r+=W){const s=Math.min(e+W,C),i=Math.min(n+W,N),a=Math.min(r+W,S);for(let o=e;o<s;o++)for(let e=n;e<i;e++){let n=0;for(let s=r;s<a;s++){const r=Math.min(t,x-1)*F,i=Math.min(t,y-1)*z;n+=T[r+o*M+s*D]*E[s*O+e*L+i]}U[t*P+(o*N+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,B.dtype,B.values)}const Ly={kernelName:gt,backendName:"cpu",kernelFunc:Oy},zy={kernelName:Qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=Oy({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Fy({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=wy(n,d,c,o,h),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function Py(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const By={kernelName:J,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Zx(e,"abs");let r=new Float32Array(g(e.shape));return r=Py(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},Uy=ty(Q,(t=>Math.acos(t))),Wy={kernelName:Q,backendName:"cpu",kernelFunc:Uy},Vy=ty(tt,(t=>Math.acosh(t))),Gy={kernelName:tt,backendName:"cpu",kernelFunc:Vy},Hy={kernelName:nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;Zx(e,"addN");const s=r.map((t=>n.data.get(t.dataId).values)),i=ti(r[0].shape,r[0].dtype),a=i.values;for(let t=0;t<r.length;t++){const e=s[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function qy(t,e,n,r,s){const i=e.length,a=g(e),o=_(e),l=_(s),u=C(n,g(s));for(let e=0;e<a;++e){const n=V(e,i,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[W(s,i,l)]=t[e]}return u}function jy(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;Zx(s,"transpose");const a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[i[t]];const l=qy(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Ky={kernelName:qn,backendName:"cpu",kernelFunc:jy},Xy={kernelName:rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Zx(s,"all");const o=I(i,s.shape);let l=o;const u=lo(l,s.shape.length);let c=s;null!=u&&(c=jy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=co(l.length,s.shape.length)),oo("all",l,c.shape.length);const[h,d]=io(c.shape,l),p=g(d),f=P(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Dy({inputs:{x:b},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},Yy={kernelName:st,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Zx(s,"any");const o=I(i,s.shape);let l=o;const u=lo(l,s.shape.length);let c=s;null!=u&&(c=jy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=co(l.length,s.shape.length)),oo("any",l,c.shape.length);const[h,d]=io(c.shape,l),p=g(d),f=P(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Dy({inputs:{x:b},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},Zy={kernelName:it,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Zx(s,"argMax");let a=I(i,s.shape);const o=lo(a,s.shape.length);let l=s;const u=[];null!=o&&(l=jy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=co(a.length,l.shape.length)),a=[a[0]],oo("argMax",a,l.shape.length);const[c,h]=io(l.shape,a),d=P(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s>n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},Jy={kernelName:at,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Zx(s,"argMin");let a=I(i,s.shape);const o=lo(a,s.shape.length);let l=s;const u=[];null!=o&&(l=jy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=co(a.length,l.shape.length)),a=[a[0]],oo("argMin",a,l.shape.length);const[c,h]=io(l.shape,a),d=P(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s<n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",d)}},Qy=ty(ot,(t=>Math.asin(t))),tw={kernelName:ot,backendName:"cpu",kernelFunc:Qy},ew=ty(lt,(t=>Math.asinh(t))),nw={kernelName:lt,backendName:"cpu",kernelFunc:ew},rw=ty(ut,(t=>Math.atan(t))),sw={kernelName:ut,backendName:"cpu",kernelFunc:rw},iw=ly(((t,e)=>Math.atan2(t,e))),aw=Ty(ht,iw),ow={kernelName:ht,backendName:"cpu",kernelFunc:aw},lw=ty(ct,(t=>Math.atanh(t))),uw={kernelName:ct,backendName:"cpu",kernelFunc:lw};function cw(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ti(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*b,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let b=0;b<s.outHeight;++b){const w=b*a-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+b*x;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,x=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const a=t[s+n*r[2]+e];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,w++)}if(isNaN(b))break}g[I+n*y+e]="avg"===i?x/w:b}}}return m}function hw(t,e,n,r,s=!1,i=!1){const a=ti(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ti(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const x=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const y=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=u){const a=n-g;for(let o=p;o<y;o+=c){const l=o-h,u=m.get(t,n,o,e);u>w&&(w=u,v=s?i?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}function dw(t,e,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ti(s.outShape,n),w=y.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let e=0;e<s.batchSize;++e){const n=e*v,y=e*r[0];for(let e=0;e<s.inChannels;++e)for(let v=0;v<s.outDepth;++v){const C=v*a-m;let N=C;for(;N<0;)N+=u;const $=Math.min(s.inDepth,d+C),T=n+v*k;for(let n=0;n<s.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+a),v=T+n*I;for(let n=0;n<s.outWidth;++n){const a=n*l-b;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),g=v+n*S;let k=x,I=0,C=0;for(let n=N;n<$;n+=u){const s=y+n*r[1];for(let n=d;n<m;n+=c){const a=s+n*r[2];for(let n=o;n<p;n+=h){const s=t[a+n*r[3]+e];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+e]="avg"===i?I/C:k}}}}return y}const pw={kernelName:dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Zx(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;d(ia(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Xi(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=sy({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=cw(t,s.shape,s.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},fw={kernelName:ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Zx(s,"avgPool3d");const c=Yi(s.shape,i,a,1,o,l,u),h=dw(n.data.get(s.dataId).values,s.shape,s.dtype,_(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},mw={kernelName:mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Zx([s,i],"avgPool3DGrad");const c=Yi(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,C=v-1-c.padInfo.top,N=ti(i.shape,"float32"),$=1/(f*m*g),T=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-I,a=r-C,o=s-S;let l=0;for(let n=0;n<w;n+=b){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const s=(a+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const i=(o+n)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(l+=T.get(t,r,s,i,e))}}}N.set(l*$,t,n,r,s,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},gw={kernelName:pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;Zx([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Xi(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,w=b-1-c.padInfo.top,v=ti(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ti(s.shape,"float32",I);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,i=r-y;let a=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=S.get(t,r,s,e))}}v.set(a*k,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},bw={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:a,mean:o,variance:l}=e;d(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Zx([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),b=m.length,x=f.length,y=p.length,w=h.length;let v=0,k=0,I=0,S=0;for(let t=0;t<c.length;++t)g[t]=m[v++]+(c[t]-h[k++])*f[I++]/Math.sqrt(p[S++]+u),v>=b&&(v=0),k>=w&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function xw(t,e,n,r,s){const i=Ci(r,e,n),a=g(n),o=_(r);if(i){const n=Ni(e,o);return"string"===s?t.slice(n,n+a):t.subarray(n,n+a)}const l=ti(r,s,"string"===s?fc(t):t),u=ti(n,s);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===s?mc(u.values):u.values}function yw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r;Zx(s,"slice");const[o,l]=$i(s,i,a);pi(s,o,l);const u=xw(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const ww={kernelName:xn,backendName:"cpu",kernelFunc:yw},vw={kernelName:bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;Zx([s],"batchToSpaceND");const o=i.reduce(((t,e)=>t*e)),l=wu(s.shape,i,o),u=vu(l.length,i.length),c=ku(s.shape,i,o),h=Iu(a,i.length),d=Su(c,a,i.length),p=Dy({inputs:{x:s},backend:n,attrs:{shape:l}}),f=jy({inputs:{x:p},backend:n,attrs:{perm:u}}),m=Dy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=yw({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function kw(t,e,n,r,s){const i=g(r),a=P(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?e[n]:1)}return a}function Iw(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],a=ti([s,n],e.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=t.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):e.size>0?a.set(a.get(o,i)+e.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const Sw={kernelName:xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=kw(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},Cw={kernelName:yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=di(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Nw=gy((t=>Math.ceil(t))),$w=ey(vt,Nw),Tw={kernelName:vt,backendName:"cpu",kernelFunc:$w},Ew=ty(kt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Rw={kernelName:kt,backendName:"cpu",kernelFunc:Ew},Aw={kernelName:St,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(g(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function Fw(t,e,n,r){const s=N(n,g(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=g(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const i="string"===n?fc(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[o+e]=i[a++]}r+=t.shape[1]}))}return s}function Mw(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Dw={kernelName:pe,backendName:"cpu",kernelFunc:Mw};function _w(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=I(s,e[0].shape)[0];let a=gu(e.map((t=>t.shape)),i);if(0===g(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>g(t.shape)>0));if(1===o.length)return sy({inputs:{x:o[0]},backend:n});if(mu(o.map((t=>t.shape)),i),"complex64"===o[0].dtype){const t=o.map((t=>Sy({inputs:{input:t},backend:n}))),e=o.map((t=>Mw({inputs:{input:t},backend:n}))),r=_w({inputs:t,backend:n,attrs:{axis:i}}),s=_w({inputs:e,backend:n,attrs:{axis:i}}),a=vy({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map((t=>{const e=g(t.shape.slice(i));return Dy({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=gu(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=Fw(u,a,e[0].dtype,c),d=gu(o.map((t=>t.shape)),i),p=n.makeTensorInfo(d,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const Ow={kernelName:Ct,backendName:"cpu",kernelFunc:_w};function Lw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Zx([s,i],"conv2d");const h=aa(l),d=Zi(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,w=new Pr(d.outShape,s.dtype),v=_(s.shape),k=_(i.shape),I=v[0],S=y?v[1]:v[2],C=y?v[2]:1,N=y?1:v[1],$=w.strides[0],T=y?w.strides[1]:w.strides[2],E=y?w.strides[2]:1,R=y?1:w.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,M=w.values;for(let t=0;t<d.batchSize;++t){const e=t*I,n=t*$;for(let t=0;t<d.outHeight;++t){const r=n+t*T,s=t*d.strideHeight-x;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*S;for(let t=0;t<d.outWidth;++t){const e=r+t*E,n=t*d.strideWidth-b;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const s=a+r*C;let o=i+t*k[1];for(let t=0;t<d.inChannels;++t){const n=A[s+t*N];for(let t=0;t<d.outChannels;++t)M[e+t*R]+=n*F[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const zw={kernelName:Nt,backendName:"cpu",kernelFunc:Lw},Pw={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Zx([s,i],"conv2dBackpropFilter");const h=aa(l),d=Zi(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new Pr(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Pr(s.shape,s.dtype,v),S=new Pr(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/p)),n=Math.min(d.outHeight,(d.inHeight+w-t)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/f)),i=Math.min(d.outWidth,(d.inWidth+y-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-w;for(let t=s;t<i;++t){const n=r+t*f-y;l+=b?I.get(u,e,n,a)*S.get(u,c,t,o):I.get(u,a,e,n)*S.get(u,o,c,t)}}x.set(l,t,r,a,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Bw={kernelName:Tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Zx([s,i],"conv2dBackpropInput");const h=_(i.shape),d=_(s.shape);let p=aa(u);const f=Zi(a,i.shape,o,1,l,c,!1,p),m=new Pr(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[y,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:N,inWidth:$,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const M=I-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===p,L=m.strides[0],z=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],U=d[0],W=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let t=0;t<k;++t)for(let e=0;e<C;++e)for(let n=0;n<N;++n){const r=n-M,s=Math.max(0,Math.ceil(r/A)),i=Math.min(E,(I+r)/A);for(let a=0;a<$;++a){const o=a-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let c=0;for(let n=s;n<i;++n){const s=n*A-r;for(let r=l;r<u;++r){const i=U*t+W*n+V*r,a=y*(I-1-s)+w*(S-1-(r*F-o))+v*e;for(let t=0;t<T;++t)c+=b[i+G*t]*x[a+t]}}g[L*t+z*n+P*a+B*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Uw={kernelName:Et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;Zx([s,i],"conv3d");const u=Ji(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,w=new Pr(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=w.values,S=_(s.shape),C=_(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*S[0],n=t*w.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*w.strides[1],s=t*u.strideDepth-b;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*S[1];for(let t=0;t<u.outHeight;++t){const e=r+t*w.strides[2],n=t*u.strideHeight-y;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const s=i+t*C[1],o=a+r*S[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-x;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const i=s+t*C[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=v[a+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Ww={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;Zx([s,i],"conv3dBackpropFilterV2");const u=_(s.shape),c=_(i.shape),h=Ji(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=new Pr(h.filterShape,"float32"),y=x.values,[w,v,k,I]=x.strides,S=n.data.get(i.dataId).values,[C,N,$,T]=c,E=n.data.get(s.dataId).values,[R,A,F,M]=u,D=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((D-t)/d)),n=Math.min(h.outDepth,(h.inDepth+D-t)/d),r=t*w;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((L-s)/p)),a=Math.min(h.outHeight,(h.inHeight+L-s)/p),o=s*v+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*C;for(let m=e;m<n;++m){const e=(t+m*d-D)*A+h,n=m*N+b;for(let t=i;t<a;++t){const i=(s+t*p-L)*F+e,a=t*$+n;for(let t=l;t<u;++t){const e=t*T+a;g+=E[(r+t*f-O)*M+i+o]*S[e+c]}}}}y[m+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Vw={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;Zx([s],"conv3dBackpropInputV2");const u=_(s.shape),c=_(i.shape),h=Ji(l,i.shape,o,1,a),d=new Pr(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(s.dataId).values,[y,w,v,k]=u,I=n.data.get(i.dataId).values,[S,C,N,$]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:M,inHeight:D,inWidth:O,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:U,strideHeight:W,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,q=A-1-h.padInfo.left;for(let t=0;t<T;++t)for(let e=0;e<F;++e)for(let n=0;n<M;++n){const r=n-G,s=Math.max(0,Math.ceil(r/U)),i=Math.min(z,(E+r)/U);for(let a=0;a<D;++a){const o=a-H,l=Math.max(0,Math.ceil(o/W)),u=Math.min(P,(R+o)/W);for(let c=0;c<O;++c){const h=c-q,d=Math.max(0,Math.ceil(h/V)),T=Math.min(B,(A+h)/V);let F=0;for(let n=s;n<i;++n){const s=n*U-r;for(let r=l;r<u;++r){const i=r*W-o;for(let a=d;a<T;++a){const o=y*t+w*n+v*r+k*a,l=S*(E-1-s)+C*(R-1-i)+N*(A-1-(a*V-h))+$*e;for(let t=0;t<L;++t)F+=x[o+t]*I[l+t]}}}p[f*t+m*n+g*a+b*c+e]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Gw=ty(Ft,(t=>Math.cos(t))),Hw={kernelName:Ft,backendName:"cpu",kernelFunc:Gw},qw=ty(Mt,(t=>Math.cosh(t))),jw={kernelName:Mt,backendName:"cpu",kernelFunc:qw},Kw={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[m,g]=o,b=ti([f,m,g,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,v=_(s.shape),k=_(b.shape);for(let t=0;t<f;t++){const e=4*t,n=x[e],r=x[e+1],s=x[e+2],i=x[e+3],a=y[t];if(a>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+e*k[1]+t*k[0];b.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),x=c-h;for(let r=0;r<p;r++){let i=r+h*v[2]+n*v[1]+a*v[0];const u=w[i];i=r+m*v[2]+n*v[1]+a*v[0];const c=w[i];i=r+h*v[2]+s*v[1]+a*v[0];const d=w[i];i=r+m*v[2]+s*v[1]+a*v[0];const p=u+(c-u)*x,f=d+(w[i]-d)*x;i=r+l*k[2]+e*k[1]+t*k[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*v[2]+l*v[1]+a*v[0],i=r+n*k[2]+e*k[1]+t*k[0];b.values[i]=w[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Xw={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;Zx(s,"cumprod");const l=lo([i],s.shape.length);let u=s;null!=l&&(u=jy({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=co(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Jr(u.dtype,"int32"),d=z(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?1:p[n];else{const r=m(t,e-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=jy({inputs:{x:b},backend:n,attrs:{perm:uo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),t}return b}},Yw={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;Zx(s,"cumsum");const l=lo([i],s.shape.length);let u=s;null!=l&&(u=jy({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=co(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Jr(u.dtype,"int32"),d=P(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const r=m(t,e-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const t=jy({inputs:{x:b},backend:n,attrs:{perm:uo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),t}return b}},Zw={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=kw(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,t)}if(2===s.shape.length){const t=Iw(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Jw={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r;d("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,p=u*i,f=c/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(o*h*p*f);let b=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/i),r=e%i;for(let e=0;e<p;++e){const s=Math.floor(e/i),a=(r*i+e%i)*f;for(let e=0;e<f;++e){const r=e+a+c*(s+u*(n+l*t));g[b++]=m[r]}}}return n.makeTensorInfo([o,h,p,f],s.dtype,g)}};function Qw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;Zx([s,i],"depthwiseConv2DNative");const c=_(s.shape),h=_(i.shape);let p=l;null==p&&(p=[1,1]),d(ia(a,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`));const f=Zi(s.shape,i.shape,a,p,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=f,w=y.left,v=y.top,k=f.outChannels/f.inChannels,I=new Pr(f.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(i.dataId).values,N=I.values;for(let t=0;t<f.batchSize;++t){const e=t*c[0],n=t*I.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*I.strides[1],s=t*f.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*b;if(n<0||n>=f.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let t=0;t<f.outWidth;++t){const e=r+t*I.strides[2],n=t*f.strideWidth-w;for(let t=0;t<g;++t){const r=n+t*x;if(r<0||r>=f.inWidth)continue;const s=i+t*h[1],o=a+r*f.inChannels;let l=e,u=s;for(let t=0;t<f.inChannels;++t){const e=S[o+t];for(let t=0;t<k;++t)N[l+t]+=e*C[u+t];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const tv={kernelName:Pt,backendName:"cpu",kernelFunc:Qw},ev={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Zx([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Zi(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Pr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Pr(s.shape,s.dtype,w),k=n.data.get(i.dataId).values,I=new Pr(i.shape,i.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((x-t)/d)),n=Math.min(h.outHeight,(h.inHeight+x-t)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),i=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/y),l=a%y;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-x;for(let t=s;t<i;++t){const n=r+t*p-b;u+=v.get(l,e,n,o)*I.get(l,c,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},nv={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Zx([s,i],"depthwiseConv2DNativeBackpropInput");const h=_(s.shape),d=_(i.shape),p=Zi(c,i.shape,a,o,l,u,!0),f=new Pr(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(i.dataId).values,[S,C,N]=d,{batchSize:$,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:M,outHeight:D,outWidth:O,strideHeight:L,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,U=M/R;for(let t=0;t<$;++t)for(let e=0;e<R;++e)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/L)),i=Math.min(D,(T+r)/L);for(let a=0;a<F;++a){const o=a-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(O,(E+o)/z);let c=0;for(let n=s;n<i;++n){const s=n*L-r;for(let r=l;r<u;++r){const i=w*t+v*n+k*r,a=S*(T-1-s)+C*(E-1-(r*z-o))+N*e;for(let t=0;t<U;++t)c+=y[i+(e*U+t)]*I[a+t]}}m[g*t+b*n+x*a+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},rv={kernelName:Wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=g(r.shape),i=n.data.get(r.dataId).values,a=ti([s,s],r.dtype),o=a.values;for(let t=0;t<i.length;t++)o[t*s+t]=i[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},sv={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:$,outShape:T}=Ki(r.shape,s.shape,i,a,"NHWC",o),E=g(T),R=T.length,A=N(r.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<x;++e){const n=e*v-w.top;for(let i=0;i<y;++i){const a=i*k-w.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const i=n+e*C;if(i>=0&&i<f)for(let n=0;n<S;++n){const p=a+n*$;if(p>=0&&p<m){const a=W([t,i,p,o],c,_(r.shape)),f=W([e,n,o],d,_(s.shape)),m=u[a]+h[f];m>l&&(l=m)}}}A[W([t,e,i,o],R,_(T))]=l}}}return{dataId:l.write($r(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},iv={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=L(r.shape,u.data.get(r.dataId).values),h=L(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Ki(r.shape,s.shape,a,o,"NHWC",l);d(i.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const $=L(N,u.data.get(i.dataId).values),T=B(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<k;++e){const r=n+e*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<m){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=e,l=n)}}}T[o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write($r(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},av={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=L(r.shape,u.data.get(r.dataId).values),h=L(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Ki(r.shape,s.shape,a,o,"NHWC",l);d(i.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const $=L(N,u.data.get(i.dataId).values),T=B(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<k;++e){const r=n+e*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<m){const s=c[t][r][u][i]+h[e][n][i];s>a&&(a=s,o=r,l=u)}}}T[t][o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write($r(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ov=ly(((t,e)=>t*e)),lv=Ey(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),uv=Ty(Ue,ov,lv),cv={kernelName:Ue,backendName:"cpu",kernelFunc:uv};function hv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;let o;Zx(s,"sum"),o="bool"===s.dtype?Ny({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):sy({inputs:{x:s},backend:n});const l=o.shape.length,u=I(i,o.shape),c=lo(u,l);let h=u,d=o;null!=c&&(d=jy({inputs:{x:o},backend:n,attrs:{perm:c}}),h=co(h.length,l)),oo("sum",h,d.shape.length);const[p,f]=io(d.shape,h);let m=Iy(n,p,Jr(d.dtype,"int32"));const b=g(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<x.length;++t){const e=t*b;let n=0;for(let t=0;t<b;++t)n+=y[e+t];x[t]=n}if(a){const t=m;m=Dy({inputs:{x:m},backend:n,attrs:{shape:ao(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const dv={kernelName:Cn,backendName:"cpu",kernelFunc:hv},pv={kernelName:jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=qu(s,i.length);Ku(a.length,l,i);const{path:u,steps:c}=Xu(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=ju(p,l[e]);let s;Yu(t)?s=i[e]:(s=jy({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);b(s.shape,a)||(s=Dy({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=uv({inputs:{a:s,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=hv({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},fv={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;Zx([r,s],"eluGrad");const i=new Float32Array(g(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];i[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},mv=ly(((t,e)=>t===e?1:0)),gv=Ty(Zt,mv,null,"bool"),bv={kernelName:Zt,backendName:"cpu",kernelFunc:gv},xv=Au,yv=Fu,wv=Mu,vv=Du,kv=_u,Iv=Ou,Sv=ty(Yt,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+xv*n);return e*(1-((((Iv*r+kv)*r+vv)*r+wv)*r+yv)*r*Math.exp(-n*n))})),Cv={kernelName:Yt,backendName:"cpu",kernelFunc:Sv},Nv=gy((t=>Math.exp(t))),$v=ey(Jt,Nv,"float32"),Tv={kernelName:Jt,backendName:"cpu",kernelFunc:$v};function Ev(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(d(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),Dy({inputs:{x:s},backend:n,attrs:{shape:o}})}const Rv={kernelName:Qt,backendName:"cpu",kernelFunc:Ev},Av=gy((t=>Math.expm1(t))),Fv=ey(te,Av),Mv={kernelName:te,backendName:"cpu",kernelFunc:Fv},Dv=ly(((t,e)=>t/e)),_v=Ty(qt,Dv),Ov={kernelName:qt,backendName:"cpu",kernelFunc:_v},Lv=ly(((t,e)=>t-e)),zv=Ey(((t,e,n,r)=>({real:t-n,imag:e-r}))),Pv=Ty(Bn,Lv,zv),Bv={kernelName:Bn,backendName:"cpu",kernelFunc:Pv};function Uv(t,e,n){const r=t.shape,s=r[0],i=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=g(u),h=C("float32",c),d=C("float32",c);for(let t=0;t<s;t++){const r=yw({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),s=yw({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=vy({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=Wv(a,e,n),p=Lu(u,c);for(let e=0;e<i;e++){const n=Uu(p,e);h[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=vy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Wv(t,e,n){const r=g(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=Vv(i,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",s.real),e=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",Nr(r,"float32")),a=sy({inputs:{x:i},backend:n}),l=Ov.kernelFunc({inputs:{a:t,b:i},backend:n}),u=Ov.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=Gu(s*r,e,n),l=Uu(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Wu(r,i,a,s)}return r}(Lu(i,a),r,e);return zu(t)}var o}function Vv(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=Lu(t,e),a=n/2,o=Pu(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=vy({inputs:{real:h,imag:d},backend:s}),f=Bu(i),m=f.real,g=f.imag,b=[m.length],x=s.makeTensorInfo(b,"float32",m),y=s.makeTensorInfo(b,"float32",g),w=vy({inputs:{real:x,imag:y},backend:s}),v=Vv(l,u,a,r,s),k=v.real,I=v.imag,S=[k.length],C=s.makeTensorInfo(S,"float32",k),N=s.makeTensorInfo(S,"float32",I),$=vy({inputs:{real:C,imag:N},backend:s}),T=Vv(m,g,a,r,s),E=T.real,R=T.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),M=s.makeTensorInfo(A,"float32",R),D=vy({inputs:{real:F,imag:M},backend:s}),_=Vu(n,r),O=[_.real.length],L=s.makeTensorInfo(O,"float32",_.real),z=s.makeTensorInfo(O,"float32",_.imag),P=vy({inputs:{real:L,imag:z},backend:s}),B=uv({inputs:{a:P,b:D},backend:s}),U=Fy({inputs:{a:$,b:B},backend:s}),W=Pv({inputs:{a:$,b:B},backend:s}),V=Sy({inputs:{input:U},backend:s}),G=Sy({inputs:{input:W},backend:s}),H=Mw({inputs:{input:U},backend:s}),q=Mw({inputs:{input:W},backend:s}),j=_w({inputs:[V,G],backend:s,attrs:{axis:0}}),K=_w({inputs:[H,q],backend:s,attrs:{axis:0}}),X=s.data.get(j.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Gv={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=g(r.shape),i=r.shape[r.shape.length-1],a=Dy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Uv(a,!1,n),l=Dy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function Hv(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,a=i||F(s),o=N(a,g(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,a,o)}const qv={kernelName:ne,backendName:"cpu",kernelFunc:Hv},jv={kernelName:re,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=C(r.dtype,g(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let s=0;s<u;s++){const a=Math.round(l-t-1),o=e+n+r+s;let h=c[o];a>=0&&a<l&&(h=c[e+n+a*u+s]),i[o]=h}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Kv=gy((t=>Math.floor(t))),Xv=ey(se,Kv),Yv={kernelName:se,backendName:"cpu",kernelFunc:Xv},Zv=ly(((t,e)=>Math.floor(t/e))),Jv=Ty(ie,Zv,null,"int32"),Qv={kernelName:ie,backendName:"cpu",kernelFunc:Jv},tk={kernelName:tr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Lw({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const t=Dy({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Fy({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=Fy({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const t=Dy({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=wy(n,m,p,t,f),n.disposeIntermediateTensorInfo(t)}else m=wy(n,m,p,o,f);n.disposeIntermediateTensorInfo(t)}return m}},ek={kernelName:er,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Qw({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const t=m;m=Fy({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=wy(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function nk(t,e,n,r,s,i,a,o,l){const u=ti([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let e=0;e<s;e++){const i=t[n*s+e];c+=i*a[e],r.push(i)}if(c<0||c>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let t=0;t<i;t++)u.values[n*i+t]=e.get(...e.indexToLoc(c*i+t))}return u}const rk={kernelName:le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=g(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=Cu(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=nk(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,d.values)}};function sk(t,e,n){const r=ti(n,t.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=e.locToIndex([i,a]);s[2]=e.values[o];const l=t.locToIndex(s);0<=l&&l<t.values.length&&(r.values[n]=t.values[l])}return r}const ik={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r;Zx([s,i],"gatherV2");const l=I(a,s.shape)[0],u=n.data.get(i.dataId).values,c=s.shape[l];for(let t=0;t<u.length;++t){const e=u[t];d(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=g(i.shape),f=pc(s,i,l,h),m=Dy({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),b=Dy({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),x=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],y=n.bufferSync(b),w=sk(n.bufferSync(m),y,x);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(f.outputShape,w.dtype,w.values)}},ak=ly(((t,e)=>t>e?1:0)),ok=Ty(ue,ak,null,"bool"),lk={kernelName:ue,backendName:"cpu",kernelFunc:ok},uk=ly(((t,e)=>t>=e?1:0)),ck=Ty(ce,uk,null,"bool"),hk={kernelName:ce,backendName:"cpu",kernelFunc:ck},dk={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=g(r.shape),i=r.shape[r.shape.length-1],a=Dy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=Uv(a,!0,n),l=Dy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},pk=ty(fe,(t=>Number.isFinite(t)?1:0),"bool"),fk={kernelName:fe,backendName:"cpu",kernelFunc:pk},mk=ty(me,(t=>Math.abs(t)===1/0?1:0),"bool"),gk={kernelName:me,backendName:"cpu",kernelFunc:mk},bk=ty(ge,(t=>Number.isNaN(t)?1:0),"bool"),xk={kernelName:ge,backendName:"cpu",kernelFunc:bk},yk=ly(((t,e)=>t<e?1:0)),wk=Ty(xe,yk,null,"bool"),vk={kernelName:xe,backendName:"cpu",kernelFunc:wk},kk=ly(((t,e)=>t<=e?1:0)),Ik=Ty(ye,kk,null,"bool"),Sk={kernelName:ye,backendName:"cpu",kernelFunc:Ik};function Ck(t,e,n){const r=(e-t)/(n-1),s=P(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}const Nk={kernelName:we,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=Ck(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},$k=gy((t=>Math.log(t))),Tk=ey(ve,$k),Ek={kernelName:ve,backendName:"cpu",kernelFunc:Tk},Rk=ty(ke,(t=>Math.log1p(t))),Ak={kernelName:ke,backendName:"cpu",kernelFunc:Rk},Fk=ly(((t,e)=>t&&e)),Mk=Ty(Ie,Fk,null,"bool"),Dk={kernelName:Ie,backendName:"cpu",kernelFunc:Mk},_k=ty(Se,(t=>t?0:1),"bool"),Ok={kernelName:Se,backendName:"cpu",kernelFunc:_k},Lk=ly(((t,e)=>t||e)),zk=Ty(Ce,Lk,null,"bool"),Pk={kernelName:Ce,backendName:"cpu",kernelFunc:zk},Bk={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;Zx(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=g(s.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-i);const r=t-e+Math.min(e+i,c);let s=0;for(;n<=r;n++){const t=h[n];s+=t*t}return s}for(let t=0;t<d;t++){const e=f(t),n=h[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},Uk={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Zx(a,"LRNGrad");const h=g(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,b=new Float32Array(h),x=h;for(let t=0;t<x;t++){const e=t%d,n=t-e+Math.max(0,e-o),r=t-e+Math.min(d,e+o+1);let s=0;for(let t=n;t<r;t++)s+=Math.pow(f[t],2);s=u*s+l;for(let e=n;e<r;e++){let n=-2*u*c*f[e]*m[t]/s;t===e&&(n+=Math.pow(s,-c)),n*=p[t],b[e]+=n}}return n.makeTensorInfo(a.shape,s.dtype,b)}};function Wk(t,e,n,r){const s=C(r,g(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];(Number.isNaN(e)||e>i)&&(i=e)}s[n]=i}return s}function Vk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=I(i,l);let h=c;const d=lo(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=qy(p,l,s.dtype,d,t),h=co(h.length,u),l=t}Zx(s,"max"),oo("max",h,u);const[f,m]=io(l,h),b=Wk(p,g(m),f,s.dtype),x=o.write(b,f,s.dtype);let y=f;return a&&(y=ao(f,c)),{dataId:x,shape:y,dtype:s.dtype}}const Gk={kernelName:Te,backendName:"cpu",kernelFunc:Vk},Hk=ly(((t,e)=>Math.max(t,e))),qk=Ty(Ee,Hk),jk={kernelName:Ee,backendName:"cpu",kernelFunc:qk},Kk={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Zx(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;d(ia(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Xi(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))c=sy({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=_(s.shape),r=cw(t,s.shape,s.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},Xk={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Zx(s,"maxPool3d");const c=Yi(s.shape,i,a,1,o,l,u),h=dw(n.data.get(s.dataId).values,s.shape,s.dtype,_(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},Yk={kernelName:Me,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Zx([s,i],"maxPool3DGrad");const c=Yi(i.shape,a,o,1,l,u),h=function(t,e){const n=ti(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const x=b*r-d;let y=x;for(;y<0;)y+=a;const w=Math.min(e.inDepth,u+x);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let e=y;e<w;e+=a){const n=e-x;for(let r=d;r<v;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=t.get(m,e,r,i,g);o>=S&&(S=o,C=n*c*h+s*c+a)}}}n.set(C,m,b,r,s,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=x-1-c.padInfo.front,k=w-1-c.padInfo.left,I=y-1-c.padInfo.top,S=ti(i.shape,"float32"),C=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-v,a=r-I,o=s-k;let l=0;for(let n=0;n<x;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<y;s+=g){const i=(a+s)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=x*y*w-1-h.get(t,r,i,u,e)===n*y*w+s*w+a?1:0;0!==d&&(l+=C.get(t,r,i,u,e)*d)}}}S.set(l,t,n,r,s,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Zk={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;Zx([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Xi(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ti(d.outShape,o.dtype,hw(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ti(o.shape,"float32"),S=n.data.get(s.dataId).values,C=ti(s.shape,"float32",S);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-v;let a=0;for(let n=0;n<y;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=x){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*w-1-f.get(t,r,o,e)===n*w+s?1:0;0!==l&&(a+=C.get(t,r,o,e)*l)}}I.set(a,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Jk={kernelName:De,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Zx(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Xi(r.shape,s,i,[1,1],a),[h,d]=function(t,e,n,r,s){const i=cw(t,0,n,_(e),s,"max"),a=hw(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},Qk={kernelName:_e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=I(i,s.shape),l=g(io(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Ny({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=_v({inputs:{a:h,b:c},backend:n});u.push(d);const p=hv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},tI={kernelName:Oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Zx(s,"min");const o=I(i,s.shape);let l=o;const u=lo(l,s.shape.length);let c=s;null!=u&&(c=jy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=co(l.length,s.shape.length)),oo("min",l,c.shape.length);const[h,d]=io(c.shape,l),p=g(d),f=P(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];(Number.isNaN(r)||r<n)&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(a){const t=Dy({inputs:{x:b},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(b),t}return b}},eI=ly(((t,e)=>Math.min(t,e))),nI=Ty(Le,eI),rI={kernelName:Le,backendName:"cpu",kernelFunc:nI},sI={kernelName:ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:a}=r;Zx(s,"mirrorPad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=_(s.shape),f=g(o),m=o.length,b=_(o),x=C(s.dtype,f);for(let t=0;t<f;t++){let e=V(t,m,b);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=W(e,d,p);x[t]=h[n]}return{dataId:n.write(x,o,s.dtype),shape:o,dtype:s.dtype}}},iI=ly(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),aI=Ty(Pe,iI),oI={kernelName:Pe,backendName:"cpu",kernelFunc:aI};var lI=n(2948);function uI(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=I([o],s.shape),u=Vk({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=ao(u.shape,l),h=Dy({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Pv({inputs:{a:s,b:h},backend:n}),p=$v({inputs:{x:d},backend:n}),f=hv({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Dy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_v({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const cI={kernelName:Tn,backendName:"cpu",kernelFunc:uI},hI={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r;Zx(s,"multinomial");const l=o?s:uI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=P(g(d),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=lI.alea(a.toString()),s=t*i;for(let t=0;t<i;++t){const e=r();p[s+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[s+t]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function dI(t,e,n){const r=Nr(-1,n);return ov([],e,r,t,n)}const pI={kernelName:We,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Zx(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=dI(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},fI=$l,mI={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;Zx(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=fI(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gI=Tl,bI={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Zx(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=gI(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},xI=El,yI={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Zx(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=xI(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},wI=ly(((t,e)=>t!==e?1:0)),vI=Ty(Ve,wI,null,"bool"),kI={kernelName:Ve,backendName:"cpu",kernelFunc:vI},II={kernelName:Ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r;Zx(s,"oneHot");const l=g(s.shape),u=new Float32Array(l*i);u.fill(o);const c=n.data.get(s.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<i&&(u[t*i+c[t]]=a);return n.makeTensorInfo([...s.shape,i],"int32",u)}};function SI(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=Sy({inputs:{input:r},backend:n}),e=SI({inputs:{x:t},backend:n}),s=Mw({inputs:{input:r},backend:n}),i=SI({inputs:{x:s},backend:n}),a=vy({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return Hv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const CI={kernelName:Yn,backendName:"cpu",kernelFunc:SI},NI={kernelName:je,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=Sy({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=Mw({inputs:{input:s},backend:r}),a=SI({inputs:{x:i},backend:r}),o=vy({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return Hv({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function $I(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return Ev({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{p(i,t.shape,"All tensors passed to stack must have matching shapes"),d(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=_w({inputs:e.map((t=>{const e=Ev({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const TI={kernelName:Xe,backendName:"cpu",kernelFunc:$I},EI={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;Zx(s,"pad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,c=g(s.shape),h=s.shape.length,d=_(s.shape),p=g(o),f=o.length,m=_(o),b=C(s.dtype,p);0!==a&&b.fill(a);for(let t=0;t<c;t++)b[W(V(t,h,d).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},RI=ly(((t,e)=>Math.pow(t,e))),AI=Ty(Ze,RI),FI={kernelName:Ze,backendName:"cpu",kernelFunc:AI};function MI(t,e,n,r){const[s,i]=io(t,r),a=Jr(e,"int32"),o=P(g(s),a),l=g(i);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:s,outDtype:a}}const DI={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Zx(s,"prod");const o=s.shape.length,l=I(i,s.shape),u=lo(l,o);let c=l,h=s;const d=[];null!=u&&(h=jy({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=co(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=MI(h.shape,h.dtype,p,c);let b=m;return a&&(b=ao(m,l)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,g,f)}};function _I(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return P(0,r);const s=P(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return s}const OI={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:a}=n,o=_I(r,s,a,i);return e.makeTensorInfo([o.length],i,o)}},LI=ty(nn,(t=>1/t)),zI={kernelName:nn,backendName:"cpu",kernelFunc:LI},PI={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Zx(s,"resizeBilinear");const l=_(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,b=new Float32Array(g([h,u,c,f])),x=[i&&u>1?d-1:d,i&&c>1?p-1:p],y=[i&&u>1?u-1:u,i&&c>1?c-1:c];let w=0;const v=x[0]/y[0],k=x[1]/y[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=a?v*(e+.5)-.5:v*e;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=t*l[0]+r*l[1],u=t*l[0]+i*l[1];for(let t=0;t<c;t++){let e;e=a?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),r=e-n,i=Math.min(p-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],d=o+i*l[2],g=u+i*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],i=e+(m[d+t]-e)*r,a=i+(n+(m[g+t]-n)*r-i)*s;b[w++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",b)}},BI={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;Zx([i,s],"resizeBilinearGrad");const o=_(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(i.dataId).values;let w=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=e+r*o[1],a=e+s*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,u=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],b=a+r*o[2],v=d*u,k=d*s,I=l*u,S=l*s;for(let t=0;t<h;t++){const e=y[w++];f[p+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[b+t]+=e*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},UI={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Zx(s,"resizeNearestNeighbor");const l=_(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c],y=b[0]/x[0],w=b[1]/x[1];let v=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*l[1];for(let t=0;t<c;t++){const e=a?w*(t+.5):w*t;let n=Math.min(p-1,i?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[v++]=e}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},WI={kernelName:on,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;Zx([i,s],"resizeNearestNeighborGrad");const o=_(s.shape),l=_(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],v=1/y,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*y;if(t===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<S;t++){const e=t+b;if(e<0||e>=f)continue;const s=d+e*l[2],i=e*w;r===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}m[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},VI={kernelName:hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;Zx(s,"reverse");const a=s.shape.length,o=I(i,s.shape);if(0===a)return sy({inputs:{x:s},backend:n});const l=new Pr(s.shape,s.dtype),u=n.bufferSync(s);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=s.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},GI={kernelName:Jn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=C(r.dtype,g(r.shape)),[u,c,h,d]=r.shape,[p,f]=yu(a,c,h),m=Math.sin(s),b=Math.cos(s),x=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],g=o[2],y=o[1];let w=(g-p)*b-(y-f)*m,v=(g-p)*m+(y-f)*b;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<h&&v>=0&&v<c&&(k=x[e+v*(h*d)+w*d+a]),l[e+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},HI=ty(dn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),qI={kernelName:dn,backendName:"cpu",kernelFunc:HI},jI=gy((t=>1/Math.sqrt(t))),KI=ey(pn,jI),XI={kernelName:pn,backendName:"cpu",kernelFunc:KI};function YI(t,e,n,r,s,i,a,o,l,u){const c=[r/s,s],h=t.values,d=e.values;if(0===r)return ti(n,e.dtype);const p=ti(c,e.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p}const ZI={kernelName:fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tu(0,s,a),d=YI(n.bufferSync(s),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function JI(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<e?n=s+1:r=s;return r}function QI(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<=e?n=s+1:r=s;return r}const tS={kernelName:mn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:a}=r,o=function(t,e,n,r,s,i){const a=N("int32",n*s);for(let o=0;o<n;++o){const n=t.slice(o*r,(o+1)*r),l=o*s;for(let t=0;t<s;++t)a[l+t]="left"===i?JI(n,e[t+l]):QI(n,e[t+l])}return a}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}},eS={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;Zx([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=Jr(s.dtype,i.dtype),h=P(g(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:g(s.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?h[d++]=l[t]:h[d++]=u[t];return n.makeTensorInfo(s.shape,c,h)}},nS=Eu,rS=Ru,sS=ty(bn,(t=>t>=0?rS*t:nS*(Math.exp(t)-1))),iS={kernelName:bn,backendName:"cpu",kernelFunc:sS},aS=ty(vn,(t=>t<0?-1:t>0?1:0)),oS={kernelName:vn,backendName:"cpu",kernelFunc:aS},lS=ty(yn,(t=>Math.sin(t))),uS={kernelName:yn,backendName:"cpu",kernelFunc:lS},cS=ty(wn,(t=>Math.sinh(t))),hS={kernelName:wn,backendName:"cpu",kernelFunc:cS},dS=Math.log(1.1920928955078125e-7)+2,pS=ty(In,(t=>{const e=t>-dS,n=t<dS,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),fS={kernelName:In,backendName:"cpu",kernelFunc:pS},mS={kernelName:Nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;Zx([s],"spaceToBatchND");const o=g(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=EI.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=wu(u.shape,i,o,!1),h=vu(c.length,i.length,!1),d=ku(u.shape,i,o,!1),p=Dy({inputs:{x:u},backend:n,attrs:{shape:c}}),f=jy({inputs:{x:p},backend:n,attrs:{perm:h}}),m=Dy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function gS(t,e,n,r,s,i,a){const o=e[0],l=i[0],u=new Array(l),c=new Array(o),h=e[1];if(0===l){if(0!==o)throw new Error(Qu(o));return[N(n,0),[0,h],N(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h];if(n<0)throw new Error(tc(e,n));if(n>=l)throw new Error(ec(e,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&d){const e=t,n=r;for(let t=0;t<o;++t)c[t]=t;return[e,[o,h],n,u,c]}{const e=f[l-1],i=N(n,e*h),d=N(s,e),p=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*h],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)i[a*h+n]=t[e*h+n];d[a]=r[e],c[e]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];i[e*h+0]=t;for(let t=1;t<h;++t)i[e*h+t]=0;d[e]=a}return[i,[e,h],d,u,c]}}const bS={kernelName:En,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=gS(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function xS(t,e,n,r,s){const i=g(r),a=e[0],o=s.length,l=[];let u=1,c=-1;for(let t=0;t<o;++t){const e=s[t];if(-1===e){if(-1!==c)throw new Error(nc(c,t));c=t,l.push(1)}else{if(e<0)throw new Error(rc(t,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(i/u);if(u*t!==i)throw new Error(ic(r,l));l[c]=t}if(g(l)!==i)throw new Error(ac(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=N(n,a*o);for(let e=0;e<a;++e){let n=0;for(let r=0;r<h;++r)n+=t[e*h+r]*d[r];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/p[t]),n%=p[t]}return[f,[a,o],l]}const yS={kernelName:Rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=xS(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};function wS(t,e,n,r,s,i=!1,a=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const d=N(n,h.reduce(((t,e)=>t*e),1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let e=0;if(f<o){if(e=s[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(uc(g,c));g>m&&d.fill(a,m*u,g*u);for(let e=p;e<f;++e){const n=r[e];if(n<0||n>=l[0])throw new Error(cc(e,r[e],l[0]));for(let e=0;e<u;e++)d[g*u+e]+=t[n*u+e]}if(i)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<c&&d.fill(a,m*u,c*u),[d,h]}const vS={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wS(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},kS={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wS(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},IS={kernelName:Mn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Tu(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(i.dtype){case"bool":m=YI(f,n.bufferSync(i),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":m=YI(f,n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":m=YI(f,n.bufferSync(i),o,d,c,u,l,h,Rr(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},SS={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=I(a,s.shape)[0],l=Ju(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const r=yw({inputs:{x:s},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r}))}},CS=gy((t=>Math.sqrt(t))),NS=ty(Sn,(t=>Math.sqrt(t))),$S={kernelName:Sn,backendName:"cpu",kernelFunc:NS},TS={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Zx(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ES=ly(((t,e)=>{const n=t-e;return n*n})),RS=Ty(Dn,ES),AS={kernelName:Dn,backendName:"cpu",kernelFunc:RS},FS=ty(Zn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),MS={kernelName:Zn,backendName:"cpu",kernelFunc:FS};function DS(t,e,n,r){const s=ti(t,e.dtype);for(let t=0;t<s.size;t++){const i=s.indexToLoc(t),a=new Array(i.length);for(let t=0;t<a.length;t++)a[t]=i[t]*n[t]+r[t];s.set(e.get(...a),...i)}return s}const _S={kernelName:On,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;Zx(s,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ti(s.shape,i,a,o,l,u,c,h,p);let k;if(g)k=Dy({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){d(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=mi(y,w,v),e=yw({inputs:{x:s},backend:n,attrs:{begin:y,size:t}});k=Dy({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else{const t=DS(f,n.bufferSync(s),v,y);k=n.makeTensorInfo(m,t.dtype,t.values)}return k}};class OS{constructor(t,e,n,r,s,i){this.separator=Er(t),this.nGramWidths=e,this.leftPad=Er(n),this.rightPad=Er(r),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),c=i-(l+u),h=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<c;++e)d+=t[h+e].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<c-1;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;s<r;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,i=N("int32",r);if(0===n||0===r){const t=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[t,i]}i[0]=0;for(let t=1;t<=s;++t){const n=e[t]-e[t-1];let r=0;this.nGramWidths.forEach((t=>{r+=this.getNumNGrams(n,t)})),this.preserveShort&&n>0&&0===r&&(r=1),i[t]=i[t-1]+r}const a=new Array(i[s]);for(let n=0;n<s;++n){const r=e[n];let s=i[n];if(this.nGramWidths.forEach((i=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,i);this.createNGrams(t,r,a,s,l,i),s+=l})),this.preserveShort&&s===i[n]){const i=e[n+1]-e[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(t,r,a,s,l,o)}}return[a,i]}}function LS(t,e,n,r,s,i,a,o){return new OS(n,r,s,i,a,o).compute(t,e)}const zS={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=LS(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function PS(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let i=t.indexOf(s);for(;-1!==i;){const e=t.subarray(0,i);n&&0===e.length||r.push(e),i=(t=t.subarray(i+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let i=0;i<t.length+1;i++)if(i===t.length||-1!==e.indexOf(t[i])){const e=t.subarray(s,i);n&&0===e.length||r.push(e),s=i+1}}function BS(t,e,n){const r=t.length,s=[];let i=0,a=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;PS(t[l],e,n,s);const u=s.length-r;o[l]=u,i+=u,a=Math.max(a,u)}const l=N("int32",2*i),u=new Array(i),c=[r,a];let h=0;for(let t=0;t<r;++t)for(let e=0;e<o[t];++e)l[2*h]=t,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,c]}const US={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=BS(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function WS(t,e){const n=N("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Cr(t[r]).modulo(e).getLowBitsUnsigned();return n}const VS={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=WS(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",a)}},GS=ty(Un,(t=>Math.tan(t))),HS={kernelName:Un,backendName:"cpu",kernelFunc:GS},qS=ty(Wn,(t=>Math.tanh(t)));function jS(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=ti(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r}const KS=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function XS(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=e-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2);XS(t,e,Math.max(n,Math.floor(e-i*o/s+l)),Math.min(r,Math.floor(e+(s-i)*o/s+l)))}const s=t[e];let i=n,a=r;for(h(t,n,e),KS(t[r],s)>0&&h(t,n,r);i<a;){for(h(t,i,a),i++,a--;KS(t[i],s)<0;)i+=1;for(;KS(t[a],s)>0;)a-=1}0===KS(t[n],s)?h(t,n,a):(a+=1,h(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function YS(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=C(n,a*r),u=C("int32",a*r);for(let e=0;e<a;e++){const n=e*o,i=t.subarray(n,n+o);let a=new Array(i.length);i.forEach(((t,e)=>a[e]={value:t,index:e})),r<a.length&&(XS(a,r),a=a.slice(0,r)),s&&a.sort(KS);const c=e*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let t=0;t<r;t++)h[t]=a[t].value,d[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[ti(c,n,l),ti(c,"int32",u)]}const ZS={kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],b=[c,f,m,p],x=_(s.shape),y=x[0],w=x[1],v=x[2],k=C(s.dtype,g(b));k.fill(l);const I=r.data.get(s.dataId).values,S=r.data.get(i.dataId).values;for(let t=0;t<c;++t){const e=1===i.shape[0]?S:S.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let i;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const c=(e[0]*r+e[1]*n+e[2])/u,p=(e[3]*r+e[4]*n+e[5])/u,f=JS(c,d,o),m=JS(p,h,o);switch(a){case"nearest":i=tC(I,h,d,y,w,v,t,m,f,s,l);break;case"bilinear":i=eC(I,h,d,y,w,v,t,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}k[t*y+n*w+r*v+s]=i}return r.makeTensorInfo(b,s.dtype,k)}return{dataId:r.write(k,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function JS(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return u(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return u(0,n,e-1)}(t,e);case"nearest":return function(t,e){return u(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function QS(t,e,n,r,s,i,a,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*s+l*i+u]:c}function tC(t,e,n,r,s,i,a,o,l,u,c){return QS(t,e,n,r,s,i,a,Math.round(o),Math.round(l),u,c)}function eC(t,e,n,r,s,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*QS(t,e,n,r,s,i,a,h,d,u,c)+(l-d)*QS(t,e,n,r,s,i,a,h,f,u,c))+(o-h)*((f-l)*QS(t,e,n,r,s,i,a,p,d,u,c)+(l-d)*QS(t,e,n,r,s,i,a,p,f,u,c))}function nC(t,e,n,r){const s=I(e,n)[0],i=[1,n[0],1];for(let t=0;t<s;t++)i[0]*=n[t];i[1]=n[s];for(let t=s+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[s]),l=new Pr(i,r,t),u=[],c=1===i[0]&&1===i[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new Pr(h,r);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,t,r),n,e,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const rC={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r;Zx(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let c=i;for(let t=0;t<u;++t){const e=Ev({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<a;++t){const e=Nr(t,"int32"),r=n.makeTensorInfo([],"int32",e),i=gv({inputs:{a:r,b:c},backend:n}),a=Ny({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=uv({inputs:{a,b:s},backend:n}),h=hv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(i),l.push(a),l.push(u),l.push(h)}const h=$I({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},sC=[zy,By,Wy,Gy,My,Hy,Xy,Yy,Zy,Jy,tw,nw,sw,ow,uw,pw,fw,mw,gw,Ly,bw,vw,Sw,Cw,$y,Tw,Rw,ky,Aw,Ow,zw,Pw,Bw,Uw,Ww,Vw,Hw,jw,Kw,Xw,Yw,Zw,Jw,tv,ev,nv,rv,sv,iv,av,pv,ry,fv,bv,Cv,Tv,Rv,Mv,Gv,qv,jv,Yv,Qv,tk,ek,rk,ik,lk,hk,iy,dk,Dw,fk,gk,xk,oy,vk,Sk,Nk,Ek,Ak,Dk,Ok,Pk,Bk,Uk,Gk,jk,Kk,Xk,Yk,Zk,Jk,Qk,tI,rI,sI,oI,hI,cv,pI,mI,bI,yI,kI,II,NI,TI,EI,FI,hy,DI,OI,Cy,Ov,zI,py,my,_y,PI,BI,UI,WI,VI,GI,qI,XI,ZI,tS,eS,iS,yy,oS,uS,hS,ww,cI,fS,mS,bS,yS,vS,kS,IS,SS,$S,TS,AS,MS,_S,zS,US,VS,Bv,dv,HS,{kernelName:Wn,backendName:"cpu",kernelFunc:qS},{kernelName:Vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;Zx(s,"tile");const a=jS(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r;Zx(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=YS(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},ZS,Ky,{kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;Zx(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=nC(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==i&&(l[u++]=s.shape[t]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let t=0;t<d.length;t++){c[i]=t;const e=yw({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[t]=Dy({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},rC,CI];for(const t of sC)ur(t);const iC={},aC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oC(t,e){if(!(t in iC)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete iC[t]}),!1),1===t?n.getContext("webgl",aC)||n.getContext("experimental-webgl",aC):n.getContext("webgl2",aC)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;iC[t]=n}const n=iC[t];return null==n||n.isContextLost()?(delete iC[t],oC(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),iC[t])}var lC,uC,cC;function hC(t,e){return[e,t]}function dC(t){const e=g(t);return y(Math.ceil(e/4))}function pC(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function fC(t,e){const n=t;let r,s,i,a,o,l,u,c,h,d;return 2===j().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function mC(t,e){const n=e();return j().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function gC(t){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function bC(t,e){return NC(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(lC||(lC={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(uC||(uC={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(cC||(cC={}));const xC=/ERROR: [0-9]+:([0-9]+):/g;function yC(t,e){const n=xC.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map(((t,e)=>w((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${w(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function wC(t,e){if(mC(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function vC(t,e,n,r,s,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(mC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),mC(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,i,a))),mC(t,(()=>t.enableVertexAttribArray(o))),!0)}function kC(t,e,n,r){mC(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),mC(t,(()=>t.activeTexture(t.TEXTURE0+n))),mC(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),mC(t,(()=>t.uniform1i(n,r)))}function IC(t,e,n){mC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),mC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function SC(t,e){mC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),mC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function CC(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function NC(t,e,n){const r=mC(t,(()=>e()));if(null==r)throw new Error(n);return r}function $C(t,e=2){return g(t.slice(0,t.length-e))}function TC(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function EC(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[$C(t),...TC(t)]),e}function RC(t){return t%2==0}function AC(t,e){if(b(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(RC(n)&&RC(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&RC(t[0])&&RC(e[0])}let FC,MC;function DC(t,e){return null!=t.getExtension(e)}function _C(t){try{if(null!=oC(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function OC(t){const e=fC(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function LC(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&d("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const zC=j();function PC(){let t,e,n,r,s,i,a,o,l,u;return 2===j().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function BC(t,e,n="index"){const r=_(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function UC(t,e,n="index"){const r=_(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`)).join("")}function WC(t){const e=_(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}zC.registerFlag("HAS_WEBGL",(()=>zC.getNumber("WEBGL_VERSION")>0)),zC.registerFlag("WEBGL_VERSION",(()=>_C(2)?2:_C(1)?1:0)),zC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),zC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===zC.get("WEBGL_VERSION"))),zC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),zC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),zC.registerFlag("WEBGL_PACK",(()=>zC.getBool("HAS_WEBGL"))),zC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_CLIP",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_PACK_REDUCE",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_CONV_IM2COL",(()=>zC.getBool("WEBGL_PACK"))),zC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==FC){const e=oC(t);FC=e.getParameter(e.MAX_TEXTURE_SIZE)}return FC}(zC.getNumber("WEBGL_VERSION")))),zC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==MC){const e=oC(t);MC=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MC)}(zC.getNumber("WEBGL_VERSION")))),zC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=zC.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=oC(t);return e=DC(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:DC(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),zC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>zC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!cs())),zC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=oC(t);if(1===t){if(!DC(e,"OES_texture_float"))return!1}else if(!DC(e,"EXT_color_buffer_float"))return!1;return OC(e)}(zC.getNumber("WEBGL_VERSION")))),zC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!zC.getBool("WEBGL_FORCE_F16_TEXTURES")&&zC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),zC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=oC(t);if(1!==t){if(DC(e,"EXT_color_buffer_float"))return OC(e);const t="EXT_color_buffer_half_float";if(DC(e,t)){const n=e.getExtension(t);return function(t,e){const n=fC(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!DC(e,"OES_texture_float")&&!!DC(e,"WEBGL_color_buffer_float")&&OC(e)}(zC.getNumber("WEBGL_VERSION")))),zC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=zC.getNumber("WEBGL_VERSION"))&&null!=oC(t).fenceSync;var t})),zC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>zC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),zC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),zC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>cs()?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)})),zC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),zC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),zC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),zC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const VC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:GC}=r;function HC(t,e,n){const r=[];if(t.forEach((t=>{const e=g(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=eN(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=t.map((t=>function(t,e,n=!1,r){let s="";s+=n?jC(t,r):qC(t,r);const i=t.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(s+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=GC(t.shapeInfo.logicalShape,e.logicalShape),l=tN(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let p="return outputValue;";const f=1===g(t.shapeInfo.logicalShape),m=1===g(e.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&b(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=tN(l),c=GC(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),s}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=e.texShape,o=PC(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${KC}\n    ${XC}\n    ${YC}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(b(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),i=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),i=s*Math.ceil(t[t.length-2]/2);let a=i,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return b(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${UC(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=BC(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${UC(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=BC(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=BC(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=BC(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=ZC),[h,l,c,s,u,i,n.userCode].join("\n")}function qC(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=t.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=JC(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${QC(t)}\n      }\n    `;const s=t.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=JC(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape;if(null!=i&&b(n,i)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=S(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${qC(nN(t,l),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${rN(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${QC(t)}\n      }\n    `;const u=i[0],c=i[1],h=JC(r);return 1===c?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=S(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${qC(nN(t,u),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${rN(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${QC(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===i&&null==p)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=JC(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${i} + col * ${a} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=S(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${qC(nN(t,l),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${rN(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${QC(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=JC(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=S(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${qC(nN(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${rN(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${QC(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${JC(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=S(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${qC(nN(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${rN(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${QC(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${JC(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jC(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${PC().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=PC();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=i[0],o=i[1],l=PC();if(null!=i&&b(n,i))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${jC(nN(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${rN(i,r)});\n        }\n      `}const o=PC();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=PC();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=t.shapeInfo.logicalShape,a=i.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let t=2;t<a-1;t++)p=`int b${t}, `+p,d*=i[a-t-1],f=`b${t} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const KC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",XC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function JC(t){return`offset${t}`}function QC(t){const e=t.name,n=g(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function tN(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function eN(t,e,n){const{newShape:r,keptDims:s}=S(e),i=e.length,a=t&&3===i&&1===e[0],o=a?e.slice(1):r,l=!t&&i>1&&!b(e,n)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:s}}function nN(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function rN(t,e){return e.map((e=>t[e])).join(", ")}function sN(t,e,n){const r={},s={},i={},a=[];let o,l,u,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),1===j().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let a=0;a<e.variableNames.length;a++){const o=e.variableNames[a];r[o]=t.getUniformLocation(n,o,d),r[`offset${o}`]=t.getUniformLocation(n,`offset${o}`,d),e.enableShapeUniforms&&(s[`${o}Shape`]=t.getUniformLocation(n,`${o}Shape`,d),i[`${o}TexShape`]=t.getUniformLocation(n,`${o}TexShape`,d))}return e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",d),u=t.getUniformLocation(n,"outShapeStrides",d),l=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach(((e,r)=>{a[r]=t.getUniformLocation(n,e.name,d)})),{uniformLocations:r,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function iN(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!b(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!b(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function aN(t){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class oN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=lC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=PC();this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UC(["r","c","d"],t):BC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class lN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=lC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=PC();this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UC(["r","c","d"],t):BC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class uN{constructor(t){this.variableNames=["A"],this.outTexUsage=uC.DOWNLOAD;const e=PC();this.outputShape=t,this.userCode=`\n      ${VC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class cN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=uC.DOWNLOAD;const e=PC();this.outputShape=t,this.userCode=`\n      ${VC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class hN{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=PC();this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WC(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class dN{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=PC();this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let s=0;s<=1;s++){const i=2*e+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WC(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function pN(t,e,n,r,s,i){!function(t,e){const n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return NC(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return mC(t,(()=>t.bindTexture(o,a))),mC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),mC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),mC(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),mC(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===j().getNumber("WEBGL_VERSION")?mC(t,(()=>t.texImage2D(o,0,r,e,n,0,s,i,null))):mC(t,(()=>t.texStorage2D(o,1,r,e,n))),mC(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:a,texShape:[n,e]}}function fN(t){return t.internalFormatFloat}function mN(t){return t.internalFormatHalfFloat}function gN(t){return t.downloadTextureFormat}function bN(t){return t.internalFormatPackedFloat}function xN(t){return t.internalFormatPackedHalfFloat}class yN{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=j().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){iC[t]=e}(e,t)):this.gl=oC(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===j().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=bC(this.gl,t),DC(this.gl,e))this.textureHalfFloatExtension=bC(this.gl,e);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),DC(this.gl,r))this.colorBufferHalfFloatExtension=bC(this.gl,r);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",DC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!DC(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=NC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return mC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),mC(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=NC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return mC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),mC(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return NC(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=fC(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;mC(t,(()=>t.finish())),mC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),mC(t,(()=>t.deleteFramebuffer(this.framebuffer))),mC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),mC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),mC(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=hC(e,n);return pN(t,s,i,fN(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=hC(e,n);return pN(t,s,i,mN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=hC(e,n);return pN(t,s,i,gN(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){mC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===j().getNumber("WEBGL_VERSION")?mC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):mC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===j().getNumber("WEBGL_VERSION")?mC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):mC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),mC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let a,o,l;mC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(s),2===j().getNumber("WEBGL_VERSION")?mC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,a))):mC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),mC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=pC(e,n);return pN(t,s,i,xN(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=pC(e,n);return pN(t,s,i,bN(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(SC(this.gl,this.framebuffer),this.outputTexture=null),mC(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=hC(e,n),a=new Uint8Array(e*n*4);return mC(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=pC(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();mC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return mC(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),mC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),mC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return mC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=PC();return function(t,e){const n=NC(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(mC(t,(()=>t.shaderSource(n,e))),mC(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return NC(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return mC(e,(()=>e.attachShader(n,this.vertexShader))),mC(e,(()=>e.attachShader(n,t))),function(t,e){if(mC(t,(()=>t.linkProgram(e))),!j().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&wC(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return mC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),vC(t,e,"clipSpacePos",n,3,20,0)&&vC(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&mC(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&wC(this.gl,this.program),mC(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return NC(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),mC(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),kC(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=pC(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&wC(this.gl,this.program),CC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),mC(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=bC(this.gl,2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await v((()=>this.disposed||this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||v((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),IC(this.gl,t,this.framebuffer),this.debug&&CC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(IC(this.gl,this.outputTexture,this.framebuffer),this.debug&&CC(this.gl)):SC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;IC(r,t,this.framebuffer),this.debug&&CC(r),this.outputTexture=t,mC(r,(()=>r.viewport(0,0,e,n))),mC(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),mC(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:wN,bincountImpl:vN,bincountReduceImpl:kN,ceilImpl:IN,concatImpl:SN,equalImpl:CN,expImpl:NN,expm1Impl:$N,floorImpl:TN,gatherNdImpl:EN,gatherV2Impl:RN,greaterImpl:AN,greaterEqualImpl:FN,lessImpl:MN,lessEqualImpl:DN,linSpaceImpl:_N,logImpl:ON,maxImpl:LN,maximumImpl:zN,minimumImpl:PN,multiplyImpl:BN,negImpl:UN,notEqualImpl:WN,prodImpl:VN,rangeImpl:GN,rsqrtImpl:HN,scatterImpl:qN,sigmoidImpl:jN,simpleAbsImpl:KN,sliceImpl:XN,sparseFillEmptyRowsImpl:YN,sparseReshapeImpl:ZN,sparseSegmentReductionImpl:JN,sqrtImpl:QN,stridedSliceImpl:t$,stringNGramsImpl:e$,stringSplitImpl:n$,stringToHashBucketFastImpl:r$,subImpl:s$,tileImpl:i$,topKImpl:a$,transposeImpl:o$,uniqueImpl:l$}=s;function u$(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function c$(t,e){return 1===e?[t]:u$(t,e)}class h${constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=aN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=c$("rc",this.rank),e=tN(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class d${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map((t=>`${e}[${t}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let t=n-3;t>=0;--t)s[t]=`(${s[t+1]} * ${r[t+1]})`;return s}(t.map(((t,e)=>e)),e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${r[s]}`:`index -= ${t[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):BC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WC(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class p${constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=m$(e,n),s=g$(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=f$(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===cC.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===cC.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===cC.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===cC.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===cC.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=m$(n,r),i=g$(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=f$(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=j().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function f$(t,e,n,r,s){const i=function(t,e){switch(t){case cC.PACKED_2X2_FLOAT32:return bN(e);case cC.PACKED_2X2_FLOAT16:return xN(e);case cC.UNPACKED_FLOAT32:return fN(e);case cC.UNPACKED_FLOAT16:return mN(e);case cC.PACKED_4X1_UNSIGNED_BYTE:return gN(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(s){const[e,n]=pC(t[0],t[1]);a=e*n}else{const[e,n]=hC(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function m$(t,e){if(t===uC.UPLOAD)return cC.PACKED_2X2_FLOAT32;if(t===uC.RENDER||null==t)return function(t){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?cC.PACKED_2X2_FLOAT32:cC.UNPACKED_FLOAT32:t?cC.PACKED_2X2_FLOAT16:cC.UNPACKED_FLOAT16}(e);if(t===uC.DOWNLOAD||t===uC.PIXELS)return cC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function g$(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class b${constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const x$="return abs(x);",y$="return x;";class w${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class v${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length);const e=t.length,n=c$("rc",e),r=tN(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const k$=gc,I$={},S$=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class C$ extends a{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof yN)e=t;else{const n=oC(j().getNumber("WEBGL_VERSION"),t);e=new yN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=oC(j().getNumber("WEBGL_VERSION"));e=new yN(t),this.binaryCache=((n=j().getNumber("WEBGL_VERSION"))in I$||(I$[n]={}),I$[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new p$(this.gpgpu),this.numMBBeforeWarning=null==j().global.screen?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,Mi())}nextDataId(){return C$.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:uC.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(j().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:uC.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new w$(a,y$):new b$(a,y$);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Tr()),c="complex64"===r?Lu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Tr()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=s){let e;e=o?new w$(r,y$):new b$(r,y$);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===j().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&j().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,...dC(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Lu(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=g(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const t=this.gpgpu.gl;mC(t,(()=>t.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Mi().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new w$(s,y$):new b$(s,y$);const r=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:a}],a),i=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),i}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),c=Mi().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Rr(t)));return ti(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ti(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!gC(n)){if(j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=g(e);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...dC(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=j().getBool("WEBGL_PACK")&&!0===r,a=i?EC(e):e,o=i?new cN(a):new uN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=m(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=m(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Tr(),endMs:null}}endTimer(t){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Tr(),t)}async getQueryTime(t){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=S$){return j().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&g(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){nr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return k$(t.shape,e)}packedUnaryOp(t,e,n){const r=new w$(t.shape,e),s=this.compileAndRun(r,[t],n);return Mi().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=KN(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,x$,t.dtype);const e=new b$(t.shape,x$),n=this.compileAndRun(e,[t]);return Mi().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&R(n[0])){const s=n.map((t=>Er(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return Mi().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new v$(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new h$(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[$C(t.shape),...TC(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[$C(e),...TC(e)],i=new d$(s,n),a=[n],o=this.runWebGLProgram(i,[r],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:s,dtype:i}=n;null!=e&&d(g(s)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=EC(s);let o;o=r?new lN(a):new oN(a);const l=[null!=e?e:dC(a)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:t}],i,l,!0,e).dataId}}runWebGLProgram(t,e,n,r,s=!1,i){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===lC.DENSE){const e=null!=i?i:dC(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===g(a.shape))return o.values=C(a.dtype,0),a;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&g(e.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!AC(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),l.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach((e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const i=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=eN(t.packedInputs,e.shape,i);let u="",c="",h="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=_(o);h=`${t[0]===i[1]}_${t[t.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&b(e.shape,i),f=1===g(e.shape),m=ci(e.shape,n.shape),x=!t.packedInputs&&d===n.shape.length&&b(i,n.texData.texShape),y=t.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${x}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s+`${j().getNumber("WEBGL_VERSION")}`,i}(t,u,c),d=this.getAndSaveBinary(h,(()=>function(t,e,n,r){const s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=s.map((t=>t.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=HC(s,a,e),l=function(t,e){const n=NC(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(mC(t,(()=>t.shaderSource(n,e))),mC(t,(()=>t.compileShader(n))),j().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw yC(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);return j().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},sN(t,e,u))}(this.gpgpu,t,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||function(t,e,n,r,s){e.program.enableShapeUniforms||(iN(e.inShapeInfos,n),iN([e.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):t.setOutputMatrixTexture(i.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===j().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`],o=e.inShapesLocations[`${s}Shape`],l=e.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=eN(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(o,new Int32Array(r));break;case 2:t.gl.uniform2iv(o,new Int32Array(r));break;case 3:t.gl.uniform3iv(o,new Int32Array(r));break;case 4:t.gl.uniform4iv(o,new Int32Array(r))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(g(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,i,r)}));const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=_(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach(((n,r)=>{const i=e.customUniformLocations[r],a=s[r];if("float"===n.type)t.gl.uniform1fv(i,a);else if("vec2"===n.type)t.gl.uniform2fv(i,a);else if("vec3"===n.type)t.gl.uniform3fv(i,a);else if("vec4"===n.type)t.gl.uniform4fv(i,a);else if("int"===n.type)t.gl.uniform1iv(i,a);else if("ivec2"===n.type)t.gl.uniform2iv(i,a);else if("ivec3"===n.type)t.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(i,a)}})),t.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=j().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Tr();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=_i((()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=j().getBool("DEBUG");j().set("DEBUG",!1);const e=this.abs(Ui(1e-8)).dataSync()[0];if(j().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=Tr());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?c(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=S(t);t=e.newShape}let r=g(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=$C(t);let n=2,s=2;return t.length&&([n,s]=TC(t)),r=e*(n/2)*(s/2),y(r).map((t=>2*t))}return y(r)}(n,o),e.texShape=h),null!=s){const t=EC(n);let i,a=h[1],c=h[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,c]=pC(h[0],h[1])),i=o?new dN(t,d):new hN(t,d);const p=d?[c,a]:h,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?uC.PIXELS:uC.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,c,s);const g=[[c,a]],b=!0,x=this.runWebGLProgram(i,[f],r,g,b),y=this.texData.get(x.dataId);e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(e.texture=y.texture,e.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Tr()-u)}else{const t=this.acquireTexture(h,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*E(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(t){throw t}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await fu(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw yC(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=sN(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=s,t.inShapesLocations=i,t.inTexShapesLocations=a,t.outShapeLocation=o,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}}C$.nextDataId=0,hs()&&zi("webgl",(()=>new C$),2);class N${constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=di(e,n),this.enableShapeUniforms=aN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class $${constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=di(e,n);const s=this.outputShape.length;this.enableShapeUniforms=aN(s);let i="";if(r)if(0===s||1===g(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${tN(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=c$("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function T$(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const E$={kernelName:he,backendName:"webgl",kernelFunc:T$};function R$(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=T$({inputs:{x:r},backend:n}),l=T$({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const A$={kernelName:It,backendName:"webgl",kernelFunc:R$},F$="return (a < 0.) ? b * a : a;",M$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",D$={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,a=n.makeTensorInfo([],"float32",Nr(i,"float32")),o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $$(M$,s.shape,a.shape):new N$(F$,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},_$="return (a < 0.) ? b * a : a;",O$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",L$={kernelName:Je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $$(O$,r.shape,s.shape):new N$(_$,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}};function z$({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new w$(a.shape,e):new b$(a.shape,t),o.runWebGLProgram(u,[a],l)}}function P$({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new N$(t,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Jr(n.dtype,r.dtype))})),i=R$({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Jr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const t=c.texData.get(l.dataId).values,e=c.texData.get(u.dataId).values,n="string"===l.dtype?fc(t):t,r="string"===l.dtype?fc(e):e,[i,a]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=i,o}let d;return d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new $$(e,l.shape,u.shape,n):new N$(t,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function B$(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?O$:_$;if("leakyrelu"===t)return e?M$:F$;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class U${constructor(t,e,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=aN(this.outputShape.length);const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class W${constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=di(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const V$="return a * b;";function G$(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=Jr(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new W$("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new W$("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=R$({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,o]=BN(r.shape,s.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $$(V$,r.shape,s.shape):new N$(V$,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const H$={kernelName:Ue,backendName:"webgl",kernelFunc:G$};function q$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=n,o=g(s.shape),l=k(i,o),u=g(l);d(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||AC(s.shape,l)||null!==c.texture&&AC(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[$C(t.shape),...TC(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[$C(e),...TC(e)],a=new d$(i,r),o=[r],l=n.runWebGLProgram(a,[s],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(s,l,a)}const j$={kernelName:sn,backendName:"webgl",kernelFunc:q$};class K${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${x(t)?t.toPrecision(2):t}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class X${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function Y$(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=xu(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new K$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new K$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new X$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class Z${constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=tN(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class J${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=tN(this.rank),s=u$("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Q$(t,e,n){const r=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J$(t.shape,e):new Z$(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function tT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;return function(t,e,n,r){const s=e,i=t.shape.length,a=I(s,t.shape);let o=a;const l=lo(o,i),u=null!=l;let c=t;u&&(c=Q$(t,l,r),o=co(o.length,i)),oo("sum",o,i);const[h,d]=io(c.shape,o);let p=h;n&&(p=ao(h,a));const f=g(d),m=q$({inputs:{x:c},attrs:{shape:[g(t.shape)/f,f]},backend:r}),b=Y$(m,Qr(t.dtype),"sum",r),x=q$({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(c),x}(s,i,a,n)}const eT={kernelName:Cn,backendName:"webgl",kernelFunc:tT};function nT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=s.shape[i[t]];let u;if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,e=o$(t,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype),a.texData.get(u.dataId).values=e}else u=Q$(s,i,a);return u}const rT={kernelName:qn,backendName:"webgl",kernelFunc:nT};function sT({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],p=r?e.shape[c-1]:e.shape[c-2],f=n?t.shape[u-1]:t.shape[u-2],m=r?e.shape[c-2]:e.shape[c-1],b=t.shape.slice(0,-2),x=e.shape.slice(0,-2),y=g(b),w=g(x),v=di(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);d(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,h,f]:[y,f,h],I=r?[w,m,p]:[w,p,m],S=q$({inputs:{x:t},backend:s,attrs:{shape:k}}),C=q$({inputs:{x:e},backend:s,attrs:{shape:I}}),N=[S,C],$=Math.max(y,w),T=n?S.shape[1]:S.shape[2],E=null!=i,R=null!=a,A="leakyrelu"===l,F=null!=l?B$(l,!0):null;let M;if((1===f||1===m)&&T>1e3&&!1===(E||R||A||null!=F)){let t=S,e=C;n&&(t=nT({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=nT({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const i=1===m;let a=t;1!==m&&(a=q$({inputs:{x:t},backend:s,attrs:{shape:[$,T,1]}}),N.push(a));const o=1===m?2:1;let l=e;i&&(l=q$({inputs:{x:e},backend:s,attrs:{shape:[$,1,T]}}),N.push(l));const u=G$({inputs:{a,b:l},backend:s});M=tT({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=Jr(t.dtype,e.dtype),u=new U$(k,I,[$,f,m],n,r,E,F,R,A),c=[S,C];if(null!=i&&c.push(i),R&&c.push(a),A){const t=s.makeTensorInfo([],"float32",Nr(o,"float32"));c.push(t),N.push(t)}M=s.runWebGLProgram(u,c,l)}const D=q$({inputs:{x:M},backend:s,attrs:{shape:v}});N.push(M);for(const t of N)s.disposeIntermediateTensorInfo(t);return D}const iT={kernelName:Qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return sT({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},aT="return abs(x);",oT={kernelName:J,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=KN(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w$(r.shape,aT):new b$(r.shape,aT),n.runWebGLProgram(s,[r],r.dtype)}},lT=z$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),uT={kernelName:Q,backendName:"webgl",kernelFunc:lT},cT=z$({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),hT={kernelName:tt,backendName:"webgl",kernelFunc:cT},dT="return a + b;",pT=P$({opSnippet:dT,packedOpSnippet:dT,supportsComplex:!0,cpuKernelImpl:wN}),fT={kernelName:et,backendName:"webgl",kernelFunc:pT};class mT{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class gT{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const bT={kernelName:nt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return T$({inputs:{x:s[0]},backend:r});if(s.length>j().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),i=t({inputs:s.slice(e),backend:r});return t({inputs:[n,i],backend:r})}const i=s.map((t=>t.dtype)).reduce(((t,e)=>Jr(t,e))),a=s.map((t=>t.shape)),o=j().getBool("WEBGL_PACK")?new gT(s[0].shape,a):new mT(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},xT={kernelName:rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=I(i,s.shape);let u=l;const c=lo(u,o);let h=s;null!=c&&(h=nT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=co(u.length,o)),oo("all",u,o);const[d,p]=io(h.shape,u),f=q$({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=Y$(f,f.dtype,"all",n);let b;return b=q$(a?{inputs:{x:m},backend:n,attrs:{shape:ao(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},yT={kernelName:st,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=I(i,s.shape);let u=l;const c=lo(u,o);let h=s;null!=c&&(h=nT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=co(u.length,o)),oo("any",u,o);const[d,p]=io(h.shape,u),f=q$({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=Y$(f,f.dtype,"any",n);let b;return b=q$(a?{inputs:{x:m},backend:n,attrs:{shape:ao(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class wT{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class vT{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=tN(o),u=c$("coords",o);let c,h;if(1===i){h=o+1;const t=tN(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((t=>"int "+t)),g=c$("sourceLocR",h-1).concat("inIdx.r"),b=c$("sourceLocG",h-1).concat("inIdx.g"),x=c$("sourceLocB",h-1).concat("inIdx.b"),y=c$("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function kT(t,e,n,r=null){let s=e.shape[0],i=e.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=xu(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new wT(o,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=kT(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function IT(t,e,n,r=null){const s=null!=r?r.shape:e.shape,i=xu(s[s.length-1]),a=new vT(s,i,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=IT(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function ST(t,e,n,r){const s=[n];if(oo("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],i=t.texData.get(e.dataId);let a=e;null!==i&&i.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=io(a.shape,s),u=g(l),c=q$({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(c);const h=kT(t,c,r);n.push(h);const d=q$({inputs:{x:h},backend:t,attrs:{shape:o}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return IT(t,e,r)}const CT={kernelName:it,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=I(i,s.shape);const o=lo(a,s.shape.length);let l=s;const u=[];null!=o&&(l=nT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=co(a.length,l.shape.length)),oo("argMax",[a[0]],l.shape.length);const c=ST(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},NT={kernelName:at,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=I(i,s.shape);const o=lo(a,s.shape.length);let l=s;const u=[];null!=o&&(l=nT({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=co(a.length,l.shape.length)),oo("argMin",[a[0]],l.shape.length);const c=ST(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},$T=z$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),TT={kernelName:ot,backendName:"webgl",kernelFunc:$T},ET=z$({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),RT={kernelName:lt,backendName:"webgl",kernelFunc:ET},AT=z$({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),FT={kernelName:ut,backendName:"webgl",kernelFunc:AT},MT=P$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),DT={kernelName:ht,backendName:"webgl",kernelFunc:MT},_T=z$({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),OT={kernelName:ct,backendName:"webgl",kernelFunc:_T};class LT{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const y=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class zT{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const PT={kernelName:dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;LC(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;d(ia(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Xi(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return T$({inputs:{x:s},backend:n});const c=new LT(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},BT={kernelName:ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Yi(s.shape,i,a,[1,1,1],o,l,u),h=new zT(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class UT{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WT{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VT={kernelName:mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Yi(a.shape,o,l,[1,1,1],u,c),d=new WT(h);return n.runWebGLProgram(d,[s],a.dtype)}},GT={kernelName:pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;LC([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Xi(a.shape,o,l,1,u),h=new UT(c);return n.runWebGLProgram(h,[s],a.dtype)}},HT={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return sT({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class qT{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],di(t,e),di(t,n);let a="0.0";null!=r&&(di(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(di(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class jT{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],di(t,e),di(t,n);let a="vec4(0.0)";null!=r&&(di(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(di(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const KT={kernelName:ae,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=t;d(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const p=j().getBool("WEBGL_PACK_NORMALIZATION")?new jT(r.shape,s.shape,i.shape,c,h,l):new qT(r.shape,s.shape,i.shape,c,h,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class XT{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=tN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return YT.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${YT[e]} = start[${e}] + coords.${YT[e]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const YT=["x","y","z","w","u","v"];class ZT{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=tN(this.rank),n=c$("coords",this.rank),r=c$("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function JT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r,[o,l]=$i(s,i,a);if(pi(s,o,l),0===g(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=XN(t.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,e)}const{isPacked:u}=n.texData.get(s.dataId),c=Ci(s.shape,o,l);if(u||!c){const t=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZT(l):new XT(l),e=[o];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=Ni(e,_(t.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const QT={kernelName:xn,backendName:"webgl",kernelFunc:JT},tE={kernelName:bt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;d(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=wu(s.shape,i,o),u=vu(l.length,i.length),c=ku(s.shape,i,o),h=Iu(a,i.length),p=Su(c,a,i.length),f=[],m=q$({inputs:{x:s},backend:n,attrs:{shape:l}}),g=nT({inputs:{x:m},backend:n,attrs:{perm:u}}),b=q$({inputs:{x:g},backend:n,attrs:{shape:c}}),x=JT({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(b),f.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},eE={kernelName:xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=vN(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},nE={kernelName:yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=di(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},rE=P$({opSnippet:"return float(a != b);",cpuKernelImpl:WN,dtype:"bool"}),sE={kernelName:Ve,backendName:"webgl",kernelFunc:rE};function iE(t){const{inputs:e,backend:n}=t,{input:r}=e;return T$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const aE={kernelName:en,backendName:"webgl",kernelFunc:iE},oE={kernelName:wt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return T$({inputs:{x:i},backend:r});const e=bo(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=R$({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=iE({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!$(i.dtype,a)){const t=T$({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new b$(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",C("bool",1)),e=rE({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},lE="return ceil(x);",uE=z$({opSnippet:lE,packedOpSnippet:lE,cpuKernelImpl:IN}),cE={kernelName:vt,backendName:"webgl",kernelFunc:uE};class hE{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class dE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const pE={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;o=j().getBool("WEBGL_PACK_CLIP")?new dE(s.shape):new hE(s.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class fE{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function mE(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const gE={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new fE(r.shape),a=[mE(r,s.complexTensorInfos.real),mE(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class bE{constructor(t){this.outputShape=[],this.outputShape=gu(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class xE{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=gu(t,e);const n=this.outputShape,r=n.length,s=tN(r),i=c$("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${yE(a,l,e)}),\n            vec2(${yE(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${yE(a,l,p)}),\n          vec2(${yE(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function yE(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function wE(t){const{inputs:e,backend:n}=t,{input:r}=e;return T$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const vE={kernelName:pe,backendName:"webgl",kernelFunc:wE};function kE(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>iE({inputs:{input:t},backend:n}))),s=t.map((t=>wE({inputs:{input:t},backend:n}))),i=kE(r,e,n),a=kE(s,e,n),o=R$({inputs:{real:i,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map((t=>{const r=g(t.shape.slice(e));return q$({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),a=gu(s.map((t=>t.shape)),1),o=1===s[0].shape[0],l=SN(i,a,r,o),u=gu(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,r,l);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=kE(t.slice(0,r),e,n),i=kE(t.slice(r),e,n),a=kE([s,i],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}if(j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new xE(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:i,outShape:a}=function(t,e,n){const r=gu(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>q$({inputs:{x:t},attrs:{shape:[-1,g(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),o=new bE(i.map((t=>t.shape))),l=n.runWebGLProgram(o,i,r);i.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=q$({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),u}function IE(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=I(s,e[0].shape)[0],a=gu(e.map((t=>t.shape)),i);if(0===g(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>g(t.shape)>0));return 1===o.length?T$({inputs:{x:o[0]},backend:n}):(mu(o.map((t=>t.shape)),i),kE(o,i,n))}const SE={kernelName:Ct,backendName:"webgl",kernelFunc:IE};class CE{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",w="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class NE{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $E{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=aN(this.outputShape.length);const{dataFormat:n}=e,r=PC(),s="channelsLast"===n,i=s?0:1,a=s?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${t};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*t+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*t+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function TE({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=i&&!f&&3===i.shape.length){const t=nT({inputs:{x:i},backend:r,attrs:{perm:[1,2,0]}});g.push(t),i=t}if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&f&&null!=u.texture&&l[2]%2!=0&&b(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,d(AC(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const f=q$({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const b=sT({a:h,b:f,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),x=r.texData.get(b.dataId);d(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,x.shape=n.outShape,m=T$({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const l=f?t:nT({inputs:{x:t},backend:r,attrs:{perm:[0,2,3,1]}}),u=l.shape,c=q$({inputs:{x:l},backend:r,attrs:{shape:[1,u[0]*u[1]*u[2],n.inChannels]}}),h=q$({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=sT({a:c,b:h,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),p=q$({inputs:{x:d},backend:r,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});m=f?p:nT({inputs:{x:p},backend:r,attrs:{perm:[0,3,1,2]}}),f||(g.push(l),g.push(p)),g.push(c),g.push(h),g.push(d)}for(const t of g)r.disposeIntermediateTensorInfo(t);return m}function EE({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,b=d*h,x=[m,b],y=[];if(null!=i&&!f&&3===i.shape.length){const t=nT({inputs:{x:i},backend:r,attrs:{perm:[1,2,0]}});y.push(t),i=t}const w=q$({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),v=q$({inputs:{x:e},backend:r,attrs:{shape:[1,m,g(e.shape)/m]}});y.push(w),y.push(v);const k=new $E(x,n),I=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[w],"float32",I),C=q$({inputs:{x:S},backend:r,attrs:{shape:[1,x[0],x[1]]}});y.push(S),y.push(C);const N=null!=s,$=null!=i,T="leakyrelu"===o,E=o?B$(o,!0):null,R=new U$(C.shape,v.shape,[1,b,n.outChannels],!0,!1,N,E,$,T),A=[C,v];if(s&&A.push(s),$&&A.push(i),T){const t=r.makeTensorInfo([],"float32",Nr(a,"float32"));A.push(t),y.push(t)}const F=r.runWebGLProgram(R,A,"float32"),M=q$({inputs:{x:F},backend:r,attrs:{shape:[1,d,h,n.outChannels]}}),D=f?M:nT({inputs:{x:M},backend:r,attrs:{perm:[0,3,1,2]}});f||y.push(M),y.push(F);for(const t of y)r.disposeIntermediateTensorInfo(t);return D}const RE={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=aa(l),d=Zi(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(j().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=EE({x:s,filter:i,convInfo:d,backend:n});else{const t=new CE(d);p=n.runWebGLProgram(t,[s,i],"float32")}else p=TE({x:s,filter:i,convInfo:d,backend:n});const f=q$({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class AE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ME{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const _E={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=aa(l),d=Zi(s.shape,c,a,1,o,u,!1,h),p=new AE(d);return n.runWebGLProgram(p,[s,i],"float32")}},OE={kernelName:Tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=aa(u),d=Zi(a,i.shape,o,1,l,c,!1,h),p=new FE(d);return n.runWebGLProgram(p,[s,i],"float32")}},LE={kernelName:Et,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Ji(s.shape,i.shape,a,l,o),c=new NE(u);return n.runWebGLProgram(c,[s,i],"float32")}},zE={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=Ji(s.shape,l,a,1,o),c=new ME(u);return n.runWebGLProgram(c,[s,i],"float32")}},PE={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r,u=Ji(l,i.shape,o,1,a),c=new DE(u);return n.runWebGLProgram(c,[s,i],"float32")}},BE=z$({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),UE={kernelName:Ft,backendName:"webgl",kernelFunc:BE},WE=z$({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),VE={kernelName:Mt,backendName:"webgl",kernelFunc:WE};class GE{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const HE={kernelName:Ot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,c=new GE(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")}};var qE;!function(t){t.Prod="*",t.Sum="+"}(qE||(qE={}));class jE{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===qE.Prod?"1.0":"0.0",a=n?i:`getX(${KE(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${tN(s)} coords = getOutputCoords();\n        int end = ${XE(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${XE(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${KE(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function KE(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function XE(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function YE(t,e,n,r,s,i){const a=e.shape.length,o=lo([r],a);let l=e;null!=o&&(l=nT({inputs:{x:e},backend:n,attrs:{perm:o}}));const u=co(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=T$({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(c))-1;e++){const r=new jE(t,l.shape,!1,i),s=[[e]],a=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(a)}if(s){const e=new jE(t,l.shape,s,i),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const t=nT({inputs:{x:h},backend:n,attrs:{perm:uo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}const ZE={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return YE(qE.Prod,s,n,i,a,o)}},JE={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return YE(qE.Sum,s,n,i,a,o)}},QE={kernelName:Lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=vN(t,e,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=kN(t,e,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class tR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const eR={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=("NHWC"===a?s.shape[1]:s.shape[2])*i,u=("NHWC"===a?s.shape[2]:s.shape[3])*i,c=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),h=new tR("NHWC"===a?[o,l,u,c]:[o,c,l,u],i,a);return n.runWebGLProgram(h,[s],s.dtype)}};class nR{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=aN(this.outputShape.length);const i=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class rR{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=aN(this.outputShape.length);const i=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<h;t++)p+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xTexelC${2*t+1};\n          int xTexelC${2*t+1}Ready;\n          vec4 xC${t};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let t=0;t<h;t++)p+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xTexelC${2*t+1} = vec4(0.0);\n          xTexelC${2*t+1}Ready = 0;\n          xC${t} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let t=0;t<(d+1)/2;t++){const e=2*t;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){const t=a%2==0?c(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const sR={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),d(ia(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Zi(s.shape,i.shape,a,c,o,u,!0);let p;p=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new rR(h):new nR(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,i],"float32",f)}};class iR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oR={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Zi(s.shape,c,a,o,l,u,!0),d=new iR(h);return n.runWebGLProgram(d,[s,i],"float32")}},lR={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Zi(c,i.shape,a,o,l,u,!0),d=new aR(h);return n.runWebGLProgram(d,[s,i],"float32")}};class uR{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const cR={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=g(r.shape),a=q$({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new uR(i),l=n.runWebGLProgram(o,[a],a.dtype),u=q$({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class hR{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const dR={kernelName:Vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Ki(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new hR(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=q$({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},pR={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=qu(s,i.length);Ku(a.length,l,i);const{path:u,steps:c}=Xu(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=ju(p,l[e]);let s;Yu(t)?s=i[e]:(s=nT({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);b(s.shape,a)||(s=q$({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=G$({inputs:{a:s,b:d},backend:n}),f.push(d))}t<h-1&&(u[t]>=0&&(d=tT({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},fR=z$({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),mR={kernelName:Kt,backendName:"webgl",kernelFunc:fR},gR={kernelName:Xt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new N$("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},bR=P$({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:CN}),xR={kernelName:Zt,backendName:"webgl",kernelFunc:bR},yR=z$({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Au};\n  float a1 = ${Fu};\n  float a2 = ${Mu};\n  float a3 = ${Du};\n  float a4 = ${_u};\n  float a5 = ${Ou};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),wR={kernelName:Yt,backendName:"webgl",kernelFunc:yR},vR=z$({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:NN,dtype:"float32"}),kR={kernelName:Jt,backendName:"webgl",kernelFunc:vR};function IR(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(d(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),q$({inputs:{x:i},backend:r,attrs:{shape:o}})}const SR={kernelName:Qt,backendName:"webgl",kernelFunc:IR},CR="return exp(x) - 1.0;",NR=z$({opSnippet:CR,packedOpSnippet:CR,cpuKernelImpl:$N}),$R={kernelName:te,backendName:"webgl",kernelFunc:NR};class TR{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ER(t,e,n){const r=n.texData.get(t.dataId),s=g(t.shape),i=t.shape[t.shape.length-1],a=q$({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new TR("real",o,e),u=new TR("imag",o,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=R$({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=q$({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const RR={kernelName:ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return ER(r,!1,n)}};class AR{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function FR(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||F(s),"string"===i){const t=N(i,g(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new AR(r,s),n=[[s]];return e.runWebGLProgram(t,[],i,n)}}const MR={kernelName:ne,backendName:"webgl",kernelFunc:FR};class DR{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const _R={kernelName:re,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new DR(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},OR="return floor(x);",LR=z$({opSnippet:OR,packedOpSnippet:OR,cpuKernelImpl:TN}),zR={kernelName:se,backendName:"webgl",kernelFunc:LR},PR=P$({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),BR={kernelName:ie,backendName:"webgl",kernelFunc:PR};class UR{constructor(t){this.variableNames=["A"];const e=PC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class WR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=PC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const VR={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(o||a)&&(null==GR&&(GR=document.createElement("canvas").getContext("2d")),GR.canvas.width=l,GR.canvas.height=u,GR.drawImage(s,0,0,l,u),s=GR.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=uC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=j().getBool("WEBGL_PACK")?new WR(h):new UR(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let GR;const HR={kernelName:tr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=aa(c),g=Zi(s.shape,i.shape,l,h,u,d,!1,m);let b;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(j().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=EE({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=a,e=null!=o,r="leakyrelu"===p,l=p?B$(p,!1):null,u=new CE(g,t,l,e,r),h=[s,i],d=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=q$({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return x.push(e),e}return t};if(t&&h.push(d(a,c)),e&&h.push(d(o,c)),r){const t=n.makeTensorInfo([],"float32",Nr(f,"float32"));h.push(t),x.push(t)}b=n.runWebGLProgram(u,h,"float32")}else b=TE({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const y=q$({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},qR={kernelName:er,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let g=c;null==g&&(g=[1,1]),d(ia(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=Zi(s.shape,i.shape,l,g,u,h,!0),x=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=p?B$(p,x):null,w=[s,i],v=null!=a,k=null!=o,I="leakyrelu"===p;if(v&&w.push(a),k&&w.push(o),I){const t=n.makeTensorInfo([],"float32",Nr(f,"float32"));w.push(t),m.push(t)}let S;S=x?new rR(b,v,y,k,I):new nR(b,v,y,k,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,w,"float32",C);return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class jR{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=tN(e.length),s=tN(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const KR={kernelName:le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],o=g(r.shape),[l,u,c,h]=Cu(r,s),d=q$({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=q$({inputs:{x:r},backend:n,attrs:{shape:[g(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(r),i=EN(t,e,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new jR(a,h,[u,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),b=q$({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class XR{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=tN(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("index"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function YR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=I(a,s.shape)[0];if(j().get("DEBUG")){const t=n.readSync(i.dataId),e=s.shape[l];for(let n=0;n<t.length;++n){const r=t[n];d(r<=e-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`))}}const u=pc(s,i,l,o),c=g(i.shape),h=[],p=q$({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=q$({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),r=RN(e,t,m);return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const b=new XR(p.shape,m),x=n.runWebGLProgram(b,[p,f],p.dtype);h.push(x);const y=q$({inputs:{x},backend:n,attrs:{shape:u.outputShape}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}const ZR={kernelName:oe,backendName:"webgl",kernelFunc:YR},JR=P$({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:AN,dtype:"bool"}),QR={kernelName:ue,backendName:"webgl",kernelFunc:JR},tA=P$({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:FN}),eA={kernelName:ce,backendName:"webgl",kernelFunc:tA},nA={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return ER(r,!0,n)}},rA=z$({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sA={kernelName:fe,backendName:"webgl",kernelFunc:rA},iA=z$({opSnippet:"return float(isinf(x));",dtype:"bool"}),aA={kernelName:me,backendName:"webgl",kernelFunc:iA},oA=z$({opSnippet:"return float(isnan(x));",dtype:"bool"}),lA={kernelName:ge,backendName:"webgl",kernelFunc:oA},uA=P$({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:MN,dtype:"bool"}),cA={kernelName:xe,backendName:"webgl",kernelFunc:uA},hA=P$({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:DN,dtype:"bool"}),dA={kernelName:ye,backendName:"webgl",kernelFunc:hA},pA={kernelName:we,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=_N(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},fA=z$({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:ON}),mA={kernelName:ve,backendName:"webgl",kernelFunc:fA},gA=z$({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),bA={kernelName:ke,backendName:"webgl",kernelFunc:gA},xA=P$({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),yA={kernelName:Ie,backendName:"webgl",kernelFunc:xA},wA=z$({opSnippet:"return float(!(x >= 1.0));"}),vA={kernelName:Se,backendName:"webgl",kernelFunc:wA},kA=P$({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),IA={kernelName:Ce,backendName:"webgl",kernelFunc:kA};class SA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class CA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const NA={kernelName:Ne,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=j().getBool("WEBGL_PACK_NORMALIZATION")?new CA(s.shape,i,a,o,l):new SA(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class $A{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const TA={kernelName:$e,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new $A(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function EA(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=I(i,s.shape);let u=l;const c=lo(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const r=o$(t,s.shape,s.dtype,c,e);p=n.makeTensorInfo(e,s.dtype),n.texData.get(p.dataId).values=r}else p=Q$(s,c,n);u=co(u.length,o)}oo("max",u,o);const[f,m]=io(p.shape,u);let b,x=f;if(a&&(x=ao(f,l)),d){const t=n.texData.get(p.dataId).values,e=LN(t,g(m),x,s.dtype);b=n.makeTensorInfo(x,s.dtype),n.texData.get(b.dataId).values=e}else b=function(t,e,n,r){const s=g(e),i=q$({inputs:{x:t},attrs:{shape:[g(t.shape)/s,s]},backend:r}),a=Y$(i,t.dtype,"max",r),o=q$({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,x,n);return h&&n.disposeIntermediateTensorInfo(p),b}const RA={kernelName:Te,backendName:"webgl",kernelFunc:EA},AA=P$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zN}),FA={kernelName:Ee,backendName:"webgl",kernelFunc:AA},MA={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;LC(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;d(ia(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Xi(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&b(u.inShape,u.outShape))return T$({inputs:{x:s},backend:n});const c=new LT(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},DA={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Yi(s.shape,i,a,[1,1,1],o,u,l),h=new zT(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class _A{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,o=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OA{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const LA={kernelName:Me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Yi(a.shape,o,l,[1,1,1],u,c),d=new zT(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new OA(h),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},zA={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;LC([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Xi(o.shape,l,u,1,c,h),p=new LT(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new _A(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},PA={kernelName:De,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;d(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];d(ia(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Xi(r.shape,s,i,u,a),[h,p]=function(t,e,n,r){let s=new LT(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new LT(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[h,p]}},BA={kernelName:_e,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:i}=e,a=n,o=r.shape.length,l=I(i,r.shape);let u=l;const c=lo(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=o$(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=Q$(r,c,a);p.push(f),u=co(u.length,o)}oo("sum",u,o);const[m,b]=io(f.shape,u);let x=m;s&&(x=ao(m,l));const y=function(t,e,n,r){const s=g(e),i=q$({inputs:{x:t},attrs:{shape:[g(t.shape)/s,s]},backend:r}),a=Y$(i,"float32","mean",r),o=q$({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,b,x,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},UA={kernelName:Oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=I(i,s.shape);let u=l;const c=lo(u,o);let h=s;null!=c&&(h=nT({inputs:{x:s},backend:n,attrs:{perm:c}}),u=co(u.length,s.shape.length)),oo("min",u,o);const[d,p]=io(h.shape,u),f=q$({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=Y$(f,f.dtype,"min",n);let b;return b=q$(a?{inputs:{x:m},backend:n,attrs:{shape:ao(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},WA=P$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:PN}),VA={kernelName:Le,backendName:"webgl",kernelFunc:WA};class GA{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tN(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class HA{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tN(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=c$("rc",r),l=c$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const qA={kernelName:ze,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:i}=n,a=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HA(r.shape,s,i):new GA(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)}},jA=P$({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),KA={kernelName:Pe,backendName:"webgl",kernelFunc:jA};class XA{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const YA=P$({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ZA={kernelName:qt,backendName:"webgl",kernelFunc:YA},JA="return a - b;",QA=P$({opSnippet:JA,packedOpSnippet:JA,supportsComplex:!0,cpuKernelImpl:s$}),tF={kernelName:Bn,backendName:"webgl",kernelFunc:QA};function eF(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=I([i],s.shape),o=EA({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=ao(o.shape,a),u=q$({inputs:{x:o},backend:n,attrs:{shape:l}}),c=QA({inputs:{a:s,b:u},backend:n}),h=vR({inputs:{x:c},backend:n}),d=tT({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=q$({inputs:{x:d},backend:n,attrs:{shape:l}}),f=YA({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const nF={kernelName:Tn,backendName:"webgl",kernelFunc:eF},rF={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:eF({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new XA(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},sF={kernelName:We,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=UN(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new w$(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new b$(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},iF=$l,aF={kernelName:Ge,backendName:"webgl",kernelFunc:function(t){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=iF(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},oF=Tl,lF={kernelName:He,backendName:"webgl",kernelFunc:function(t){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=oF(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},uF=El,cF={kernelName:qe,backendName:"webgl",kernelFunc:function(t){nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=uF(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class hF{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const dF={kernelName:Ke,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r,l=g(s.shape),u=new hF(l,i,a,o),c=q$({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=q$({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),d}};function pF(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=iE({inputs:{input:r},backend:n}),e=pF({inputs:{x:t},backend:n}),s=wE({inputs:{input:r},backend:n}),i=pF({inputs:{x:s},backend:n}),a=R$({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return FR({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const fF={kernelName:Yn,backendName:"webgl",kernelFunc:pF},mF={kernelName:je,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=iE({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=wE({inputs:{input:s},backend:r}),a=pF({inputs:{x:i},backend:r}),o=R$({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return FR({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},gF={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return IR({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{p(i,t.shape,"All tensors passed to stack must have matching shapes"),d(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=IE({inputs:e.map((t=>{const e=IR({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class bF{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tN(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class xF{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tN(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=c$("rc",r),l=c$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const yF=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;if(0===g(s.shape)){const t=i.map(((t,e)=>t[0]+s.shape[e]+t[1]));return FR({backend:n,attrs:{shape:t,value:a,dtype:s.dtype}})}const o=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xF(s.shape,i,a):new bF(s.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[s],s.dtype,l)},wF={kernelName:Ye,backendName:"webgl",kernelFunc:yF},vF=P$({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kF={kernelName:Ze,backendName:"webgl",kernelFunc:vF},IF={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=I(i,s.shape);let c=u;const h=lo(c,o);let d,p=s;if(null!=h&&(p=nT({inputs:{x:s},backend:n,attrs:{perm:h}}),c=co(c.length,o),l.push(p)),oo("prod",c,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:s}=VN(p.shape,p.dtype,t,c);d=n.makeTensorInfo(r,s,e)}else{const[t,e]=io(p.shape,c),r=g(e),i=q$({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=Y$(i,Qr(s.dtype),"prod",n);d=q$({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(i),l.push(a)}if(a){l.push(d);const t=ao(d.shape,u);d=q$({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},SF=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:a}=n,o=GN(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},CF={kernelName:tn,backendName:"webgl",kernelFunc:SF},NF=z$({opSnippet:"return 1.0 / x;"}),$F={kernelName:nn,backendName:"webgl",kernelFunc:NF},TF=z$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),EF={kernelName:rn,backendName:"webgl",kernelFunc:TF},RF=z$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AF={kernelName:cn,backendName:"webgl",kernelFunc:RF};class FF{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class MF{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const DF={kernelName:ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new MF(s.shape,l,u,i,a):new FF(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}};class _F{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const OF={kernelName:un,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new _F(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class LF{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class zF{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const PF={kernelName:an,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zF(s.shape,l,u,i,a):new LF(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class BF{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const UF={kernelName:on,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new BF(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class WF{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=tN(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class VF{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=c$("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=tN(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const GF={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,a=s.shape.length,o=I(i,s.shape);if(0===a)return T$({inputs:{x:s},backend:n});const l=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VF(s.shape,o):new WF(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class HF{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qF={kernelName:Jn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=new HF(r.shape,i),[u,c]=yu(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},jF=z$({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),KF={kernelName:dn,backendName:"webgl",kernelFunc:jF},XF=z$({opSnippet:"return inversesqrt(x);",cpuKernelImpl:HN}),YF={kernelName:pn,backendName:"webgl",kernelFunc:XF};class ZF{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=tN(s.length),l=tN(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const JF={kernelName:fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Tu(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=q$({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=q$({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new ZF(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=q$({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class QF{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===j().getNumber("WEBGL_VERSION")?"while (left < right) {":s,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const tM={kernelName:mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:a}=r,o=new QF(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",l)}};class eM{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=tN(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const nM={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,a=new eM(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Jr(s.dtype,i.dtype))}},rM=z$({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Eu};\n  float scale = ${Ru};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),sM={kernelName:bn,backendName:"webgl",kernelFunc:rM},iM=z$({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:jN}),aM={kernelName:kn,backendName:"webgl",kernelFunc:iM},oM=z$({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),lM={kernelName:vn,backendName:"webgl",kernelFunc:oM},uM=z$({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),cM={kernelName:yn,backendName:"webgl",kernelFunc:uM},hM=z$({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),dM={kernelName:wn,backendName:"webgl",kernelFunc:hM},pM=z$({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fM={kernelName:In,backendName:"webgl",kernelFunc:pM},mM={kernelName:Nn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;d(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=[],c=yF({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=wu(c.shape,i,o,!1),p=vu(h.length,i.length,!1),f=ku(c.shape,i,o,!1),m=q$({inputs:{x:c},backend:n,attrs:{shape:h}}),g=nT({inputs:{x:m},backend:n,attrs:{perm:p}}),b=q$({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(c),u.push(m),u.push(g),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},gM={kernelName:En,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=YN(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},bM={kernelName:Rn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=ZN(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},xM={kernelName:An,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=JN(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},yM={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=JN(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},wM={kernelName:Mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Tu(0,s,o);if("string"===i.dtype){const t=n.bufferSync(s),e=n.bufferSync(i),r=Rr(n.readSync(a.dataId)[0]),p=qN(t,e,o,d,c,u,l,h,r,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new ZF(u,l,s.shape.length,i.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[i,s,a],i.dtype),m=q$({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},vM={kernelName:$n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=I(a,s.shape)[0],l=Ju(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const r=JT({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r}))}},kM="return sqrt(x);",IM=z$({opSnippet:kM,packedOpSnippet:kM,cpuKernelImpl:QN}),SM={kernelName:Sn,backendName:"webgl",kernelFunc:IM},CM={kernelName:_n,backendName:"webgl",kernelFunc:z$({opSnippet:"return x * x;"})},NM="return (a - b) * (a - b);",$M=P$({opSnippet:NM,packedOpSnippet:NM}),TM={kernelName:Dn,backendName:"webgl",kernelFunc:$M},EM={kernelName:Zn,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new b$(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class RM{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=tN(n.length),i=tN(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const AM={kernelName:On,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ti(s.shape,i,a,o,l,u,c,h,p);let k;if(g)k=q$({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){d(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=mi(y,w,v),e=JT({inputs:{x:s},backend:n,attrs:{begin:y,size:t}});k=q$({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=ti(s.shape,s.dtype,t),r=t$(f,e,v,y);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const t=new RM(y,v,f);k=n.runWebGLProgram(t,[s],s.dtype)}const I=q$({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},FM={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=e$(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},MM={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=n$(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},DM={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=r$(a,s);return n.makeTensorInfo(i.shape,"int32",o)}},_M=z$({opSnippet:"return tan(x);"}),OM={kernelName:Un,backendName:"webgl",kernelFunc:_M},LM=z$({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zM={kernelName:Wn,backendName:"webgl",kernelFunc:LM};class PM{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=tN(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function BM(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map((t=>Rr(t))):t,r=ti(s.shape,s.dtype,e),a=i$(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new PM(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const UM={kernelName:Vn,backendName:"webgl",kernelFunc:BM};class WM{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class VM{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function GM(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function HM(t){let e=1;for(;e<t;)e*=2;return e}const qM={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r,o=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>l){const t=n.readSync(s.dataId),[e,r]=a$(t,u,s.dtype,i,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,FR({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=g(u)/c,m=q$({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&GM(n,p);const b=HM(i),x=HM(c);let y=null;const w=()=>null===y?[m,m]:[m,y],v=(t,e,r)=>{const s=w(),i=new WM(r),a=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=y;y=n.runWebGLProgram(i,s,"int32",a),GM(n,o)};for(let t=1;t<b;t*=2){const e=2*t;for(let n=t;n>=1;n/=2)v(e,n,[f,x])}for(let t=x;t>b;t/=2){const e=w(),r=new VM([f,t/2]),s=[[c],[null===y?1:0],[b]],i=y;y=n.runWebGLProgram(r,e,"int32",s),GM(n,i);const a=b/2,o=2*a;for(let t=a;t>=1;t/=2)v(o,t,y.shape)}let k=y;y=JT({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),GM(n,k);let I=YR({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});GM(n,m);const S=u.slice(0,-1);S.push(i),k=y,y=q$({inputs:{x:y},attrs:{shape:S},backend:n}),GM(n,k);const C=I;return I=q$({inputs:{x:I},attrs:{shape:S},backend:n}),GM(n,C),[I,y]}};class jM{constructor(t,e,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const KM={kernelName:Hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new jM(h,d,a,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,i],"float32")}},XM={kernelName:jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;LC(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=l$(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},YM={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==i&&(u[c++]=a.shape[t]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[i]=t;const e=JT({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=q$({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class ZM{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const JM=[iT,oT,uT,hT,fT,bT,xT,yT,CT,NT,TT,RT,FT,DT,OT,PT,BT,VT,GT,HT,KT,tE,eE,nE,oE,cE,pE,A$,gE,SE,RE,_E,OE,LE,zE,PE,UE,VE,HE,ZE,JE,QE,eR,sR,oR,lR,cR,dR,pR,mR,gR,xR,wR,kR,SR,$R,RR,MR,_R,zR,BR,VR,HR,qR,KR,ZR,QR,eA,E$,nA,vE,sA,aA,lA,D$,cA,dA,pA,mA,bA,yA,vA,IA,NA,TA,RA,FA,MA,DA,LA,zA,PA,BA,UA,VA,qA,KA,rF,H$,sF,aF,lF,cF,sE,dF,mF,gF,wF,kF,L$,IF,CF,aE,ZA,$F,EF,AF,j$,DF,OF,PF,UF,GF,qF,KF,YF,JF,tM,nM,sM,aM,lM,cM,dM,QT,nF,fM,mM,gM,bM,xM,yM,wM,vM,SM,CM,TM,EM,AM,FM,MM,DM,tF,eT,OM,zM,UM,qM,KM,rT,XM,YM,{kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=lo([u],o);let h=s;null!=c&&(h=nT({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=co(1,o)[0]);const d=dc(h.shape,u,a),p=g([h.shape[u]]),f=q$({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Qr(s.dtype),b=(t,e,r,s,i)=>{const a=t.shape[0],o=t.shape[1],u=hc(o,i),c=new ZM({windowSize:u,inSize:o,batchSize:a,numSegments:i},e),h=n.compileAndRun(c,[t,r],s);if(l.push(h),h.shape[1]===i)return h;const d=SF({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=BM({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),b(h,e,p,s,i)},x=q$({inputs:{x:b(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const t=uo(c);y=nT({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},fF];for(const t of JM)ur(t);const QM=(t,e,n,r=0)=>{const s=((t,e,n,r=0)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]}))(t,e,n,r),{x:i,y:a,z:o}=s;return{x:i/o,y:a/o}},tD=(t,e,n,r,s,i,a,o)=>({variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[o,s*s],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, ${s}) * ${r};\n\t    int searchOffsetY = searchOffsetIndex / ${s} * ${r};\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - ${n};\n\t    int sy = sCenterY + searchOffsetY - ${n};\n\n\t    if (sx < ${t} || sx >= (${a} - ${t}) || sy < ${t} || sy >= (${i} - ${t})) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < ${e}; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < ${e}; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - ${t};\n\t\t  int fy2 = sCenterY + templateOffsetY - ${t};\n\n\t\t  int sx2 = sx + templateOffsetX - ${t};\n\t\t  int sy2 = sy + templateOffsetY - ${t};\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(${e} * ${e});\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`}),eD=(t,e,n,r)=>({variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[r,2],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / ${n*n};\n\t    int searchOffsetIndex = imod(maxIndex, ${n*n});\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, ${n}) * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${t}) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / ${n} * ${e};\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${t}) / markerScale);\n\t    }\n\t  }\n\t`}),nD=t=>({variableNames:["sims","maxIndex"],outputShape:[t],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"}),rD=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"}),sD=(t,e)=>({variableNames:["p"],outputShape:[t,e],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"}),iD=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],aD=[];for(let t=0;t<iD.length;t++){const e=iD[t].sigma;for(let n=0;n<iD[t].points.length;n++){const r=iD[t].points[n];aD.push([e,r[0],r[1]])}}const oD=aD,lD=(oD.length-1)*oD.length/2,uD=1/(2*Math.PI),cD=t=>{const e=[];for(let n=1;n<t.length;n++)e.push("image"+n);return e},hD=t=>{let e="float getPixel(int octave, int y, int x) {";for(let n=1;n<t.length;n++)e+=`\n\t  if (octave == ${n}) {\n\t    return getImage${n}(y, x);\n\t  }\n\t`;return e+="}",e},dD=(t,e,n,r)=>{const s=cD(t),i=hD(t);return{variableNames:[...s,"extrema","radial"],outputShape:[e.shape[0],n.shape[0],2],userCode:`\n\t  ${i}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * ${r};\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`}},pD=(t,e)=>({variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${e.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`}),fD=t=>null==t,mD=t=>{if("object"!=typeof t||null===t)return t;const e=Array.isArray(t)?[]:{};for(const n in t){const r=t[n];e[n]=mD(r)}return e},gD=class{debugMode;width;height;numOctaves;tensorCaches;kernelCaches;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(const[n,r]of t.entries())e[4*n]=r,e[4*n+1]=r,e[4*n+2]=r,e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}_buildPyramidImage(t){const e=[];for(let n=0;n<this.numOctaves;n++){let r;r=0===n?this._applyFilter(t):this._downsampleBilinear(e[n-1][e[n-1].length-1]);const s=this._applyFilter(r);e.push([r,s])}return e}_buildDogPyramid(t){const e=[];for(let n=0;n<this.numOctaves;n++){const r=this._differenceImageBinomial(t[n][0],t[n][1]);e.push(r)}return e}_getExtremas(t){const e=[];for(let n=1;n<this.numOctaves-1;n++){const r=this._buildExtremas(t[n-1],t[n],t[n+1]);e.push(r)}return e}_getFeaturePoints(t,e,n){const r=[];for(const[s,i]of t.entries()){if(0==i[0])continue;const t=[];for(let n=0;n<e[s].length;n+=4){const r=e[s][n]*256**3+65536*e[s][n+1]+256*e[s][n+2]+e[s][n+3];t.push(r)}const a=i[1],o=i[2],l=i[3]*Math.pow(2,a)+Math.pow(2,a-1)-.5,u=o*Math.pow(2,a)+Math.pow(2,a-1)-.5,c=Math.pow(2,a);r.push({maxima:i[0]>0,x:l,y:u,scale:c,angle:n[s],descriptors:t})}return r}detect(t){let e={};const n=this._buildPyramidImage(t),r=this._buildDogPyramid(n),s=this._getExtremas(r),i=this._applyPrune(s),a=this._computeLocalization(i,r),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,a,u),h=this._computeFreakDescriptors(c),d=a.arraySync(),p=u.arraySync(),f=h.arraySync();return this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:r.map((t=>t?.arraySync()??null)),extremasResults:s.map((t=>t.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:i,localizedExtremas:a.arraySync()}),n.forEach((t=>t.forEach((t=>t?.dispose())))),r.forEach((t=>t?.dispose())),s.forEach((t=>t.dispose())),a.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose(),{featurePoints:this._getFeaturePoints(d,f,p),debugExtra:e}}_compileAndRun(t,e){const n=Pi().compileAndRun(t,e);return Mi().makeTensorFromTensorInfo(n)}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=t.map((t=>{return e=t.shape[0],n=t.shape[1],{variableNames:["extrema"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};var e,n}));this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let r=0;r<5;r++)n[t].push([0,0,0,0]),e[t].push(0)}_i((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let s=0;s<t.length;s++){const i=r[s],a=this._compileAndRun(i,[t[s]]),o=s+1,l=a.arraySync(),u=a.shape[0],c=a.shape[1],h=2*c/10,d=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<c;r++){const s=l[t][r];if(0===s)continue;const i=s%1e3,a=Math.floor(Math.abs(s)/1e3),u=2*r+(2===a||3===a?1:0),c=2*t+(1===a||3===a?1:0),p=Math.floor(u/h),f=10*Math.floor(c/d)+p,m=Math.abs(i);let g=5;for(;g>=1&&m>=e[f][g-1];)g--;if(!(g>=5)){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t]=mD(n[f][t-1]);e[f][g]=m,n[f][g][0]=i,n[f][g][1]=o,n[f][g][2]=c,n[f][g][3]=u}}}}));const r=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)r.push(n[t][e]);return r}_applyFilter(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),this.kernelCaches.applyFilter[r]||(this.kernelCaches.applyFilter[r]=((t,e)=>[rD(t,e),sD(t,e)])(e,n)),_i((()=>{const[e,n]=this.kernelCaches.applyFilter[r],s=this._compileAndRun(e,[t]);return this._compileAndRun(n,[s])}))}_buildExtremas(t,e,n){const r=e.shape[0],s=e.shape[1],i="w"+s;return this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),this.kernelCaches.buildExtremas[i]||(this.kernelCaches.buildExtremas[i]=((t,e)=>({variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${t-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${e-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`}))(r,s)),_i((()=>{const r=this.kernelCaches.buildExtremas[i];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])}))}_computeLocalization(t,e){return this.kernelCaches.computeLocalization||(this.kernelCaches.computeLocalization=((t,e)=>{const n=cD(t),r=hD(t);return[{variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`}]})(e,t)),_i((()=>{const n=this.kernelCaches.computeLocalization[0],r=vs(t,[t.length,t[0].length],"int32"),s=this._compileAndRun(n,[...e.slice(1),r]).arraySync(),i=[];for(let t=0;t<s.length;t++){i.push([]);for(let e=0;e<s[t].length;e++)i[t].push([])}const a=[];for(const e of t)a.push([e[0],e[1],e[2],e[3]]);for(const[t,e]of a.entries()){if(0===e[0])continue;const n=s[t],r=.5*(n[1][2]-n[1][0]),i=.5*(n[2][1]-n[0][1]),a=n[1][2]+n[1][0]-2*n[1][1],o=n[2][1]+n[0][1]-2*n[1][1],l=.25*(n[0][0]+n[2][2]-n[0][2]-n[2][0]),u=a*o-l**2,c=(o*-r+-l*-i)/u,h=(-l*-r+a*-i)/u,d=e[2]+h,p=e[3]+c;Math.abs(u)<1e-4||(e[2]=d,e[3]=p)}return vs(a,[a.length,a[0].length],"float32")}))}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||_i((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=Math.sqrt(r**2+n**2);if(t>4.5)continue;const s=Math.exp(-.05555555555555555*t**2);e.push([r,n,s])}this.tensorCaches.orientationHistograms={radialPropertiesT:Li(vs(e,[e.length,3]))}}));const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;return this.kernelCaches.computeOrientationHistograms||(this.kernelCaches.computeOrientationHistograms=((t,e,n,r)=>[dD(t,e,n,r),pD(e,n)])(e,t,r,uD)),_i((()=>{const[e,s]=this.kernelCaches.computeOrientationHistograms,i=this._compileAndRun(e,[...n,t,r]);return this._compileAndRun(s,[i])}))}_computeExtremaAngles(t){return this.kernelCaches.computeExtremaAngles||(this.kernelCaches.computeExtremaAngles=(t=>({variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`}))(t)),_i((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||_i((()=>{const t=vs(oD);this.tensorCaches._computeExtremaFreak={freakPointsT:Li(t)}}));const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,s=[];for(let e=1;e<t.length;e++)s.push(t[e][1]);return this.kernelCaches._computeExtremaFreak||(this.kernelCaches._computeExtremaFreak=((t,e)=>{const n=cD(t),r=hD(t);return[{variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],oD.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`}]})(t,e)),_i((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...s,e,n,r])}))}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let s=r+1;s<t.shape[1];s++)e.push(r),n.push(s);const r=vs(e,[e.length]).cast("int32"),s=vs(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Li(Wo([r,s],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(lD/8);return this.kernelCaches.computeFreakDescriptors||(this.kernelCaches.computeFreakDescriptors=((t,e,n)=>[{variableNames:["freak","p"],outputShape:[t.shape[0],e],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${n}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`}])(t,n,lD)),_i((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_differenceImageBinomial(t,e){return _i((()=>t.sub(e)))}_upsampleBilinear(t,e){const n="w"+t.shape[1];return this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),this.kernelCaches.upsampleBilinear[n]||(this.kernelCaches.upsampleBilinear[n]=(r=e.shape[0],s=e.shape[1],{variableNames:["p"],outputShape:[r,s],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"})),_i((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}));var r,s}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],r="w"+n;return this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),this.kernelCaches.downsampleBilinear[r]||(this.kernelCaches.downsampleBilinear[r]=((t,e)=>({variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"}))(e,n)),_i((()=>{const e=this.kernelCaches.downsampleBilinear[r];return this._compileAndRun(e,[t])}))}_smoothHistograms(t){return this.kernelCaches.smoothHistograms||(this.kernelCaches.smoothHistograms=(t=>({variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"}))(t)),_i((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_runWebGLProgram(t,e,n){const r=Pi().runWebGLProgram(t,e,n);return Mi().makeTensorFromTensorInfo(r)}};var bD,xD,yD,wD=4294967295;function vD(t,e,n){var r=Math.floor(n/4294967296),s=n;t.setUint32(e,r),t.setUint32(e+4,s)}function kD(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var ID=("undefined"==typeof process||"never"!==(null===(bD=null===process||void 0===process?void 0:process.env)||void 0===bD?void 0:bD.TEXT_ENCODING))&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function SD(t){for(var e=t.length,n=0,r=0;r<e;){var s=t.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<e){var i=t.charCodeAt(r);56320==(64512&i)&&(++r,s=((1023&s)<<10)+(1023&i)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var CD=ID?new TextEncoder:void 0,ND=ID?"undefined"!=typeof process&&"force"!==(null===(xD=null===process||void 0===process?void 0:process.env)||void 0===xD?void 0:xD.TEXT_ENCODING)?200:0:wD,$D=(null==CD?void 0:CD.encodeInto)?function(t,e,n){CD.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(CD.encode(t),n)};function TD(t,e,n){for(var r=e,s=r+n,i=[],a="";r<s;){var o=t[r++];if(0==(128&o))i.push(o);else if(192==(224&o)){var l=63&t[r++];i.push((31&o)<<6|l)}else if(224==(240&o)){l=63&t[r++];var u=63&t[r++];i.push((31&o)<<12|l<<6|u)}else if(240==(248&o)){var c=(7&o)<<18|(l=63&t[r++])<<12|(u=63&t[r++])<<6|63&t[r++];c>65535&&(c-=65536,i.push(c>>>10&1023|55296),c=56320|1023&c),i.push(c)}else i.push(o);i.length>=4096&&(a+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(a+=String.fromCharCode.apply(String,i)),a}var ED,RD=ID?new TextDecoder:null,AD=ID?"undefined"!=typeof process&&"force"!==(null===(yD=null===process||void 0===process?void 0:process.env)||void 0===yD?void 0:yD.TEXT_DECODER)?200:0:wD,FD=function(t,e){this.type=t,this.data=e},MD=(ED=function(t,e){return ED=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},ED(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}ED(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),DD=function(t){function e(n){var r=t.call(this,n)||this,s=Object.create(e.prototype);return Object.setPrototypeOf(r,s),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:e.name}),r}return MD(e,t),e}(Error),_D={type:-1,encode:function(t){var e,n,r,s;return t instanceof Date?function(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(e=new DataView(s.buffer)).setUint32(0,n),s}var i=n/4294967296,a=4294967295&n;return s=new Uint8Array(8),(e=new DataView(s.buffer)).setUint32(0,r<<2|3&i),e.setUint32(4,a),s}return s=new Uint8Array(12),(e=new DataView(s.buffer)).setUint32(0,r),vD(e,4,n),s}((r=1e6*((e=t.getTime())-1e3*(n=Math.floor(e/1e3))),{sec:n+(s=Math.floor(r/1e9)),nsec:r-1e9*s})):null},decode:function(t){var e=function(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:kD(e,4),nsec:e.getUint32(0)};default:throw new DD("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(t.length))}}(t);return new Date(1e3*e.sec+e.nsec/1e6)}},OD=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(_D)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var s=1+e;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(t,e)))return new FD(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(t,e)))return new FD(n,s)}return t instanceof FD?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new FD(e,t)},t.defaultCodec=new t,t}();function LD(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var zD=function(){function t(t,e,n,r,s,i,a,o){void 0===t&&(t=OD.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===i&&(i=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=i,this.ignoreUndefined=a,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},t.prototype.reinitializeState=function(){this.pos=0},t.prototype.encode=function(t){return this.reinitializeState(),this.doEncode(t,1),this.getUint8Array()},t.prototype.doEncode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth ".concat(e));null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)&&!this.forceIntegerToFloat?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: ".concat(t," bytes in UTF-8"));this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){if(t.length>ND){var e=SD(t);this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),$D(t,this.bytes,this.pos),this.pos+=e}else e=SD(t),this.ensureBufferSizeToWrite(5+e),this.writeStringHeader(e),function(t,e,n){for(var r=t.length,s=n,i=0;i<r;){var a=t.charCodeAt(i++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<r){var o=t.charCodeAt(i);56320==(64512&o)&&(++i,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(e[s++]=a>>12&15|224,e[s++]=a>>6&63|128):(e[s++]=a>>18&7|240,e[s++]=a>>12&63|128,e[s++]=a>>6&63|128)}e[s++]=63&a|128}else e[s++]=a}}(t,this.bytes,this.pos),this.pos+=e},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(t)));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: ".concat(e));this.writeU8(198),this.writeU32(e)}var n=LD(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n=t.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: ".concat(n));this.writeU8(221),this.writeU32(n)}for(var r=0,s=t;r<s.length;r++){var i=s[r];this.doEncode(i,e+1)}},t.prototype.countWithoutUndefined=function(t,e){for(var n=0,r=0,s=e;r<s.length;r++)void 0!==t[s[r]]&&n++;return n},t.prototype.encodeMap=function(t,e){var n=Object.keys(t);this.sortKeys&&n.sort();var r=this.ignoreUndefined?this.countWithoutUndefined(t,n):n.length;if(r<16)this.writeU8(128+r);else if(r<65536)this.writeU8(222),this.writeU16(r);else{if(!(r<4294967296))throw new Error("Too large map object: ".concat(r));this.writeU8(223),this.writeU32(r)}for(var s=0,i=n;s<i.length;s++){var a=i[s],o=t[a];this.ignoreUndefined&&void 0===o||(this.encodeString(a),this.doEncode(o,e+1))}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: ".concat(e));this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,s=n;t.setUint32(e,r),t.setUint32(e+4,s)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),vD(this.view,this.pos,t),this.pos+=8},t}(),PD={};function BD(t){return"".concat(t<0?"-":"","0x").concat(Math.abs(t).toString(16).padStart(2,"0"))}var UD=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.find=function(t,e,n){t:for(var r=0,s=this.caches[n-1];r<s.length;r++){for(var i=s[r],a=i.bytes,o=0;o<n;o++)if(a[o]!==t[e+o])continue t;return i.str}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,str:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.find(t,e,n);if(null!=r)return this.hit++,r;this.miss++;var s=TD(t,e,n),i=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(i,s),s},t}(),WD=function(t,e){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},VD=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,s){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,s,(e=t[n](e)).done,e.value)}))}}},GD=function(t){return this instanceof GD?(this.v=t,this):new GD(t)},HD=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){i.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=s[t](e)).value instanceof GD?Promise.resolve(n.value.v).then(l,u):c(i[0][2],n)}catch(t){c(i[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function c(t,e){t(e),i.shift(),i.length&&o(i[0][0],i[0][1])}},qD=new DataView(new ArrayBuffer(0)),jD=new Uint8Array(qD.buffer),KD=function(){try{qD.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),XD=new KD("Insufficient data"),YD=new UD,ZD=function(){function t(t,e,n,r,s,i,a,o){void 0===t&&(t=OD.defaultCodec),void 0===e&&(e=void 0),void 0===n&&(n=wD),void 0===r&&(r=wD),void 0===s&&(s=wD),void 0===i&&(i=wD),void 0===a&&(a=wD),void 0===o&&(o=YD),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=i,this.maxExtLength=a,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=qD,this.bytes=jD,this.headByte=-1,this.stack=[]}return t.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},t.prototype.setBuffer=function(t){this.bytes=LD(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=LD(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining(1)){var e=this.bytes.subarray(this.pos),n=LD(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return this.view.byteLength-this.pos>=t},t.prototype.createExtraByteError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra ".concat(e.byteLength-n," of ").concat(e.byteLength," byte(s) found at buffer[").concat(t,"]"))},t.prototype.decode=function(t){this.reinitializeState(),this.setBuffer(t);var e=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return e},t.prototype.decodeMulti=function(t){return WD(this,(function(e){switch(e.label){case 0:this.reinitializeState(),this.setBuffer(t),e.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return e.sent(),[3,1];case 3:return[2]}}))},t.prototype.decodeAsync=function(t){var e,n,r,s,i,a,o,l;return i=this,a=void 0,l=function(){var i,a,o,l,u,c,h,d;return WD(this,(function(p){switch(p.label){case 0:i=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),e=VD(t),p.label=2;case 2:return[4,e.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,i)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{a=this.doDecodeSync(),i=!0}catch(t){if(!(t instanceof KD))throw t}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(s=e.return)?[4,s.call(e)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,a]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parsing ".concat(BD(c)," at ").concat(d," (").concat(h," in the current buffer)"))}}))},new((o=void 0)||(o=Promise))((function(t,e){function n(t){try{s(l.next(t))}catch(t){e(t)}}function r(t){try{s(l.throw(t))}catch(t){e(t)}}function s(e){var s;e.done?t(e.value):(s=e.value,s instanceof o?s:new o((function(t){t(s)}))).then(n,r)}s((l=l.apply(i,a||[])).next())}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return HD(this,arguments,(function(){var n,r,s,i,a,o,l,u,c;return WD(this,(function(h){switch(h.label){case 0:n=e,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=VD(t),h.label=2;case 2:return[4,GD(s.next())];case 3:if((i=h.sent()).done)return[3,12];if(a=i.value,e&&0===r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,GD(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof KD))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),i&&!i.done&&(c=s.return)?[4,GD(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.doDecodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new DD("Unrecognized type byte: ".concat(BD(t)));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var i=s[s.length-1];if(0===i.type){if(i.array[i.position]=e,i.position++,i.position!==i.size)continue t;s.pop(),e=i.array}else{if(1===i.type){if(void 0,"string"!=(a=typeof e)&&"number"!==a)throw new DD("The type of key must be string or number but "+typeof e);if("__proto__"===e)throw new DD("The key __proto__ is not allowed");i.key=e,i.type=2;continue t}if(i.map[i.key]=e,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue t}s.pop(),e=i.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new DD("Unrecognized array type byte: ".concat(BD(t)))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new DD("Max length exceeded: map length (".concat(t,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new DD("Max length exceeded: array length (".concat(t,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new DD("Max length exceeded: UTF-8 byte length (".concat(t,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+e+t)throw XD;var r,s=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.keyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.keyDecoder.decode(this.bytes,s,t):t>AD?function(t,e,n){var r=t.subarray(e,e+n);return RD.decode(r)}(this.bytes,s,t):TD(this.bytes,s,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new DD("Max length exceeded: bin length (".concat(t,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(t+e))throw XD;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new DD("Max length exceeded: ext length (".concat(t,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=kD(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),JD={},QD=n(6072),t_=n.n(QD);function e_(){return t_()('(()=>{"use strict";const t=class{cumsum;constructor(t,e,s){this.cumsum=[];for(let t=0;t<s;t++){this.cumsum.push([]);for(let s=0;s<e;s++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let s=1;s<e;s++)this.cumsum[0][s]=this.cumsum[0][s-1]+t[s];for(let r=1;r<s;r++)this.cumsum[r][0]=this.cumsum[r-1][0]+t[r*e];for(let r=1;r<s;r++)for(let s=1;s<e;s++)this.cumsum[r][s]=t[r*e+s]+this.cumsum[r-1][s]+this.cumsum[r][s-1]-this.cumsum[r-1][s-1]}query(t,e,s,r){let a=this.cumsum[r][s];return e>0&&(a-=this.cumsum[e-1][s]),t>0&&(a-=this.cumsum[r][t-1]),t>0&&e>0&&(a+=this.cumsum[e-1][t-1]),a}},e=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,sdThresh:o}=t;if(e-6<0||e+6>=r.width)return null;if(s-6<0||s+6>=r.height)return null;const u=a.query(e-6,s-6,e+6,s+6)/169;let n=i.query(e-6,s-6,e+6,s+6);return n-=2*u*a.query(e-6,s-6,e+6,s+6),n+=169*u**2,n/169<o*o?null:(n=Math.sqrt(n),n)},s=t=>{const{cx:e,cy:s,image:r,imageDataCumsum:a,imageDataSqrCumsum:i,tx:o,ty:u,vlen:n}=t,{data:m,width:h,height:l}=r;if(e-6<0||e+6>=h)return null;if(s-6<0||s+6>=l)return null;const c=a.query(e-6,s-6,e+6,s+6),f=i.query(e-6,s-6,e+6,s+6);let g=0,d=(s-6)*h+(e-6),y=(u-6)*h+(o-6);const M=h-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=m[d]*m[y],d+=1,y+=1;d+=M,y+=M}g-=a.query(o-6,u-6,o+6,u+6)/169*c;let p=f-c*c/169;return 0==p?null:(p=Math.sqrt(p),1*g/(n*p))},r=r=>{const{data:a,height:i,width:o}=r,u=[o*i];for(let t=0;t<u.length;t++)u[t]=!1;const n=new Float32Array(a.length);for(let t=0;t<o;t++)n[t]=-1,n[o*(i-1)+t]=-1;for(let t=0;t<i;t++)n[t*o]=-1,n[t*o+o-1]=-1;for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=0,i=0;for(let t=-1;t<=1;t++)r+=a[s+o*t+1]-a[s+o*t-1],i+=a[s+o+t]-a[s-o+t];r/=768,i/=768,n[s]=Math.sqrt((r*r+i*i)/2)}const m=new Uint32Array(1e3).fill(0),h=[-1,1,-o,o];for(let t=1;t<o-1;t++)for(let e=1;e<i-1;e++){const s=t+o*e;let r=!0;for(let t=0;t<h.length;t++)if(n[s]<=n[s+h[t]]){r=!1;break}if(r){let t=Math.floor(1e3*n[s]);t>999&&(t=999),t<0&&(t=0),m[t]+=1,u[s]=!0}}const l=.02*o*i;let c=999,f=0;for(;c>=0&&(f+=m[c],!(f>l));)c--;for(let t=0;t<u.length;t++)u[t]&&1e3*n[t]<c&&(u[t]=!1);const g=[];for(const[t,e]of a.entries())g[t]=e**2;const d=new t(a,o,i),y=new t(g,o,i),M=new Float32Array(a.length);for(let t=0;t<o;t++)for(let a=0;a<i;a++){const i=a*o+t;if(!u[i]){M[i]=1;continue}const n=e({image:r,cx:t,cy:a,sdThresh:5,imageDataCumsum:d,imageDataSqrCumsum:y});if(null===n){M[i]=1;continue}let m=-1;for(let e=-10;e<=10;e++){for(let i=-10;i<=10;i++){if(i*i+e*e<=4)continue;const o=s({image:r,cx:t+i,cy:a+e,vlen:n,tx:t,ty:a,imageDataCumsum:d,imageDataSqrCumsum:y});if(null!==o&&o>m&&(m=o,m>.95))break}if(m>.95)break}M[i]=m}const p=(t=>{const{image:r,featureMap:a,templateSize:i,searchSize:o,maxSimThresh:u,minSimThresh:n,sdThresh:m,imageDataCumsum:h,imageDataSqrCumsum:l}=t;let{occSize:c}=t;const{data:f,width:g,height:d}=r;c=Math.floor(Math.min(r.width,r.height)/10);const y=3*(2*i+1),M=Math.floor(g/y),p=Math.floor(d/y),w=Math.floor(g/c)*Math.floor(d/c)+M*p,q=[],S=new Float32Array(f.length);for(const[t,e]of a.entries())S[t]=e;let D=0;for(;D<w;){let t=u,a=-1,f=-1;for(let e=0;e<d;e++)for(let s=0;s<g;s++)S[e*g+s]<t&&(t=S[e*g+s],a=s,f=e);if(-1===a)break;const y=e({image:r,cx:a,cy:f,sdThresh:0,imageDataCumsum:h,imageDataSqrCumsum:l});if(null===y){S[f*g+a]=1;continue}if(y/(2*i+1)<m){S[f*g+a]=1;continue}let M=1,p=-1;for(let e=-o;e<=o;e++){for(let i=-o;i<=o;i++){if(i*i+e*e>o*o)continue;if(0===i&&0===e)continue;const u=s({image:r,vlen:y,cx:a+i,cy:f+e,tx:a,ty:f,imageDataCumsum:h,imageDataSqrCumsum:l});if(null!==u){if(u<M&&(M=u,M<n&&M<t))break;if(u>p&&(p=u,p>.99))break}}if(M<n&&M<t||p>.99)break}if(M<n&&M<t||p>.99)S[f*g+a]=1;else{q.push({x:a,y:f}),D+=1;for(let t=-c;t<=c;t++)for(let e=-c;e<=c;e++)f+t<0||f+t>=d||a+e<0||a+e>=g||(S[(f+t)*g+(a+e)]=1)}}return q})({image:r,featureMap:M,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:d,imageDataSqrCumsum:y});return p},a=t=>{const e=Math.min(t.width,t.height);return[256/e,128/e].map((e=>Object.assign((({image:t,ratio:e})=>{const s=Math.round(t.width*e),r=Math.round(t.height*e),a=new Uint8Array(s*r);for(let i=0;i<s;i++){const o=Math.round(1*i/e);let u=Math.round(1*(i+1)/e)-1;u>=t.width&&(u=t.width-1);for(let n=0;n<r;n++){const r=Math.round(1*n/e);let m=Math.round(1*(n+1)/e)-1;m>=t.height&&(m=t.height-1);let h=0,l=0;for(let e=o;e<=u;e++)for(let s=r;s<=m;s++)h+=1*t.data[s*t.width+e],l+=1;a[n*s+i]=Math.floor(h/l)}}return{data:a,width:s,height:r}})({image:t,ratio:e}),{scale:e})))},i=(t,e)=>{const s=[];for(const[a,i]of t.entries()){const t=r(i),o={data:i.data,scale:i.scale,width:i.width,height:i.height,points:t};s.push(o),e(a)}return s};onmessage=t=>{const{data:e}=t;if("compile"===e.type){const{targetImages:t}=e,s=50/t.length;let r=0;const o=[];for(const e of t){const t=a(e),u=s/t.length,n=i(t,(()=>{r+=u,postMessage({type:"progress",percent:r})}));o.push(n)}postMessage({type:"compileDone",list:o})}}})();',"Worker",void 0,void 0)}const n_=({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),s=new Uint8Array(n*r);for(let i=0;i<n;i++){const a=Math.round(1*i/e);let o=Math.round(1*(i+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<r;l++){const r=Math.round(1*l/e);let u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let c=0,h=0;for(let e=a;e<=o;e++)for(let n=r;n<=u;n++)c+=1*t.data[n*t.width+e],h+=1;s[l*n+i]=Math.floor(c/h)}}return{data:s,width:n,height:r}},r_=t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const r=e.map((e=>Object.assign(n_({image:t,ratio:e}),{scale:e})));return r},s_=t=>{const e=Math.min(t.width,t.height),n=[256/e,128/e].map((e=>Object.assign(n_({image:t,ratio:e}),{scale:e})));return n},i_=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},a_=t=>{const{v1:e,v2:n}=t;let r=0;for(let t=0;t<e.length;t++){const s=(e[t]^n[t])>>>0;r+=i_(s)}return r},o_=()=>{const t={seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;const r=e[t];e[t]=e[n],e[n]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}};return t},l_=t=>{const{points:e,pointIndexes:n,centerPointIndex:r,randomizer:s}=t;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const a={};if(!i){const t=(t=>{const{points:e,pointIndexes:n,randomizer:r}=t,s=[];for(let t=0;t<n.length;t++)s.push(t);let i=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let t=0;t<128;t++){r.arrayShuffle({arr:s,sampleSize:8});let l=0;const u=[];for(let t=0;t<n.length;t++){let r=Number.MAX_SAFE_INTEGER;for(let i=0;i<8;i++){const a=n[s[i]],o=a_({v1:e[n[t]].descriptors,v2:e[a].descriptors});o<r&&(u[t]=s[i],r=o)}l+=r}o.push(u),l<i&&(i=l,a=t)}return o[a]})({points:e,pointIndexes:n,randomizer:s});for(let e=0;e<t.length;e++)void 0===a[n[t[e]]]&&(a[n[t[e]]]=[]),a[n[t[e]]].push(n[e])}1===Object.keys(a).length&&(i=!0);const o={centerPointIndex:r};if(i){o.leaf=!0,o.pointIndexes=[];for(let t=0;t<n.length;t++)o.pointIndexes.push(n[t]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach((t=>{o.children.push(l_({points:e,pointIndexes:a[t],centerPointIndex:+t,randomizer:s}))})),o},u_=({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=o_();return{rootNode:l_({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}},c_=class{data;constructor(){this.data=[]}compileImageTargets(t,e){return new Promise((async n=>{const r=[];for(const e of t){const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),i=new Uint8Array(e.width*e.height);for(let t=0;t<i.length;t++){const e=4*t;i[t]=Math.floor((s.data[e]+s.data[e+1]+s.data[e+2])/3)}r.push({data:i,width:e.width,height:e.height})}const s=50/r.length;let i=0;this.data=[];for(let t=0;t<r.length;t++){const n=r[t],a=r_(n),o=s/a.length,l={targetImage:n,imageList:a,matchingData:await this._extractMatchingFeatures(a,(()=>{i+=o,e(i)}))};this.data.push(l)}for(const[t,e]of r.entries()){const n=s_(e);this.data[t].trackingImageList=n}const a=await new Promise((t=>{const n=new e_;n.onmessage=n=>{switch(n.data.type){case"progress":e(50+n.data.percent);break;case"compileDone":t(n.data.list)}},n.postMessage({type:"compile",targetImages:r})}));for(const[t,e]of a.entries())this.data[t].trackingData=e;n(this.data)}))}exportData(){const t=[];for(const e of this.data)t.push({targetImage:{width:e.targetImage.width,height:e.targetImage.height},trackingData:e.trackingData,matchingData:e.matchingData});const e=function(t,e){return void 0===e&&(e=PD),new zD(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat).encode(t)}({v:2,dataList:t});return e}importData(t){const e=function(t,e){return void 0===e&&(e=JD),new ZD(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decode(t)}(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(const t of n)this.data.push({targetImage:t.targetImage,trackingData:t.trackingData,matchingData:t.matchingData});return this.data}async _extractMatchingFeatures(t,e){const n=[];for(const[r,s]of t.entries()){const t=new gD(s.width,s.height);await fu(),_i((()=>{const i=vs(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:a}=t.detect(i),o=a.filter((t=>t.maxima)),l=a.filter((t=>!t.maxima)),u=u_({points:o}),c=u_({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:s.width,height:s.height,scale:s.scale}),e(r)}))}return n}},h_=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},d_=(t,e,n)=>t*e+(1-t)*n,p_=class{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!(this.initialized&&this.tPrev&&this.dxPrev&&this.xPrev))return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map((()=>0)),this.tPrev=t,e;const{xPrev:n,tPrev:r,dxPrev:s}=this,i=t-r,a=h_(i,this.dCutOff),o=[],l=[],u=[];for(let t=0;t<e.length;t++){o[t]=(e[t]-n[t])/i,l[t]=d_(a,o[t],s[t]);const r=this.minCutOff+this.beta*Math.abs(l[t]),c=h_(i,r);u[t]=d_(c,e[t],n[t])}return this.xPrev=u,this.dxPrev=l,this.tPrev=t,u}};function f_(){return t_()('(()=>{"use strict";class t{constructor(t=[],r=e){if(this.data=t,this.length=this.data.length,this.compare=r,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,o=e[t];for(;t>0;){const s=t-1>>1,n=e[s];if(r(o,n)>=0)break;e[t]=n,t=s}e[t]=o}_down(t){const{data:e,compare:r}=this,o=this.length>>1,s=e[t];for(;t<o;){let o=1+(t<<1),n=e[o];const i=o+1;if(i<this.length&&r(e[i],n)<0&&(o=i,n=e[i]),r(n,s)>=0)break;e[t]=n,t=o}e[t]=s}}function e(t,e){return t<e?-1:t>e?1:0}const r=t=>{let e=t-(t>>1&1431655765);return e=(e>>2&858993459)+(858993459&e),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},o=t=>{const{v1:e,v2:o}=t;let s=0;for(let t=0;t<e.length;t++){const n=(e[t]^o[t])>>>0;s+=r(n)}return s},s=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:o,scaleOneOverLogK:s})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*o+c,y:u[2]*r+u[3]*o+f,angle:n,scale:Math.log(i)*s}},n=t=>{const{keywidth:e,keyheight:r,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(e,r),g=Math.floor(e/2),w=Math.floor(r/2),p=[];for(const t of i){const e=t.querypoint.scale,r=t.keypoint.scale;if(0==r){console.error("ERROR divide zero");continue}const o=e/r;p.push(o*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],S=[],v={};for(const[t,e]of i.entries()){const{keypoint:r,querypoint:o}=e,{x:n,y:i,scale:m,angle:p}=s({querypoint:o,keypoint:r,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(n<l||n>=h||i<a||i>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}const d=y*(n-l)/(h-l),k=M*(i-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),T=10*(m- -1)/2;S[t]={binX:d,binY:k,binAngle:R,binScale:T};const I=Math.floor(d-.5),q=Math.floor(k-.5),N=Math.floor(T-.5),C=(Math.floor(R-.5)+c)%c;if(I<0||I+1>=y||q<0||q+1>=M||N<0||N+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){const e=I+t;for(let t=0;t<2;t++){const r=q+t;for(let t=0;t<2;t++){const o=(C+t)%c;for(let t=0;t<2;t++){const s=e+r*y+o*b+(N+t)*x;void 0===v[s]&&(v[s]=0),v[s]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(v).forEach((t=>{const e=+t;v[e]>k&&(k=v[e],R=e)})),k<3)return[];const T=Math.floor(R%x%b%y),I=Math.floor((R-T)%x%b/y),q=Math.floor((R-T-I*y)%x/b),N=Math.floor((R-T-I*y-q*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=S[t];if(Math.abs(e.binX-(T+.5))>=1)continue;if(Math.abs(e.binY-(I+.5))>=1)continue;if(Math.abs(e.binScale-(N+.5))>=1)continue;const r=Math.abs(e.binAngle-(q+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C},i=()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;const o=e[t];e[t]=e[r],e[r]=o}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}}),h=(t,e)=>[t[0]-e[0],t[1]-e[1]],l=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)},u=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),a=(t,e)=>{const r=(t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],o=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*o})(t);if(Math.abs(r)<=e)return null;const o=1/r;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},c=(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8];return[(e[0]*t[0]+e[1]*t[1]+e[2])/r,(e[3]*t[0]+e[4]*t[1]+e[5])/r]},f=Object.prototype.toString;function m(t){return f.call(t).endsWith("Array]")}function g(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]>i&&(i=t[h]);return i}function w(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]<i&&(i=t[h]);return i}function p(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!m(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!m(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=w(t),s=g(t);if(o===s)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var n=r.min,i=void 0===n?r.autoMinMax?o:0:n,h=r.max,l=void 0===h?r.autoMinMax?s:1:h;if(i>=l)throw new RangeError("min option must be smaller than max option");for(var u=(l-i)/(s-o),a=0;a<t.length;a++)e[a]=(t[a]-o)*u+i;return e}const d=" ".repeat(2),y=" ".repeat(4);function M(t,e={}){const{maxRows:r=15,maxColumns:o=10,maxNumSize:s=8}=e;return`${t.constructor.name} {\\n${d}[\\n${y}${function(t,e,r,o){const{rows:s,columns:n}=t,i=Math.min(s,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let s=0;s<h;s++)r.push(b(t.get(e,s),o));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==s&&l.push(`... ${s-e} more rows`),l.join(`\\n${y}`)}(t,r,o,s)}\\n${d}]\\n${d}rows: ${t.rows}\\n${d}columns: ${t.columns}\\n}`}function b(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const o=t.toPrecision(e-2);if(o.length<=e)return o;const s=t.toExponential(e-2),n=s.indexOf("e"),i=s.slice(n);return s.slice(0,e-i.length)+i}function x(t,e,r){let o=r?t.rows:t.rows-1;if(e<0||e>o)throw new RangeError("Row index out of range")}function E(t,e,r){let o=r?t.columns:t.columns-1;if(e<0||e>o)throw new RangeError("Column index out of range")}function S(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function v(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function k(t,e,r,o,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(T("startRow",e),T("endRow",r),T("startColumn",o),T("endColumn",s),e>r||o>s||e<0||e>=t.rows||r<0||r>=t.rows||o<0||o>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function R(t,e=0){let r=[];for(let o=0;o<t;o++)r.push(e);return r}function T(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function I(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class q{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let o=new C(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)o.set(s,t,r[s*e+t]);return o}static rowVector(t){let e=new C(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new C(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new C(t,e)}static ones(t,e){return new C(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:o=Math.random}=r;let s=new C(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)s.set(r,t,o());return s}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:o=0,max:s=1e3,random:n=Math.random}=r;if(!Number.isInteger(o))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(o>=s)throw new RangeError("min must be smaller than max");let i=s-o,h=new C(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=o+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let o=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<o;t++)s.set(t,t,r);return s}static diag(t,e,r){let o=t.length;void 0===e&&(e=o),void 0===r&&(r=e);let s=Math.min(o,e,r),n=this.zeros(e,r);for(let e=0;e<s;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new C(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new this(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return s}static checkMatrix(t){return q.isMatrix(t)?t:new C(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);t++}return o}isReducedEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(o=!1);t++}return o}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let o=e;for(let s=e;s<t.rows;s++)t.get(s,r)>t.get(o,r)&&(o=s);if(0===t.get(o,r))r++;else{t.swapRows(e,o);let s=t.get(e,r);for(let o=r;o<t.columns;o++)t.set(e,o,t.get(e,o)/s);for(let o=e+1;o<t.rows;o++){let s=t.get(o,r)/t.get(e,r);t.set(o,r,0);for(let n=r+1;n<t.columns;n++)t.set(o,n,t.get(o,n)-t.get(e,n)*s)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,o=r-1;for(;o>=0;)if(0===t.maxRow(o))o--;else{let s=0,n=!1;for(;s<r&&!1===n;)1===t.get(o,s)?n=!0:s++;for(let r=0;r<o;r++){let n=t.get(r,s);for(let i=s;i<e;i++){let e=t.get(r,i)-n*t.get(o,i);t.set(r,i,e)}}o--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let o=new C(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)o.setSubMatrix(this,this.rows*t,this.columns*e);return o}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){x(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return C.rowVector(this.getRow(t))}setRow(t,e){x(this,t),e=S(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){x(this,t),x(this,e);for(let r=0;r<this.columns;r++){let o=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,o)}return this}getColumn(t){E(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return C.columnVector(this.getColumn(t))}setColumn(t,e){E(this,t),e=v(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){E(this,t),E(this,e);for(let r=0;r<this.rows;r++){let o=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,o)}return this}addRowVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=v(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){x(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){E(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){I(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)>t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){I(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)<t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}maxRow(t){if(x(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){x(this,t),I(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)>e&&(e=this.get(t,o),r[1]=o);return r}minRow(t){if(x(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){x(this,t),I(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)<e&&(e=this.get(t,o),r[1]=o);return r}maxColumn(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){E(this,t),I(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)>e&&(e=this.get(o,t),r[0]=o);return r}minColumn(t){if(E(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){E(this,t),I(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)<e&&(e=this.get(o,t),r[0]=o);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){q.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let o=0;o<e.length;o++)r+=e[o]*t[o];return r}mmul(t){t=C.checkMatrix(t);let e=this.rows,r=this.columns,o=t.columns,s=new C(e,o),n=new Float64Array(r);for(let i=0;i<o;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let o=0;o<r;o++)e+=this.get(t,o)*n[o];s.set(t,i,e)}}return s}strassen2x2(t){t=C.checkMatrix(t);let e=new C(2,2);const r=this.get(0,0),o=t.get(0,0),s=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(o+u),c=(i+l)*o,f=r*(n-u),m=l*(h-o),g=(r+s)*u,w=a+m-g+(s-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(o+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=C.checkMatrix(t);let e=new C(3,3);const r=this.get(0,0),o=this.get(0,1),s=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),S=r*c,v=(-r+l+u)*(c-m+p),k=(-r+l)*(m-p),R=(l+u)*(-c+m),T=(-s+u+a)*(w+d-y),I=(s-a)*(w-y),q=s*d,N=(u+a)*(-d+y),A=(-s+i+h)*(p+d-M),P=(s-h)*(p-M),V=(i+h)*(-d+M),z=S+q+o*g,F=(r+o+s-n-i-u-a)*w+x+E+S+T+q+N,j=S+v+R+(r+o+s-i-h-l-u)*p+q+A+V,_=b+i*(-c+f+g-w-p-d+M)+x+S+q+A+P,$=b+x+E+S+h*y,D=q+A+P+V+n*m,H=S+v+k+u*(-c+m+g-w-p-d+y)+T+I+q,U=T+I+q+N+l*f,L=S+v+k+R+a*M;return e.set(0,0,z),e.set(0,1,F),e.set(0,2,j),e.set(1,0,_),e.set(1,1,$),e.set(1,2,D),e.set(2,0,H),e.set(2,1,U),e.set(2,2,L),e}mmulStrassen(t){t=C.checkMatrix(t);let e=this.clone(),r=e.rows,o=e.columns,s=t.rows,n=t.columns;function i(t,e,r){let o=t.rows,s=t.columns;if(o===e&&s===r)return t;{let o=q.zeros(e,r);return o=o.setSubMatrix(t,0,0),o}}o!==s&&console.warn(`Multiplying ${r} x ${o} and ${s} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,s),l=Math.max(o,n);return e=i(e,h,l),function t(e,r,o,s){if(o<=512||s<=512)return e.mmul(r);o%2==1&&s%2==1?(e=i(e,o+1,s+1),r=i(r,o+1,s+1)):o%2==1?(e=i(e,o+1,s),r=i(r,o+1,s)):s%2==1&&(e=i(e,o,s+1),r=i(r,o,s+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(q.add(l,g),q.add(u,w),n,h),d=t(q.add(f,g),u,n,h),y=t(l,q.sub(c,w),n,h),M=t(g,q.sub(m,u),n,h),b=t(q.add(l,a),w,n,h),x=t(q.sub(f,l),q.add(u,c),n,h),E=t(q.sub(a,g),q.add(m,w),n,h),S=q.add(p,M);S.sub(b),S.add(E);let v=q.add(y,b),k=q.add(d,M),R=q.sub(p,d);R.add(y),R.add(x);let T=q.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(v,S.rows,0),T=T.setSubMatrix(k,0,S.columns),T=T.setSubMatrix(R,S.rows,S.columns),T.subMatrix(0,o-1,0,s-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new C(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&p(s,{min:e,max:r,output:s}),o.setRow(t,s)}return o}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new C(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&p(s,{min:e,max:r,output:s}),o.setColumn(t,s)}return o}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),o=this.get(e,this.columns-1-r);this.set(e,r,o),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),o=this.get(this.rows-1-r,e);this.set(r,e,o),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=C.checkMatrix(t);let e=this.rows,r=this.columns,o=t.rows,s=t.columns,n=new C(e*o,r*s);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<o;r++)for(let h=0;h<s;h++)n.set(o*i+r,s*e+h,this.get(i,e)*t.get(r,h));return n}kroneckerSum(t){if(t=C.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,o=this.kroneckerProduct(C.eye(r,r)),s=C.eye(e,e).kroneckerProduct(t);return o.add(s)}transpose(){let t=new C(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=N){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=N){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,o){k(this,t,e,r,o);let s=new C(e-t+1,o-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=o;e++)s.set(n-t,e-r,this.get(n,e));return s}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let o=new C(t.length,r-e+1);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);o.set(s,n-e,this.get(t[s],n))}return o}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let o=new C(r-e+1,t.length);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);o.set(n-e,s,this.get(n,t[s]))}return o}setSubMatrix(t,e,r){if((t=C.checkMatrix(t)).isEmpty())return this;k(this,e,e+t.rows-1,r,r+t.columns-1);for(let o=0;o<t.rows;o++)for(let s=0;s<t.columns;s++)this.set(e+o,r+s,t.get(o,s));return this}selection(t,e){!function(t,e){if(!m(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}(this,t),function(t,e){if(!m(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}(this,e);let r=new C(t.length,e.length);for(let o=0;o<t.length;o++){let s=t[o];for(let t=0;t<e.length;t++){let n=e[t];r.set(o,t,this.get(s,n))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new C(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=R(t.rows);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]+=t.get(r,o);return e}(this);case"column":return function(t){let e=R(t.columns);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]+=t.get(r,o);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e+=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=R(t.rows,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]*=t.get(r,o);return e}(this);case"column":return function(t){let e=R(t.columns,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]*=t.get(r,o);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e*=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(i,e)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case"column":if(!m(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(e,i)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const o=t.rows,s=t.columns,n=o*s;let i=0,h=0,l=0;for(let e=0;e<o;e++)for(let o=0;o<s;o++)l=t.get(e,o)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[r])}(this,r),this;case"column":if(!m(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[o])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let o=0;for(let e=0;e<t.columns;e++)o+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let o=0;for(let e=0;e<t.rows;e++)o+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(o))}return e}(this);else if(!m(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[o])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let o=0;o<t.columns;o++)for(let s=0;s<t.rows;s++)r+=Math.pow(t.get(s,o),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return M(this,t)}}function N(t,e){return t-e}q.prototype.klass="Matrix","undefined"!=typeof Symbol&&(q.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return M(this)}),q.random=q.rand,q.randomInt=q.randInt,q.diagonal=q.diag,q.prototype.diagonal=q.prototype.diag,q.identity=q.eye,q.prototype.negate=q.prototype.neg,q.prototype.tensorProduct=q.prototype.kroneckerProduct;class C extends q{constructor(t,e){if(super(),C.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!m(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let o=0;o<t;o++){if(r[o].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[o]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return x(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),x(this,t,!0),e=Float64Array.from(S(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){E(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let o=0;o<t;o++)r[o]=this.data[e][o];for(let o=t+1;o<this.columns;o++)r[o-1]=this.data[e][o];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),E(this,t,!0),e=v(this,e);for(let r=0;r<this.rows;r++){const o=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)o[s]=this.data[r][s];for(o[s++]=e[r];s<this.columns+1;s++)o[s]=this.data[r][s-1];this.data[r]=o}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(q,C);class A extends q{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}class P{constructor(t){let e,r,o,s,n,i,h,l,u,a=(t=A.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,o=0;o<u;o++)n+=a.get(e,o)*l[o];l[e]-=n,a.set(e,r,l[e])}for(s=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[s])&&(s=e);if(s!==r){for(o=0;o<f;o++)i=a.get(s,o),a.set(s,o,a.get(r,o)),a.set(r,o,i);h=m[s],m[s]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=C.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,o,s,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(s=0;s<h;s++)for(r=s+1;r<h;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s));for(s=h-1;s>=0;s--){for(o=0;o<n;o++)i.set(s,o,i.get(s,o)/e.get(s,s));for(r=0;r<s;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let o=0;o<r;o++)e*=t.get(o,o);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new C(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s>e?o.set(s,e,t.get(s,e)):s===e?o.set(s,e,1):o.set(s,e,0);return o}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new C(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s<=e?o.set(s,e,t.get(s,e)):o.set(s,e,0);return o}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function V(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class z{constructor(t){let e,r,o,s,n=(t=A.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(o=0;o<h;o++){let t=0;for(e=o;e<i;e++)t=V(t,n.get(e,o));if(0!==t){for(n.get(o,o)<0&&(t=-t),e=o;e<i;e++)n.set(e,o,n.get(e,o)/t);for(n.set(o,o,n.get(o,o)+1),r=o+1;r<h;r++){for(s=0,e=o;e<i;e++)s+=n.get(e,o)*n.get(e,r);for(s=-s/n.get(o,o),e=o;e<i;e++)n.set(e,r,n.get(e,r)+s*n.get(e,o))}}l[o]=-t}this.QR=n,this.Rdiag=l}solve(t){t=C.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let o,s,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(s=0;s<h;s++){for(i=0,o=n;o<r;o++)i+=e.get(o,n)*l.get(o,s);for(i=-i/e.get(n,n),o=n;o<r;o++)l.set(o,s,l.get(o,s)+i*e.get(o,n))}for(n=u-1;n>=0;n--){for(s=0;s<h;s++)l.set(n,s,l.get(n,s)/this.Rdiag[n]);for(o=0;o<n;o++)for(s=0;s<h;s++)l.set(o,s,l.get(o,s)-l.get(n,s)*e.get(o,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,o=r.columns,s=new C(o,o);for(t=0;t<o;t++)for(e=0;e<o;e++)t<e?s.set(t,e,r.get(t,e)):t===e?s.set(t,e,this.Rdiag[t]):s.set(t,e,0);return s}get orthogonalMatrix(){let t,e,r,o,s=this.QR,n=s.rows,i=s.columns,h=new C(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==s.get(r,r)){for(o=0,t=r;t<n;t++)o+=s.get(t,r)*h.get(t,e);for(o=-o/s.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+o*s.get(t,r))}}return h}}class F{constructor(t,e={}){if((t=A.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,o=t.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(s),u=Boolean(n),a=!1;if(r<o)if(i){h=t.transpose(),r=h.rows,o=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,o),f=Math.min(r+1,o),m=new Float64Array(f),g=new C(r,c),w=new C(o,o),p=new Float64Array(o),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,o),b=Math.max(0,Math.min(o-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=V(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<o;e++){if(t<M&&0!==m[t]){let o=0;for(let s=t;s<r;s++)o+=h.get(s,t)*h.get(s,e);o=-o/h.get(t,t);for(let s=t;s<r;s++)h.set(s,e,h.get(s,e)+o*h.get(s,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<o;e++)p[t]=V(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<o;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<o;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<o;e++){let o=-p[e]/p[t+1];for(let s=t+1;s<r;s++)h.set(s,e,h.get(s,e)+o*d[s])}}if(u)for(let e=t+1;e<o;e++)w.set(e,t,p[e])}}let E=Math.min(o,r+1);if(M<o&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let o=0;for(let s=t;s<r;s++)o+=g.get(s,t)*g.get(s,e);o=-o/g.get(t,t);for(let s=t;s<r;s++)g.set(s,e,g.get(s,e)+o*g.get(s,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=o-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<o;e++){let r=0;for(let s=t+1;s<o;s++)r+=w.get(s,t)*w.get(s,e);r=-r/w.get(t+1,t);for(let s=t+1;s<o;s++)w.set(s,e,w.get(s,e)+r*w.get(s,t))}for(let e=0;e<o;e++)w.set(e,t,0);w.set(t,t,1)}let S=E-1,v=0,k=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+k*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=k*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let s=V(m[r],e),n=m[r]/s,i=e/s;if(m[r]=s,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<o;t++)s=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,s)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let o=t;o<E;o++){let s=V(m[o],e),n=m[o]/s,i=e/s;if(m[o]=s,e=-i*p[o],p[o]=n*p[o],l)for(let e=0;e<r;e++)s=n*g.get(e,o)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,o)+n*g.get(e,t-1)),g.set(e,o,s)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),s=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+s)*(n-s)+i*i)/2,f=s*i*(s*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+s)*(h-s)+d,M=h*a;for(let e=t;e<E-1;e++){let s=V(y,M);0===s&&(s=Number.MIN_VALUE);let n=y/s,i=M/s;if(e!==t&&(p[e-1]=s),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<o;t++)s=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,s);if(s=V(y,M),0===s&&(s=Number.MIN_VALUE),n=y/s,i=M/s,m[e]=s,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)s=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,s)}p[E-2]=y,v+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=S;e++)w.set(e,t,-w.get(e,t));for(;t<S&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<o-1)for(let r=0;r<o;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let o=0;o<r;o++)e=g.get(o,t+1),g.set(o,t+1,g.get(o,t)),g.set(o,t,e);t++}v=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=o,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,o=this.s.length,s=C.zeros(o,o);for(let t=0;t<o;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(s),l=i.rows,u=n.rows,a=C.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let s=0;s<o;s++)r+=h.get(t,s)*n.get(e,s);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(C.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,o=t.columns,s=new C(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<o;r++)Math.abs(this.s[r])>e&&s.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new C(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let o=0;o<h;o++)r+=s.get(t,o)*n.get(e,o);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let o=0,s=r.length;o<s;o++)r[o]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return C.diag(this.s)}}function j(t,e=!1){return t=A.checkMatrix(t),e?new F(t).inverse():function(t,e,r=!1){return t=A.checkMatrix(t),e=A.checkMatrix(e),r?new F(t).solve(e):t.isSquare()?new P(t).solve(e):new z(t).solve(e)}(t,C.eye(t.rows))}const _=t=>{let e=0,r=0;for(const o of t)e+=o[0],r+=o[1];const o=e/t.length,s=r/t.length;let n=0;for(const e of t){const t=e[0]-o,r=e[1]-s;n+=Math.sqrt(t*t+r*r)}const i=Math.sqrt(2)*t.length/n,h=[];for(const e of t)h.push([(e[0]-o)*i,(e[1]-s)*i]);return{normPoints:h,param:{meanX:o,meanY:s,s:i}}},$=(t,e)=>{const{normPoints:r,param:o}=_(t),{normPoints:s,param:n}=_(e),i=s.length,h=[],l=[];for(let t=0;t<i;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*s[t][0],-r[t][1]*s[t][0]],o=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*s[t][1],-r[t][1]*s[t][1]];h.push(e),h.push(o),l.push([s[t][0]]),l.push([s[t][1]])}try{const t=new C(h),e=new C(l),r=t.transpose(),s=r.mmul(t),i=r.mmul(e),u=((t,e,r)=>{const o=r.s*r.meanX,s=r.s*r.meanY,n=[t[0]+o*t[6],t[1]+o*t[7],(t[0]+o*t[6])*-e.meanX+(t[1]+o*t[7])*-e.meanY+(t[2]+o)/e.s,t[3]+s*t[6],t[4]+s*t[7],(t[3]+s*t[6])*-e.meanX+(t[4]+s*t[7])*-e.meanY+(t[5]+s)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(j(s).mmul(i).to1DArray(),o,n);return u}catch(t){return null}},D=({H:t,testPoints:e,keyframe:r})=>{const o=a(t,1e-5);if(null===o)return!1;const s=[];for(const t of e)s.push(c(t,o));return!(((t,e,r,o)=>{const s=h(e,t),n=h(r,t),i=h(o,t),u=h(e,r),a=h(o,r),c=l(s,n),f=l(n,i),m=l(s,i),g=l(u,a);return Math.min(c,f,m,g)})(s[0],s[1],s[2],s[3])<r.width*r.height*1e-4||!((t,e,r,o)=>{const s=u(t,e,r)<=0;return u(e,r,o)<=0===s&&u(r,o,t)<=0===s&&u(o,t,e)<=0===s})(s[0],s[1],s[2],s[3]))},H=({inH:t})=>{const e=1/t[8],r=[];for(let o=0;o<8;o++)r[o]=t[o]*e;return r[8]=1,r},U=({H:t,srcPoint:e,dstPoint:r,oneOverScaleSqr:o})=>{const s=c(e,t),n=[s[0]-r[0],s[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*o)},L=({H:t,testPoints:e})=>{const r=[];for(const[o,s]of e.entries())r[o]=c(s,t);for(let t=0;t<e.length;t++){const a=t,c=(t+1)%e.length,f=(t+2)%e.length;if(o=e[a],s=e[c],n=e[f],i=r[a],h=r[c],l=r[f],u(o,s,n)>0!=u(i,h,l)>0)return!1}var o,s,n,i,h,l;return!0},O=t=>{const{dstPoints:e,keyframe:r,srcPoints:o,quickMode:s}=t,n=[[0,0],[r.width,0],[r.width,r.height],[0,r.height]];if(o.length<4)return null;const h=Math.min(10,o.length),l=i(),a=o.map(((t,e)=>e));l.arrayShuffle({arr:a,sampleSize:a.length});const c=s?10:20,f=2*c;let m=0;const g=[];for(;m<f&&g.length<c;){if(m+=1,l.arrayShuffle({arr:a,sampleSize:4}),w=o[a[0]],p=o[a[1]],d=o[a[2]],y=o[a[3]],M=e[a[0]],b=e[a[1]],x=e[a[2]],E=e[a[3]],u(w,p,d)>0!=u(M,b,x)>0||u(p,d,y)>0!=u(b,x,E)>0||u(d,y,w)>0!=u(x,E,M)>0||u(y,w,p)>0!=u(E,M,b)>0)continue;const t=$([o[a[0]],o[a[1]],o[a[2]],o[a[3]]],[e[a[0]],e[a[1]],e[a[2]],e[a[3]]]);null!==t&&L({H:t,testPoints:n})&&g.push(t)}var w,p,d,y,M,b,x,E;if(0===g.length)return null;const S=[];for(const t of g)S.push({H:t,cost:0});let v=h;for(let t=0;t<o.length&&S.length>2;t+=v){v=Math.min(h,o.length-t);const r=t+v;for(let s=0;s<S.length;s++)for(let n=t;n<r;n++){const t=U({H:S[s].H,srcPoint:o[n],dstPoint:e[n],oneOverScaleSqr:1e4});S[s].cost+=t}S.sort(((t,e)=>t.cost-e.cost)),S.splice(-Math.floor((S.length+1)/2))}let k=null;for(let t=0;t<S.length;t++){const e=H({inH:S[t].H});if(D({H:e,testPoints:n,keyframe:r})){k=e;break}}return k},X=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(const e of t.pointIndexes)n.push(e);return}const h=[];for(const s of t.children){const t=s.centerPointIndex;if(null==t)continue;const n=o({v1:e[t].descriptors,v2:r.descriptors});h.push(n)}const l=Math.min(Number.MAX_SAFE_INTEGER,...h);for(const[e,r]of t.children.entries())h[e]!==l&&s.push({node:r,d:h[e]});for(const[o,u]of t.children.entries())h[o]===l&&X({node:u,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const t=s.pop();if(t){const{node:o}=t;X({node:o,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}}},Y=t=>{const{H:e,matches:r,threshold:o}=t,s=o**2,n=[];for(const t of r){const{querypoint:r,keypoint:o}=t,i=c([o.x,o.y],e);(i[0]-r.x)*(i[0]-r.x)+(i[1]-r.y)*(i[1]-r.y)<=s&&n.push(t)}return n},G=e=>{const{keyframe:r,querypoints:s,querywidth:i,queryheight:h,debugMode:l}=e,u={},f=(e=>{const{keyframe:r,querypoints:s}=e,n=[];for(const e of s){const s=e.maxima?r.maximaPoints:r.minimaPoints;if(0===s.length)continue;const i=e.maxima?r.maximaPointsCluster.rootNode:r.minimaPointsCluster.rootNode,h=[],l=new t([],((t,e)=>t.d-e.d));X({node:i,keypoints:s,querypoint:e,queue:l,keypointIndexes:h,numPop:0});let u=-1,a=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let t=0;t<h.length;t++){const r=s[h[t]],n=o({v1:r.descriptors,v2:e.descriptors});n<a?(c=a,a=n,u=h[t]):n<c&&(c=n)}-1!==u&&(c===Number.MAX_SAFE_INTEGER||1*a/c<.7)&&n.push({querypoint:e,keypoint:s[u]})}return n})({keyframe:r,querypoints:s});if(l&&(u.matches=f),f.length<6)return{debugExtra:u};const m=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:f});l&&(u.houghMatches=m);const g=O({srcPoints:m.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:m.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===g)return{debugExtra:u};const w=Y({H:g,matches:m,threshold:3});if(l&&(u.inlierMatches=w),w.length<6)return{debugExtra:u};const p=a(g,1e-5);if(!p)return{debugExtra:u};const d=(t=>{const{keyframe:e,querypoints:r,HInv:s}=t,n=[];for(const t of r){const r=c([t.x,t.y],s);let i=-1,h=Number.MAX_SAFE_INTEGER,l=Number.MAX_SAFE_INTEGER;const u=t.maxima?e.maximaPoints:e.minimaPoints;for(const[e,s]of u.entries()){if((s.x-r[0])**2+(s.y-r[1])**2>100)continue;const n=o({v1:s.descriptors,v2:t.descriptors});n<h?(l=h,h=n,i=e):n<l&&(l=n)}-1!==i&&(l===Number.MAX_SAFE_INTEGER||1*h/l<.7)&&n.push({querypoint:t,keypoint:u[i]})}return n})({keyframe:r,querypoints:s,HInv:p});l&&(u.matches2=d);const y=n({keywidth:r.width,keyheight:r.height,querywidth:i,queryheight:h,matches:d});l&&(u.houghMatches2=y);const M=O({srcPoints:y.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:y.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:r});if(null===M)return{debugExtra:u};const b=Y({H:M,matches:y,threshold:3});return l&&(u.inlierMatches2=b),{H:M,matches:b,debugExtra:u}},Q=(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],W=(t,e,r,o=0)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]}),J=(t,e,r,o=0)=>{const s=W(t,e,r,o),{x:n,y:i,z:h}=s;return{x:n/h,y:i/h}},K=[[],[],[]],B=[[],[]],Z=[[],[],[]],tt=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o,inlierProb:s})=>{const n=s<1;let i=t,h=0,l=0;const u=new Array(r.length),a=new Array(r.length),c=new Array(r.length),f=new Array(r.length);for(let t=0;t<=10;t++){const m=Q(e,i);for(let t=0;t<r.length;t++){const e=J(m,r[t].x,r[t].y,r[t].z),s=o[t].x-e.x,n=o[t].y-e.y;c[t]=s,f[t]=n,u[t]=s**2+n**2}let g=0;if(l=0,n){const t=Math.max(3,Math.floor(r.length*s)-1);for(let t=0;t<r.length;t++)a[t]=u[t];a.sort(((t,e)=>t-e)),g=Math.max(4*a[t],16);for(let t=0;t<r.length;t++)a[t]>g?l+=g/6:l+=g/6*(1-(1-a[t]/g)*(1-a[t]/g)*(1-a[t]/g))}else l=u.reduce(((t,e)=>t+e),0);if(l/=r.length,l<.1)break;if(t>0&&l/h>.99)break;if(10===t)break;h=l;const w=[],p=[];for(let t=0;t<r.length;t++){if(n&&u[t]>g)continue;const o=ot({modelViewProjectionTransform:m,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-u[t]/g)*(1-u[t]/g);for(let t=0;t<2;t++)for(let r=0;r<6;r++)o[t][r]*=e;w.push([c[t]*e]),w.push([f[t]*e])}else w.push([c[t]]),w.push([f[t]]);for(let t=0;t<o.length;t++)p.push(o[t])}const d=rt({dU:w,J_U_S:p});if(null===d)break;i=et({modelViewTransform:i,dS:d})}return{modelViewTransform:i,err:l}},et=({modelViewTransform:t,dS:e})=>{let r,o,s,n=e[0]**2+e[1]**2+e[2]**2;n<1e-6?(r=1,o=0,s=0,n=0):(n=Math.sqrt(n),r=e[0]/n,o=e[1]/n,s=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;K[0][0]=r*r*l+i,K[0][1]=r*o*l-s*h,K[0][2]=r*s*l+o*h,K[0][3]=e[3],K[1][0]=o*r*l+s*h,K[1][1]=o*o*l+i,K[1][2]=o*s*l-r*h,K[1][3]=e[4],K[2][0]=s*r*l-o*h,K[2][1]=s*o*l+r*h,K[2][2]=s*s*l+i,K[2][3]=e[5];const u=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)u[e][r]=t[e][0]*K[0][r]+t[e][1]*K[1][r]+t[e][2]*K[2][r];u[e][3]+=t[e][3]}return u},rt=({dU:t,J_U_S:e})=>{const r=new C(e),o=new C(t),s=r.transpose(),n=s.mmul(r),i=s.mmul(o);let h;try{h=j(n)}catch(t){return null}return h.mmul(i).to1DArray()},ot=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:o})=>{const s=e,{x:n,y:i,z:h}=o,l=W(t,n,i,h),u=l.z*l.z;B[0][0]=r[0][0]*l.z/u,B[0][1]=r[0][1]*l.z/u,B[0][2]=(r[0][2]*l.z-r[2][2]*l.x)/u,B[1][0]=r[1][0]*l.z/u,B[1][1]=r[1][1]*l.z/u,B[1][2]=(r[1][2]*l.z-r[2][2]*l.y)/u,Z[0][0]=s[0][2]*i,Z[0][1]=-s[0][2]*n,Z[0][2]=s[0][1]*n-s[0][0]*i,Z[0][3]=s[0][0],Z[0][4]=s[0][1],Z[0][5]=s[0][2],Z[1][0]=s[1][2]*i,Z[1][1]=-s[1][2]*n,Z[1][2]=s[1][1]*n-s[1][0]*i,Z[1][3]=s[1][0],Z[1][4]=s[1][1],Z[1][5]=s[1][2],Z[2][0]=s[2][2]*i,Z[2][1]=-s[2][2]*n,Z[2][2]=s[2][1]*n-s[2][0]*i,Z[2][3]=s[2][0],Z[2][4]=s[2][1],Z[2][5]=s[2][2];const a=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){a[t][e]=0;for(let r=0;r<3;r++)a[t][e]+=B[t][r]*Z[r][e]}return a};let st,nt,it=[],ht=!1;onmessage=t=>{const{data:e}=t;switch(e.type){case"setup":(t=>{it=t.matchingDataList,ht=t.debugMode,st=new class{queryWidth;queryHeight;debugMode;constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){const r={frames:[]};let o=null;for(const[s,n]of t.entries()){const t=G({keyframe:n,querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});if(!t)continue;const{H:i,matches:h,debugExtra:l}=t;r.frames.push(l),i&&(null===o||(o?.matches?.length??0<h.length))&&(o={keyframeIndex:s,matches:h,H:i})}if(null===o||!o.matches)return{keyframeIndex:-1,debugExtra:r};const s=[],n=[],i=t[o.keyframeIndex];for(const t of o.matches){const e=t.querypoint,r=t.keypoint;s.push({x:e.x,y:e.y}),n.push({x:(r.x+.5)/i.scale,y:(r.y+.5)/i.scale,z:0})}return{keyframeIndex:o.keyframeIndex,screenCoords:s,worldCoords:n,debugExtra:r}}}(t.inputWidth,t.inputHeight,ht),nt=new class{projectionTransform;constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return(t=>{const{projectionTransform:e,screenCoords:r,worldCoords:o}=t,s=$(o.map((t=>[t.x,t.y])),r.map((t=>[t.x,t.y])));if(!s)return null;const n=new C([[s[0],s[1],s[2]],[s[3],s[4],s[5]],[s[6],s[7],s[8]]]),i=j(new C(e)).mmul(n).to1DArray(),h=Math.sqrt(i[0]*i[0]+i[3]*i[3]+i[6]*i[6]),l=Math.sqrt(i[1]*i[1]+i[4]*i[4]+i[7]*i[7]),u=(h+l)/2,a=[];a[0]=i[0]/h,a[3]=i[3]/h,a[6]=i[6]/h,a[1]=i[1]/l,a[4]=i[4]/l,a[7]=i[7]/l,a[2]=a[3]*a[7]-a[6]*a[4],a[5]=a[6]*a[1]-a[0]*a[7],a[8]=a[0]*a[4]-a[1]*a[3];const c=Math.sqrt(a[2]*a[2]+a[5]*a[5]+a[8]*a[8]);a[2]/=c,a[5]/=c,a[8]/=c;const f=[];return f[0]=i[2]/u,f[1]=i[5]/u,f[2]=i[8]/u,[[a[0],a[1],a[2],f[0]],[a[3],a[4],a[5],f[1]],[a[6],a[7],a[8],f[2]]]})({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return(({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o})=>{const s=r.reduce(((t,e)=>t+e.x),0)/r.length,n=r.reduce(((t,e)=>t+e.y),0)/r.length,i=[];for(const t of r)i.push({x:t.x-s,y:t.y-n,z:t.z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*s+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*s+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*s+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(const t of l){const r=tt({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:o,inlierProb:t});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*s-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*s-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*s-a[2][1]*n,a)})({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}(t.projectionTransform)})(e);break;case"match":(t=>{const e=t.targetIndexes;let r=-1,o=null,s=null;for(const n of e){const{keyframeIndex:e,screenCoords:i,worldCoords:h,debugExtra:l}=st.matchDetection(it[n],t.featurePoints);if(s=l,-1!==e){const t=nt.estimate({screenCoords:i,worldCoords:h});t&&(r=n,o=t);break}}postMessage({type:"matchDone",targetIndex:r,modelViewTransform:o,debugExtra:s})})(e);break;case"trackUpdate":(t=>{const{modelViewTransform:e,worldCoords:r,screenCoords:o}=t,s=nt.refineEstimate({initialModelViewTransform:e,screenCoords:o,worldCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})})(e)}}})();',"Worker",void 0,void 0)}const m_="updateMatrix",g_=class{inputWidth;inputHeight;maxTrack;filterMinCF;filterBeta;warmupTolerance;missTolerance;cropDetector;inputLoader;markerDimensions;onUpdate;debugMode;processingVideo;interestedTargetIndex;projectionTransform;projectionMatrix;worker;workerMatchDone;workerTrackDone;trackingStates;tracker;constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:s=1,warmupTolerance:i=null,missTolerance:a=null,filterMinCF:o=null,filterBeta:l=null}){this.inputHeight=e,this.inputWidth=t,this.maxTrack=s,this.filterMinCF=fD(o)?.001:o,this.filterBeta=fD(l)?1e3:l,this.warmupTolerance=fD(i)?5:i,this.missTolerance=fD(a)?5:a,this.cropDetector=new class{width;height;debugMode;cropSize;lastRandomIndex;detector;constructor(t,e,n=!1){this.width=t,this.height=e,this.debugMode=n,this.cropSize=this._getCropSize(t,e),this.detector=new gD(t,e,n),this.lastRandomIndex=4}_getCropSize(t,e){const n=Math.min(t,e)/2;return Math.pow(2,Math.round(Math.log(n)/Math.log(2)))}async detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=await this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,s,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:i}=this.detector.detect(r);return s.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(i.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:i}}}(this.inputWidth,this.inputHeight,r),this.inputLoader=new class{width;height;texShape;context;program;tempPixelHandle;constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const r=Pi();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=uC.PIXELS}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=Pi();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===j().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=Pi().compileAndRun(t,e);return Mi().makeTensorFromTensorInfo(n)}}(this.inputWidth,this.inputHeight),this.markerDimensions=[],this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,c=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new f_,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{switch(t.data.type){case"matchDone":this.workerMatchDone?.(t.data);break;case"trackUpdateDone":this.workerTrackDone?.(t.data)}}}showTFStats(){console.log(Di().numTensors),console.table(Di())}addImageTargets(t){return new Promise((async e=>{const n=await fetch(t),r=await n.arrayBuffer();e(this.addImageTargetsFromBuffer(r))}))}addImageTargetsFromBuffer(t){const e=(new c_).importData(t),n=[],r=[],s=[];for(const t of e)r.push(t.matchingData),n.push(t.trackingData),s.push([t.targetImage.width,t.targetImage.height]);return this.tracker=new class{projectionTransform;trackingKeyframeList;debugMode;kernelCaches;featurePointsListT;imagePixelsListT;imagePropertiesListT;constructor(t,e,n,r,s,i=!1){this.projectionTransform=n,this.debugMode=i,this.trackingKeyframeList=e.map((t=>t[0]));const a=Math.max(...this.trackingKeyframeList.map((({points:t})=>t.length)));this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(const[t,e]of this.trackingKeyframeList.entries()){const{featurePoints:n,imagePixels:r,imageProperties:s}=this._prebuild(e,a);this.featurePointsListT[t]=n,this.imagePixelsListT[t]=r,this.imagePropertiesListT[t]=s}this.kernelCaches={}}dummyRun(t){const e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const s=(a=e,[[(i=this.projectionTransform)[0][0]*a[0][0]+i[0][2]*a[2][0],i[0][0]*a[0][1]+i[0][2]*a[2][1],i[0][0]*a[0][2]+i[0][2]*a[2][2],i[0][0]*a[0][3]+i[0][2]*a[2][3]],[i[1][1]*a[1][0]+i[1][2]*a[2][0],i[1][1]*a[1][1]+i[1][2]*a[2][1],i[1][1]*a[1][2]+i[1][2]*a[2][2],i[1][1]*a[1][3]+i[1][2]*a[2][3]],[a[2][0],a[2][1],a[2][2],a[2][3]]]);var i,a;const o=this._buildAdjustedModelViewTransform(s),l=this.featurePointsListT[n],u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,t,n),{matchingPointsT:d,simT:p}=this._computeMatching(l,u,c,h),f=d.arraySync(),m=p.arraySync(),g=this.trackingKeyframeList[n],b=[],x=[],y=[];for(const[t,e]of f.entries())if(m[t]>.8&&t<g.points.length){y.push(t);const n=QM(s,e[0],e[1]);x.push(n),b.push({x:g.points[t].x/g.scale,y:g.points[t].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:f,trackedPoints:x,goodTrack:y}),o.dispose(),h.dispose(),d.dispose(),p.dispose(),{worldCoords:b,screenCoords:x,debugExtra:r}}_prebuild(t,e){return _i((()=>{const n=t.scale,r=[];for(let s=0;s<e;s++)s<t.points.length?r.push([t.points[s].x/n,t.points[s].y/n]):r.push([-1,-1]);const s=vs(t.data,[t.width*t.height]),i=vs([t.width,t.height,t.scale],[3]);return{featurePoints:vs(r,[r.length,2],"float32"),imagePixels:s,imageProperties:i}}))}_computeMatching(t,e,n,r){const s=r.shape[0],i=r.shape[1],a=t.shape[0];return this.kernelCaches.computeMatching||(this.kernelCaches.computeMatching=((t,e,n,r,s,i,a,o)=>[tD(6,13,n,r,s,i,a,o),eD(n,r,s,o),nD(o)])(0,0,10,1,21,s,i,a)),_i((()=>{const s=this.kernelCaches.computeMatching,i=this._compileAndRun(s[0],[t,e,n,r]),a=i.argMax(1);return{matchingPointsT:this._compileAndRun(s[1],[t,n,a]),simT:this._compileAndRun(s[2],[i,a])}}))}_computeProjection(t,e,n){const r=this.trackingKeyframeList[n].width,s=this.trackingKeyframeList[n].height,i=this.trackingKeyframeList[n].scale,a=r+"-"+s+"-"+i;return this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),this.kernelCaches.computeProjection[a]||(this.kernelCaches.computeProjection[a]=((t,e,n)=>({variableNames:["M","pixel"],outputShape:[t,e],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${n});\n\t      float x = float(coords[1]) / float(${n});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`}))(s,r,i)),_i((()=>{const n=this.kernelCaches.computeProjection[a];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return _i((()=>vs(t.map((t=>t.map((t=>t/1e3)))),[3,4])))}_compileAndRun(t,e){const n=Pi().compileAndRun(t,e);return Mi().makeTensorFromTensorInfo(n)}}(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:s}=await this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:s})}_glProjectionMatrix(t){const{projectionTransform:e,width:n,height:r,near:s,far:i}=t,a=[[2*e[0][0]/n,0,-(2*e[0][2]/n-1),0],[0,2*e[1][1]/r,-(2*e[1][2]/r-1),0],[0,0,-(i+s)/(i-s),-2*i*s/(i-s)],[0,0,-1,0]],o=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)o.push(a[e][t]);return o}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}async _matchImageTarget(t,e){if(t>=this.maxTrack)return;const n=[];for(const[t,e]of this.trackingStates.entries())e.isTracking||-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||n.push(t);const{targetIndex:r,modelViewTransform:s}=await this._detectAndMatch(e,n);-1!==r&&(this.trackingStates[r].isTracking=!0,this.trackingStates[r].currentModelViewTransform=s)}async _updateTrackingState(t,e){const n=this.trackingStates[e];if(!n.isTracking||!n.currentModelViewTransform)return;const r=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null!==r?n.currentModelViewTransform=r:n.isTracking=!1}_showAfterWarmup(t){const e=this.trackingStates[t];!e.showing&&e.isTracking&&(e.trackMiss=0,e.trackCount++,e.trackCount<=this.warmupTolerance||(e.showing=!0,e.trackingMatrix=null,e.filter.reset()))}_hideAfterMiss(t){const e=this.trackingStates[t];e.showing&&(e.isTracking?e.trackMiss=0:(e.trackCount=0,e.trackMiss++,e.trackMiss<this.missTolerance||(e.showing=!1,e.trackingMatrix=null,this.onUpdate?.({type:m_,targetIndex:t,worldMatrix:null}))))}_onTrackShow(t){const e=this.trackingStates[t];if(!e.showing||!e.currentModelViewTransform)return;const n=this._glModelViewMatrix(e.currentModelViewTransform,t);e.trackingMatrix=e.filter.filter(Date.now(),n),this.onUpdate?.({type:m_,worldMatrix:mD(e.trackingMatrix),targetIndex:t})}async _doVideoProcessing(t){for(;this.processingVideo;){const e=this.inputLoader.loadInput(t),n=this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0);await this._matchImageTarget(n,e);for(const[t]of this.trackingStates.entries())await this._updateTrackingState(e,t),this._showAfterWarmup(t),this._hideAfterMiss(t),this._onTrackShow(t);e.dispose(),this.onUpdate?.({type:"processDone"}),await fu()}}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.maxTrack;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new p_({minCutOff:this.filterMinCF,beta:this.filterBeta})});this._doVideoProcessing(t)}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async _workerMatch(t,e){return new Promise((async n=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}async track(t,e,n){const r=this.inputLoader.loadInput(t),s=this.tracker.track(r,e,n);return r.dispose(),s}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}async _workerTrackUpdate(t,e){return new Promise((async n=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:r,screenCoords:s}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,screenCoords:s,worldCoords:r})}))}};var b_=n(3379),x_=n.n(b_),y_=n(7795),w_=n.n(y_),v_=n(569),k_=n.n(v_),I_=n(3565),S_=n.n(I_),C_=n(9216),N_=n.n(C_),$_=n(4589),T_=n.n($_),E_=n(8485),R_={};R_.styleTagTransform=T_(),R_.setAttributes=S_(),R_.insert=k_().bind(null,"head"),R_.domAPI=w_(),R_.insertStyleElement=N_(),x_()(E_.Z,R_),E_.Z&&E_.Z.locals&&E_.Z.locals;const A_="yes",F_="hidden",M_=class{loadingModal;compatibilityModal;scanningMask;constructor({uiLoading:t,uiScanning:e,uiError:n}){this.loadingModal=t===A_?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '):document.querySelector(t),this.compatibilityModal=n===A_?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '):document.querySelector(n),this.scanningMask=e===A_?this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '):document.querySelector(e),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove(F_)}hideLoading(){this.loadingModal&&this.loadingModal.classList.add(F_)}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove(F_)}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add(F_)}showScanning(){this.scanningMask&&this.scanningMask.classList.remove(F_)}hideScanning(){this.scanningMask&&this.scanningMask.classList.add(F_)}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}},D_={Controller:g_,Compiler:c_,UI:M_};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE=D_),window.MINDAR.IMAGE.Controller||(window.MINDAR.IMAGE.Controller=g_),window.MINDAR.IMAGE.Compiler||(window.MINDAR.IMAGE.Compiler=c_),window.MINDAR.IMAGE.UI||(window.MINDAR.IMAGE.UI=M_)})()})();